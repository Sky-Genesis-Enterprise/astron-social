{"version":3,"file":"home_timeline-index-D_9oeVwc.js","sources":["../../app/javascript/mastodon/features/getting_started/components/announcements.jsx","../../app/javascript/mastodon/features/getting_started/containers/announcements_container.js","../../app/javascript/mastodon/features/home_timeline/components/column_settings.tsx","../../app/javascript/mastodon/features/home_timeline/components/critical_update_banner.tsx","../../app/javascript/mastodon/features/home_timeline/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent, useCallback, useMemo } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage, FormattedDate } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { animated, useTransition } from '@react-spring/web';\nimport ReactSwipeableViews from 'react-swipeable-views';\n\nimport elephantUIPlane from '@/images/elephant_ui_plane.svg';\nimport AddIcon from '@/material-icons/400-24px/add.svg?react';\nimport ChevronLeftIcon from '@/material-icons/400-24px/chevron_left.svg?react';\nimport ChevronRightIcon from '@/material-icons/400-24px/chevron_right.svg?react';\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport { Icon }  from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport EmojiPickerDropdown from 'mastodon/features/compose/containers/emoji_picker_dropdown_container';\nimport { unicodeMapping } from 'mastodon/features/emoji/emoji_unicode_mapping_light';\nimport { autoPlayGif, reduceMotion, disableSwiping, mascot } from 'mastodon/initial_state';\nimport { assetHost } from 'mastodon/utils/config';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n  previous: { id: 'lightbox.previous', defaultMessage: 'Previous' },\n  next: { id: 'lightbox.next', defaultMessage: 'Next' },\n});\n\nclass ContentWithRouter extends ImmutablePureComponent {\n  static propTypes = {\n    announcement: ImmutablePropTypes.map.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  componentDidMount () {\n    this._updateLinks();\n  }\n\n  componentDidUpdate () {\n    this._updateLinks();\n  }\n\n  _updateLinks () {\n    const node = this.node;\n\n    if (!node) {\n      return;\n    }\n\n    const links = node.querySelectorAll('a');\n\n    for (var i = 0; i < links.length; ++i) {\n      let link = links[i];\n\n      if (link.classList.contains('status-link')) {\n        continue;\n      }\n\n      link.classList.add('status-link');\n\n      let mention = this.props.announcement.get('mentions').find(item => link.href === item.get('url'));\n\n      if (mention) {\n        link.addEventListener('click', this.onMentionClick.bind(this, mention), false);\n        link.setAttribute('title', mention.get('acct'));\n      } else if (link.textContent[0] === '#' || (link.previousSibling && link.previousSibling.textContent && link.previousSibling.textContent[link.previousSibling.textContent.length - 1] === '#')) {\n        link.addEventListener('click', this.onHashtagClick.bind(this, link.text), false);\n      } else {\n        let status = this.props.announcement.get('statuses').find(item => link.href === item.get('url'));\n        if (status) {\n          link.addEventListener('click', this.onStatusClick.bind(this, status), false);\n        }\n        link.setAttribute('title', link.href);\n        link.classList.add('unhandled-link');\n      }\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('rel', 'noopener');\n    }\n  }\n\n  onMentionClick = (mention, e) => {\n    if (this.props.history && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.history.push(`/@${mention.get('acct')}`);\n    }\n  };\n\n  onHashtagClick = (hashtag, e) => {\n    hashtag = hashtag.replace(/^#/, '');\n\n    if (this.props.history&& e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.history.push(`/tags/${hashtag}`);\n    }\n  };\n\n  onStatusClick = (status, e) => {\n    if (this.props.history && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.history.push(`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`);\n    }\n  };\n\n  handleMouseEnter = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-original');\n    }\n  };\n\n  handleMouseLeave = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-static');\n    }\n  };\n\n  render () {\n    const { announcement } = this.props;\n\n    return (\n      <div\n        className='announcements__item__content translate'\n        ref={this.setRef}\n        dangerouslySetInnerHTML={{ __html: announcement.get('contentHtml') }}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      />\n    );\n  }\n\n}\n\nconst Content = withRouter(ContentWithRouter);\n\nclass Emoji extends PureComponent {\n\n  static propTypes = {\n    emoji: PropTypes.string.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    hovered: PropTypes.bool.isRequired,\n  };\n\n  render () {\n    const { emoji, emojiMap, hovered } = this.props;\n\n    if (unicodeMapping[emoji]) {\n      const { filename, shortCode } = unicodeMapping[this.props.emoji];\n      const title = shortCode ? `:${shortCode}:` : '';\n\n      return (\n        <img\n          draggable='false'\n          className='emojione'\n          alt={emoji}\n          title={title}\n          src={`${assetHost}/emoji/${filename}.svg`}\n        />\n      );\n    } else if (emojiMap.get(emoji)) {\n      const filename  = (autoPlayGif || hovered) ? emojiMap.getIn([emoji, 'url']) : emojiMap.getIn([emoji, 'static_url']);\n      const shortCode = `:${emoji}:`;\n\n      return (\n        <img\n          draggable='false'\n          className='emojione custom-emoji'\n          alt={shortCode}\n          title={shortCode}\n          src={filename}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n\n}\n\nclass Reaction extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcementId: PropTypes.string.isRequired,\n    reaction: ImmutablePropTypes.map.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    style: PropTypes.object,\n  };\n\n  state = {\n    hovered: false,\n  };\n\n  handleClick = () => {\n    const { reaction, announcementId, addReaction, removeReaction } = this.props;\n\n    if (reaction.get('me')) {\n      removeReaction(announcementId, reaction.get('name'));\n    } else {\n      addReaction(announcementId, reaction.get('name'));\n    }\n  };\n\n  handleMouseEnter = () => this.setState({ hovered: true });\n\n  handleMouseLeave = () => this.setState({ hovered: false });\n\n  render () {\n    const { reaction } = this.props;\n\n    let shortCode = reaction.get('name');\n\n    if (unicodeMapping[shortCode]) {\n      shortCode = unicodeMapping[shortCode].shortCode;\n    }\n\n    return (\n      <animated.button className={classNames('reactions-bar__item', { active: reaction.get('me') })} onClick={this.handleClick} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} title={`:${shortCode}:`} style={this.props.style}>\n        <span className='reactions-bar__item__emoji'><Emoji hovered={this.state.hovered} emoji={reaction.get('name')} emojiMap={this.props.emojiMap} /></span>\n        <span className='reactions-bar__item__count'><AnimatedNumber value={reaction.get('count')} /></span>\n      </animated.button>\n    );\n  }\n\n}\n\nconst ReactionsBar = ({\n  announcementId,\n  reactions,\n  emojiMap,\n  addReaction,\n  removeReaction,\n}) => {\n  const visibleReactions = useMemo(() => reactions.filter(x => x.get('count') > 0).toArray(), [reactions]);\n\n  const handleEmojiPick = useCallback((emoji) => {\n    addReaction(announcementId, emoji.native.replaceAll(/:/g, ''));\n  }, [addReaction, announcementId]);\n\n  const transitions = useTransition(visibleReactions, {\n    from: {\n      scale: 0,\n    },\n    enter: {\n      scale: 1,\n    },\n    leave: {\n      scale: 0,\n    },\n    keys: visibleReactions.map(x => x.get('name')),\n  });\n\n  return (\n    <div\n      className={classNames('reactions-bar', {\n        'reactions-bar--empty': visibleReactions.length === 0\n      })}\n    >\n      {transitions(({ scale }, reaction) => (\n        <Reaction\n          key={reaction.get('name')}\n          reaction={reaction}\n          style={{ transform: scale.to((s) => `scale(${s})`) }}\n          addReaction={addReaction}\n          removeReaction={removeReaction}\n          announcementId={announcementId}\n          emojiMap={emojiMap}\n        />\n      ))}\n\n      {visibleReactions.length < 8 && (\n        <EmojiPickerDropdown\n          onPickEmoji={handleEmojiPick}\n          button={<Icon id='plus' icon={AddIcon} />}\n        />\n      )}\n    </div>\n  );\n};\nReactionsBar.propTypes = {\n  announcementId: PropTypes.string.isRequired,\n  reactions: ImmutablePropTypes.list.isRequired,\n  addReaction: PropTypes.func.isRequired,\n  removeReaction: PropTypes.func.isRequired,\n  emojiMap: ImmutablePropTypes.map.isRequired,\n};\n\nclass Announcement extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcement: ImmutablePropTypes.map.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    selected: PropTypes.bool,\n  };\n\n  state = {\n    unread: !this.props.announcement.get('read'),\n  };\n\n  componentDidUpdate () {\n    const { selected, announcement } = this.props;\n    if (!selected && this.state.unread !== !announcement.get('read')) {\n      this.setState({ unread: !announcement.get('read') });\n    }\n  }\n\n  render () {\n    const { announcement } = this.props;\n    const { unread } = this.state;\n    const startsAt = announcement.get('starts_at') && new Date(announcement.get('starts_at'));\n    const endsAt = announcement.get('ends_at') && new Date(announcement.get('ends_at'));\n    const now = new Date();\n    const hasTimeRange = startsAt && endsAt;\n    const skipTime = announcement.get('all_day');\n\n    let timestamp = null;\n    if (hasTimeRange) {\n      const skipYear = startsAt.getFullYear() === endsAt.getFullYear() && endsAt.getFullYear() === now.getFullYear();\n      const skipEndDate = startsAt.getDate() === endsAt.getDate() && startsAt.getMonth() === endsAt.getMonth() && startsAt.getFullYear() === endsAt.getFullYear();\n      timestamp = (\n        <>\n          <FormattedDate value={startsAt} year={(skipYear || startsAt.getFullYear() === now.getFullYear()) ? undefined : 'numeric'} month='short' day='2-digit' hour={skipTime ? undefined : '2-digit'} minute={skipTime ? undefined : '2-digit'} /> - <FormattedDate value={endsAt} year={(skipYear || endsAt.getFullYear() === now.getFullYear()) ? undefined : 'numeric'} month={skipEndDate ? undefined : 'short'} day={skipEndDate ? undefined : '2-digit'} hour={skipTime ? undefined : '2-digit'} minute={skipTime ? undefined : '2-digit'} />\n        </>\n      );\n    } else {\n      const publishedAt = new Date(announcement.get('published_at'));\n      timestamp = (\n        <FormattedDate value={publishedAt} year={publishedAt.getFullYear() === now.getFullYear() ? undefined : 'numeric'} month='short' day='2-digit' hour={skipTime ? undefined : '2-digit'} minute={skipTime ? undefined : '2-digit'} />\n      );\n    }\n\n    return (\n      <div className='announcements__item'>\n        <strong className='announcements__item__range'>\n          <FormattedMessage id='announcement.announcement' defaultMessage='Announcement' />\n          <span> · {timestamp}</span>\n        </strong>\n\n        <Content announcement={announcement} />\n\n        <ReactionsBar\n          reactions={announcement.get('reactions')}\n          announcementId={announcement.get('id')}\n          addReaction={this.props.addReaction}\n          removeReaction={this.props.removeReaction}\n          emojiMap={this.props.emojiMap}\n        />\n\n        {unread && <span className='announcements__item__unread' />}\n      </div>\n    );\n  }\n\n}\n\nclass Announcements extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcements: ImmutablePropTypes.list,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    dismissAnnouncement: PropTypes.func.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    index: 0,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.announcements.size > 0 && state.index >= props.announcements.size) {\n      return { index: props.announcements.size - 1 };\n    } else {\n      return null;\n    }\n  }\n\n  componentDidMount () {\n    this._markAnnouncementAsRead();\n  }\n\n  componentDidUpdate () {\n    this._markAnnouncementAsRead();\n  }\n\n  _markAnnouncementAsRead () {\n    const { dismissAnnouncement, announcements } = this.props;\n    const { index } = this.state;\n    const announcement = announcements.get(announcements.size - 1 - index);\n    if (!announcement.get('read')) dismissAnnouncement(announcement.get('id'));\n  }\n\n  handleChangeIndex = index => {\n    this.setState({ index: index % this.props.announcements.size });\n  };\n\n  handleNextClick = () => {\n    this.setState({ index: (this.state.index + 1) % this.props.announcements.size });\n  };\n\n  handlePrevClick = () => {\n    this.setState({ index: (this.props.announcements.size + this.state.index - 1) % this.props.announcements.size });\n  };\n\n  render () {\n    const { announcements, intl } = this.props;\n    const { index } = this.state;\n\n    if (announcements.isEmpty()) {\n      return null;\n    }\n\n    return (\n      <div className='announcements'>\n        <img className='announcements__mastodon' alt='' draggable='false' src={mascot || elephantUIPlane} />\n\n        <div className='announcements__container'>\n          <ReactSwipeableViews animateHeight animateTransitions={!reduceMotion} index={index} onChangeIndex={this.handleChangeIndex}>\n            {announcements.map((announcement, idx) => (\n              <Announcement\n                key={announcement.get('id')}\n                announcement={announcement}\n                emojiMap={this.props.emojiMap}\n                addReaction={this.props.addReaction}\n                removeReaction={this.props.removeReaction}\n                intl={intl}\n                selected={index === idx}\n                disabled={disableSwiping}\n              />\n            )).reverse()}\n          </ReactSwipeableViews>\n\n          {announcements.size > 1 && (\n            <div className='announcements__pagination'>\n              <IconButton disabled={announcements.size === 1} title={intl.formatMessage(messages.previous)} icon='chevron-left' iconComponent={ChevronLeftIcon} onClick={this.handlePrevClick} size={13} />\n              <span>{index + 1} / {announcements.size}</span>\n              <IconButton disabled={announcements.size === 1} title={intl.formatMessage(messages.next)} icon='chevron-right' iconComponent={ChevronRightIcon} onClick={this.handleNextClick} size={13} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(Announcements);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\n\n\nimport { addReaction, removeReaction, dismissAnnouncement } from 'mastodon/actions/announcements';\n\nimport Announcements from '../components/announcements';\n\nconst customEmojiMap = createSelector([state => state.get('custom_emojis')], items => items.reduce((map, emoji) => map.set(emoji.get('shortcode'), emoji), ImmutableMap()));\n\nconst mapStateToProps = state => ({\n  announcements: state.getIn(['announcements', 'items']),\n  emojiMap: customEmojiMap(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dismissAnnouncement: id => dispatch(dismissAnnouncement(id)),\n  addReaction: (id, name) => dispatch(addReaction(id, name)),\n  removeReaction: (id, name) => dispatch(removeReaction(id, name)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Announcements);\n","/* eslint-disable @typescript-eslint/no-unsafe-call,\n                  @typescript-eslint/no-unsafe-return,\n                  @typescript-eslint/no-unsafe-assignment,\n                  @typescript-eslint/no-unsafe-member-access\n                  -- the settings store is not yet typed */\nimport { useCallback } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nimport { changeSetting } from '../../../actions/settings';\nimport SettingToggle from '../../notifications/components/setting_toggle';\n\nexport const ColumnSettings: React.FC = () => {\n  const settings = useAppSelector((state) => state.settings.get('home'));\n\n  const dispatch = useAppDispatch();\n  const onChange = useCallback(\n    (key: string[], checked: boolean) => {\n      dispatch(changeSetting(['home', ...key], checked));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className='column-settings'>\n      <section>\n        <div className='column-settings__row'>\n          <SettingToggle\n            prefix='home_timeline'\n            settings={settings}\n            settingPath={['shows', 'reblog']}\n            onChange={onChange}\n            label={\n              <FormattedMessage\n                id='home.column_settings.show_reblogs'\n                defaultMessage='Show boosts'\n              />\n            }\n          />\n\n          <SettingToggle\n            prefix='home_timeline'\n            settings={settings}\n            settingPath={['shows', 'quote']}\n            onChange={onChange}\n            label={\n              <FormattedMessage\n                id='home.column_settings.show_quotes'\n                defaultMessage='Show quotes'\n              />\n            }\n          />\n\n          <SettingToggle\n            prefix='home_timeline'\n            settings={settings}\n            settingPath={['shows', 'reply']}\n            onChange={onChange}\n            label={\n              <FormattedMessage\n                id='home.column_settings.show_replies'\n                defaultMessage='Show replies'\n              />\n            }\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { FormattedMessage } from 'react-intl';\n\nexport const CriticalUpdateBanner = () => (\n  <div className='warning-banner'>\n    <div className='warning-banner__message'>\n      <h1>\n        <FormattedMessage\n          id='home.pending_critical_update.title'\n          defaultMessage='Critical security update available!'\n        />\n      </h1>\n      <p>\n        <FormattedMessage\n          id='home.pending_critical_update.body'\n          defaultMessage='Please update your Mastodon server as soon as possible!'\n        />{' '}\n        <a href='/admin/software_updates'>\n          <FormattedMessage\n            id='home.pending_critical_update.link'\n            defaultMessage='See updates'\n          />\n        </a>\n      </p>\n    </div>\n  </div>\n);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\n\nimport { connect } from 'react-redux';\n\nimport CampaignIcon from '@/material-icons/400-24px/campaign.svg?react';\nimport HomeIcon from '@/material-icons/400-24px/home-fill.svg?react';\nimport { SymbolLogo } from 'mastodon/components/logo';\nimport { fetchAnnouncements, toggleShowAnnouncements } from 'mastodon/actions/announcements';\nimport { IconWithBadge } from 'mastodon/components/icon_with_badge';\nimport { NotSignedInIndicator } from 'mastodon/components/not_signed_in_indicator';\nimport AnnouncementsContainer from 'mastodon/features/getting_started/containers/announcements_container';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { criticalUpdatesPending } from 'mastodon/initial_state';\nimport { withBreakpoint } from 'mastodon/features/ui/hooks/useBreakpoint';\n\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport { expandHomeTimeline } from '../../actions/timelines';\nimport Column from '../../components/column';\nimport ColumnHeader from '../../components/column_header';\nimport StatusListContainer from '../ui/containers/status_list_container';\n\nimport { ColumnSettings } from './components/column_settings';\nimport { CriticalUpdateBanner } from './components/critical_update_banner';\n\nconst messages = defineMessages({\n  title: { id: 'column.home', defaultMessage: 'Home' },\n  show_announcements: { id: 'home.show_announcements', defaultMessage: 'Show announcements' },\n  hide_announcements: { id: 'home.hide_announcements', defaultMessage: 'Hide announcements' },\n});\n\nconst mapStateToProps = state => ({\n  hasUnread: state.getIn(['timelines', 'home', 'unread']) > 0,\n  isPartial: state.getIn(['timelines', 'home', 'isPartial']),\n  hasAnnouncements: !state.getIn(['announcements', 'items']).isEmpty(),\n  unreadAnnouncements: state.getIn(['announcements', 'items']).count(item => !item.get('read')),\n  showAnnouncements: state.getIn(['announcements', 'show']),\n});\n\nclass HomeTimeline extends PureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasUnread: PropTypes.bool,\n    isPartial: PropTypes.bool,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasAnnouncements: PropTypes.bool,\n    unreadAnnouncements: PropTypes.number,\n    showAnnouncements: PropTypes.bool,\n    matchesBreakpoint: PropTypes.bool,\n  };\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('HOME', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandHomeTimeline({ maxId }));\n  };\n\n  componentDidMount () {\n    setTimeout(() => this.props.dispatch(fetchAnnouncements()), 700);\n    this._checkIfReloadNeeded(false, this.props.isPartial);\n  }\n\n  componentDidUpdate (prevProps) {\n    this._checkIfReloadNeeded(prevProps.isPartial, this.props.isPartial);\n  }\n\n  componentWillUnmount () {\n    this._stopPolling();\n  }\n\n  _checkIfReloadNeeded (wasPartial, isPartial) {\n    const { dispatch } = this.props;\n\n    if (wasPartial === isPartial) {\n      return;\n    } else if (!wasPartial && isPartial) {\n      this.polling = setInterval(() => {\n        dispatch(expandHomeTimeline());\n      }, 3000);\n    } else if (wasPartial && !isPartial) {\n      this._stopPolling();\n    }\n  }\n\n  _stopPolling () {\n    if (this.polling) {\n      clearInterval(this.polling);\n      this.polling = null;\n    }\n  }\n\n  handleToggleAnnouncementsClick = (e) => {\n    e.stopPropagation();\n    this.props.dispatch(toggleShowAnnouncements());\n  };\n\n  render () {\n    const { intl, hasUnread, columnId, multiColumn, hasAnnouncements, unreadAnnouncements, showAnnouncements, matchesBreakpoint } = this.props;\n    const pinned = !!columnId;\n    const { signedIn } = this.props.identity;\n    const banners = [];\n\n    let announcementsButton;\n\n    if (hasAnnouncements) {\n      announcementsButton = (\n        <button\n          type='button'\n          className={classNames('column-header__button', { 'active': showAnnouncements })}\n          title={intl.formatMessage(showAnnouncements ? messages.hide_announcements : messages.show_announcements)}\n          aria-label={intl.formatMessage(showAnnouncements ? messages.hide_announcements : messages.show_announcements)}\n          onClick={this.handleToggleAnnouncementsClick}\n        >\n          <IconWithBadge id='bullhorn' icon={CampaignIcon} count={unreadAnnouncements} />\n        </button>\n      );\n    }\n\n    if (criticalUpdatesPending) {\n      banners.push(<CriticalUpdateBanner key='critical-update-banner' />);\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.title)}>\n        <ColumnHeader\n          icon='home'\n          iconComponent={matchesBreakpoint ? SymbolLogo : HomeIcon}\n          active={hasUnread}\n          title={intl.formatMessage(messages.title)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          extraButton={announcementsButton}\n          appendContent={hasAnnouncements && showAnnouncements && <AnnouncementsContainer />}\n        >\n          <ColumnSettings />\n        </ColumnHeader>\n\n        {signedIn ? (\n          <StatusListContainer\n            prepend={banners}\n            alwaysPrepend\n            trackScroll={!pinned}\n            scrollKey={`home_timeline-${columnId}`}\n            onLoadMore={this.handleLoadMore}\n            timelineId='home'\n            emptyMessage={<FormattedMessage id='empty_column.home' defaultMessage='Your home timeline is empty! Follow more people to fill it up.' />}\n            bindToDocument={!multiColumn}\n          />\n        ) : <NotSignedInIndicator />}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.title)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(withBreakpoint(withIdentity(injectIntl(HomeTimeline))));\n"],"names":["messages","defineMessages","close","id","defaultMessage","previous","next","ContentWithRouter","ImmutablePureComponent","setRef","c","node","onMentionClick","mention","e","props","history","button","ctrlKey","metaKey","preventDefault","push","get","onHashtagClick","hashtag","replace","onStatusClick","status","getIn","handleMouseEnter","currentTarget","autoPlayGif","emojis","querySelectorAll","i","length","emoji","src","getAttribute","handleMouseLeave","componentDidMount","_updateLinks","componentDidUpdate","links","link","classList","contains","add","announcement","find","item","href","addEventListener","bind","setAttribute","textContent","previousSibling","text","render","__html","__publicField","propTypes","ImmutablePropTypes","map","isRequired","WithRouterPropTypes","Content","withRouter","Emoji","PureComponent","emojiMap","hovered","unicodeMapping","filename","shortCode","title","jsx","assetHost","Reaction","state","handleClick","reaction","announcementId","addReaction","removeReaction","setState","animated","classNames","active","style","AnimatedNumber","PropTypes","string","func","object","ReactionsBar","reactions","visibleReactions","useMemo","filter","x","toArray","handleEmojiPick","useCallback","native","replaceAll","transitions","useTransition","from","scale","enter","leave","keys","jsxs","transform","to","s","EmojiPickerDropdown","Icon","AddIcon","Announcement","unread","selected","startsAt","Date","endsAt","now","hasTimeRange","skipTime","timestamp","skipYear","getFullYear","skipEndDate","getDate","getMonth","Fragment","FormattedDate","undefined","publishedAt","FormattedMessage","intl","bool","Announcements","index","handleChangeIndex","announcements","size","handleNextClick","handlePrevClick","getDerivedStateFromProps","_markAnnouncementAsRead","dismissAnnouncement","isEmpty","mascot","elephantUIPlane","ReactSwipeableViews","reduceMotion","idx","disableSwiping","reverse","IconButton","formatMessage","ChevronLeftIcon","ChevronRightIcon","list","Announcements$1","injectIntl","customEmojiMap","createSelector","items","reduce","set","ImmutableMap","mapStateToProps","mapDispatchToProps","dispatch","name","AnnouncementsContainer","connect","ColumnSettings","settings","useAppSelector","useAppDispatch","onChange","key","checked","changeSetting","SettingToggle","CriticalUpdateBanner","show_announcements","hide_announcements","hasUnread","isPartial","hasAnnouncements","unreadAnnouncements","count","showAnnouncements","HomeTimeline","handlePin","columnId","removeColumn","addColumn","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","handleLoadMore","maxId","expandHomeTimeline","handleToggleAnnouncementsClick","stopPropagation","toggleShowAnnouncements","setTimeout","fetchAnnouncements","_checkIfReloadNeeded","prevProps","componentWillUnmount","_stopPolling","wasPartial","polling","setInterval","clearInterval","multiColumn","matchesBreakpoint","pinned","signedIn","identity","banners","announcementsButton","IconWithBadge","CampaignIcon","criticalUpdatesPending","Column","ColumnHeader","SymbolLogo","HomeIcon","StatusListContainer","NotSignedInIndicator","Helmet","withBreakpoint","withIdentity"],"mappings":"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"}