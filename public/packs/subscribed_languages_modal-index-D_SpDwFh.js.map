{"version":3,"file":"subscribed_languages_modal-index-D_SpDwFh.js","sources":["../../app/javascript/mastodon/features/subscribed_languages_modal/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { createSelector } from '@reduxjs/toolkit';\nimport { is, List as ImmutableList, Set as ImmutableSet } from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport { followAccount } from 'mastodon/actions/accounts';\nimport { Button } from 'mastodon/components/button';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport Option from 'mastodon/features/report/components/option';\nimport { languages as preloadedLanguages } from 'mastodon/initial_state';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nconst getAccountLanguages = createSelector([\n  (state, accountId) => state.getIn(['timelines', `account:${accountId}`, 'items'], ImmutableList()),\n  state => state.get('statuses'),\n], (statusIds, statuses) =>\n  ImmutableSet(statusIds.map(statusId => statuses.get(statusId)).filter(status => !status.get('reblog')).map(status => status.get('language'))));\n\nconst mapStateToProps = (state, { accountId }) => ({\n  acct: state.getIn(['accounts', accountId, 'acct']),\n  availableLanguages: getAccountLanguages(state, accountId),\n  selectedLanguages: ImmutableSet(state.getIn(['relationships', accountId, 'languages']) || ImmutableList()),\n});\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n\n  onSubmit (languages) {\n    dispatch(followAccount(accountId, { languages }));\n  },\n\n});\n\nclass SubscribedLanguagesModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    accountId: PropTypes.string.isRequired,\n    acct: PropTypes.string.isRequired,\n    availableLanguages: ImmutablePropTypes.setOf(PropTypes.string),\n    selectedLanguages: ImmutablePropTypes.setOf(PropTypes.string),\n    onClose: PropTypes.func.isRequired,\n    languages: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n    intl: PropTypes.object.isRequired,\n    submit: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    languages: preloadedLanguages,\n  };\n\n  state = {\n    selectedLanguages: this.props.selectedLanguages,\n  };\n\n  handleLanguageToggle = (value, checked) => {\n    const { selectedLanguages } = this.state;\n\n    if (checked) {\n      this.setState({ selectedLanguages: selectedLanguages.add(value) });\n    } else {\n      this.setState({ selectedLanguages: selectedLanguages.delete(value) });\n    }\n  };\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.selectedLanguages.toArray());\n    this.props.onClose();\n  };\n\n  renderItem (value) {\n    const language = this.props.languages.find(language => language[0] === value);\n    const checked = this.state.selectedLanguages.includes(value);\n\n    if (!language) {\n      return null;\n    }\n\n    return (\n      <Option\n        key={value}\n        name='languages'\n        value={value}\n        label={language[1]}\n        checked={checked}\n        onToggle={this.handleLanguageToggle}\n        multiple\n      />\n    );\n  }\n\n  render () {\n    const { acct, availableLanguages, selectedLanguages, intl, onClose } = this.props;\n\n    return (\n      <div className='modal-root__modal report-dialog-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' iconComponent={CloseIcon} onClick={onClose} size={20} />\n          <FormattedMessage id='subscribed_languages.target' defaultMessage='Change subscribed languages for {target}' values={{ target: <strong>{acct}</strong> }} />\n        </div>\n\n        <div className='report-dialog-modal__container'>\n          <p className='report-dialog-modal__lead'><FormattedMessage id='subscribed_languages.lead' defaultMessage='Only posts in selected languages will appear on your home and list timelines after the change. Select none to receive posts in all languages.' /></p>\n\n          <div>\n            {availableLanguages.union(selectedLanguages).delete(null).map(value => this.renderItem(value))}\n          </div>\n\n          <div className='flex-spacer' />\n\n          <div className='report-dialog-modal__actions'>\n            <Button disabled={is(this.state.selectedLanguages, this.props.selectedLanguages)} onClick={this.handleSubmit}><FormattedMessage id='subscribed_languages.save' defaultMessage='Save changes' /></Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SubscribedLanguagesModal));\n"],"names":["messages","defineMessages","close","id","defaultMessage","getAccountLanguages","createSelector","state","accountId","getIn","ImmutableList","get","statusIds","statuses","ImmutableSet","map","statusId","filter","status","mapStateToProps","acct","availableLanguages","selectedLanguages","mapDispatchToProps","dispatch","onSubmit","languages","followAccount","SubscribedLanguagesModal","ImmutablePureComponent","props","handleLanguageToggle","value","checked","setState","add","delete","handleSubmit","toArray","onClose","renderItem","language","find","includes","jsx","Option","render","intl","jsxs","IconButton","formatMessage","CloseIcon","FormattedMessage","target","union","Button","is","__publicField","propTypes","PropTypes","string","isRequired","ImmutablePropTypes","setOf","func","arrayOf","object","submit","defaultProps","preloadedLanguages","index","connect","injectIntl"],"mappings":"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"}