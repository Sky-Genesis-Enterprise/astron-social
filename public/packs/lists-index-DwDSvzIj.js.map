{"version":3,"file":"lists-index-DwDSvzIj.js","sources":["../../app/javascript/mastodon/features/lists/index.tsx"],"sourcesContent":["import { useEffect, useMemo, useCallback } from 'react';\n\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport AddIcon from '@/material-icons/400-24px/add.svg?react';\nimport ListAltIcon from '@/material-icons/400-24px/list_alt.svg?react';\nimport MoreHorizIcon from '@/material-icons/400-24px/more_horiz.svg?react';\nimport SquigglyArrow from '@/svg-icons/squiggly_arrow.svg?react';\nimport { fetchLists } from 'mastodon/actions/lists';\nimport { openModal } from 'mastodon/actions/modal';\nimport { Column } from 'mastodon/components/column';\nimport { ColumnHeader } from 'mastodon/components/column_header';\nimport { Dropdown } from 'mastodon/components/dropdown_menu';\nimport { Icon } from 'mastodon/components/icon';\nimport ScrollableList from 'mastodon/components/scrollable_list';\nimport { getOrderedLists } from 'mastodon/selectors/lists';\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nconst messages = defineMessages({\n  heading: { id: 'column.lists', defaultMessage: 'Lists' },\n  create: { id: 'lists.create_list', defaultMessage: 'Create list' },\n  edit: { id: 'lists.edit', defaultMessage: 'Edit list' },\n  delete: { id: 'lists.delete', defaultMessage: 'Delete list' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n});\n\nconst ListItem: React.FC<{\n  id: string;\n  title: string;\n}> = ({ id, title }) => {\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n\n  const handleDeleteClick = useCallback(() => {\n    dispatch(\n      openModal({\n        modalType: 'CONFIRM_DELETE_LIST',\n        modalProps: {\n          listId: id,\n        },\n      }),\n    );\n  }, [dispatch, id]);\n\n  const menu = useMemo(\n    () => [\n      { text: intl.formatMessage(messages.edit), to: `/lists/${id}/edit` },\n      { text: intl.formatMessage(messages.delete), action: handleDeleteClick },\n    ],\n    [intl, id, handleDeleteClick],\n  );\n\n  return (\n    <div className='lists__item'>\n      <Link to={`/lists/${id}`} className='lists__item__title'>\n        <Icon id='list-ul' icon={ListAltIcon} />\n        <span>{title}</span>\n      </Link>\n\n      <Dropdown\n        scrollKey='lists'\n        items={menu}\n        icon='ellipsis-h'\n        iconComponent={MoreHorizIcon}\n        title={intl.formatMessage(messages.more)}\n      />\n    </div>\n  );\n};\n\nconst Lists: React.FC<{\n  multiColumn?: boolean;\n}> = ({ multiColumn }) => {\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n  const lists = useAppSelector((state) => getOrderedLists(state));\n\n  useEffect(() => {\n    void dispatch(fetchLists());\n  }, [dispatch]);\n\n  const emptyMessage = (\n    <>\n      <span>\n        <FormattedMessage\n          id='lists.no_lists_yet'\n          defaultMessage='No lists yet.'\n        />\n        <br />\n        <FormattedMessage\n          id='lists.create_a_list_to_organize'\n          defaultMessage='Create a new list to organize your Home feed'\n        />\n      </span>\n\n      <SquigglyArrow className='empty-column-indicator__arrow' />\n    </>\n  );\n\n  return (\n    <Column\n      bindToDocument={!multiColumn}\n      label={intl.formatMessage(messages.heading)}\n    >\n      <ColumnHeader\n        title={intl.formatMessage(messages.heading)}\n        icon='list-ul'\n        iconComponent={ListAltIcon}\n        multiColumn={multiColumn}\n        extraButton={\n          <Link\n            to='/lists/new'\n            className='column-header__button'\n            title={intl.formatMessage(messages.create)}\n            aria-label={intl.formatMessage(messages.create)}\n          >\n            <Icon id='plus' icon={AddIcon} />\n          </Link>\n        }\n      />\n\n      <ScrollableList\n        scrollKey='lists'\n        emptyMessage={emptyMessage}\n        bindToDocument={!multiColumn}\n      >\n        {lists.map((list) => (\n          <ListItem key={list.id} id={list.id} title={list.title} />\n        ))}\n      </ScrollableList>\n\n      <Helmet>\n        <title>{intl.formatMessage(messages.heading)}</title>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Lists;\n"],"names":["messages","defineMessages","heading","id","defaultMessage","create","edit","delete","more","ListItem","title","dispatch","useAppDispatch","intl","useIntl","handleDeleteClick","useCallback","openModal","modalType","modalProps","listId","menu","useMemo","text","formatMessage","to","action","jsxs","Link","jsx","Icon","ListAltIcon","Dropdown","MoreHorizIcon","Lists","multiColumn","lists","useAppSelector","state","getOrderedLists","useEffect","fetchLists","emptyMessage","Fragment","FormattedMessage","SquigglyArrow","Column","ColumnHeader","AddIcon","ScrollableList","map","list","Helmet"],"mappings":"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"}