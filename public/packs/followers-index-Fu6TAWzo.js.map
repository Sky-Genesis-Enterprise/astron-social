{"version":3,"file":"followers-index-Fu6TAWzo.js","sources":["../../app/javascript/mastodon/features/followers/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport { Account } from 'mastodon/components/account';\nimport { TimelineHint } from 'mastodon/components/timeline_hint';\nimport { AccountHeader } from 'mastodon/features/account_timeline/components/account_header';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { normalizeForLookup } from 'mastodon/reducers/accounts_map';\nimport { getAccountHidden } from 'mastodon/selectors/accounts';\nimport { useAppSelector } from 'mastodon/store';\n\nimport {\n  lookupAccount,\n  fetchAccount,\n  fetchFollowers,\n  expandFollowers,\n} from '../../actions/accounts';\nimport { ColumnBackButton } from '../../components/column_back_button';\nimport { LoadingIndicator } from '../../components/loading_indicator';\nimport ScrollableList from '../../components/scrollable_list';\nimport { LimitedAccountHint } from '../account_timeline/components/limited_account_hint';\nimport Column from '../ui/components/column';\n\nconst mapStateToProps = (state, { params: { acct, id } }) => {\n  const accountId = id || state.accounts_map[normalizeForLookup(acct)];\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    remote: !!(state.getIn(['accounts', accountId, 'acct']) !== state.getIn(['accounts', accountId, 'username'])),\n    remoteUrl: state.getIn(['accounts', accountId, 'url']),\n    isAccount: !!state.getIn(['accounts', accountId]),\n    accountIds: state.getIn(['user_lists', 'followers', accountId, 'items']),\n    hasMore: !!state.getIn(['user_lists', 'followers', accountId, 'next']),\n    isLoading: state.getIn(['user_lists', 'followers', accountId, 'isLoading'], true),\n    suspended: state.getIn(['accounts', accountId, 'suspended'], false),\n    hideCollections: state.getIn(['accounts', accountId, 'hide_collections'], false),\n    hidden: getAccountHidden(state, accountId),\n    blockedBy: state.getIn(['relationships', accountId, 'blocked_by'], false),\n  };\n};\n\nconst RemoteHint = ({ accountId, url }) => {\n  const acct = useAppSelector(state => state.accounts.get(accountId)?.acct);\n  const domain = acct ? acct.split('@')[1] : undefined;\n\n  return (\n    <TimelineHint\n      url={url}\n      message={<FormattedMessage id='hints.profiles.followers_may_be_missing' defaultMessage='Followers for this profile may be missing.' />}\n      label={<FormattedMessage id='hints.profiles.see_more_followers' defaultMessage='See more followers on {domain}' values={{ domain: <strong>{domain}</strong> }} />}\n    />\n  );\n};\n\nRemoteHint.propTypes = {\n  url: PropTypes.string.isRequired,\n  accountId: PropTypes.string.isRequired,\n};\n\nclass Followers extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.shape({\n      acct: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n    accountId: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    blockedBy: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    suspended: PropTypes.bool,\n    hidden: PropTypes.bool,\n    remote: PropTypes.bool,\n    remoteUrl: PropTypes.string,\n    multiColumn: PropTypes.bool,\n  };\n\n  _load () {\n    const { accountId, isAccount, dispatch } = this.props;\n\n    if (!isAccount) dispatch(fetchAccount(accountId));\n    dispatch(fetchFollowers(accountId));\n  }\n\n  componentDidMount () {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (accountId) {\n      this._load();\n    } else {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (prevProps.accountId !== accountId && accountId) {\n      this._load();\n    } else if (prevProps.params.acct !== acct) {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFollowers(this.props.accountId));\n  }, 300, { leading: true });\n\n  render () {\n    const { accountId, accountIds, hasMore, blockedBy, isAccount, multiColumn, isLoading, suspended, hidden, remote, remoteUrl, hideCollections } = this.props;\n\n    if (!isAccount) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let emptyMessage;\n\n    const forceEmptyState = blockedBy || suspended || hidden;\n\n    if (suspended) {\n      emptyMessage = <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />;\n    } else if (hidden) {\n      emptyMessage = <LimitedAccountHint accountId={accountId} />;\n    } else if (blockedBy) {\n      emptyMessage = <FormattedMessage id='empty_column.account_unavailable' defaultMessage='Profile unavailable' />;\n    } else if (hideCollections && accountIds.isEmpty()) {\n      emptyMessage = <FormattedMessage id='empty_column.account_hides_collections' defaultMessage='This user has chosen to not make this information available' />;\n    } else if (remote && accountIds.isEmpty()) {\n      emptyMessage = <RemoteHint accountId={accountId} url={remoteUrl} />;\n    } else {\n      emptyMessage = <FormattedMessage id='account.followers.empty' defaultMessage='No one follows this user yet.' />;\n    }\n\n    const remoteMessage = remote ? <RemoteHint accountId={accountId} url={remoteUrl} /> : null;\n\n    return (\n      <Column>\n        <ColumnBackButton />\n\n        <ScrollableList\n          scrollKey='followers'\n          hasMore={!forceEmptyState && hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          prepend={<AccountHeader accountId={this.props.accountId} hideTabs />}\n          alwaysPrepend\n          append={remoteMessage}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {forceEmptyState ? [] : accountIds.map(id =>\n            <Account key={id} id={id} />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(Followers);\n"],"names":["mapStateToProps","state","params","acct","id","accountId","accounts_map","normalizeForLookup","remote","getIn","remoteUrl","isAccount","accountIds","hasMore","isLoading","suspended","hideCollections","hidden","getAccountHidden","blockedBy","RemoteHint","url","useAppSelector","accounts","get","domain","split","undefined","TimelineHint","jsx","FormattedMessage","Followers","ImmutablePureComponent","handleLoadMore","debounce","props","dispatch","expandFollowers","leading","_load","fetchAccount","fetchFollowers","componentDidMount","lookupAccount","componentDidUpdate","prevProps","render","multiColumn","BundleColumnError","Column","LoadingIndicator","emptyMessage","forceEmptyState","LimitedAccountHint","isEmpty","remoteMessage","ColumnBackButton","ScrollableList","AccountHeader","map","Account","__publicField","propTypes","PropTypes","shape","string","isRequired","func","ImmutablePropTypes","list","bool","index","connect"],"mappings":"opEA8BA,MAAMA,EAAkBA,CAACC,EAAO,CAAEC,OAAQ,CAAEC,KAAAA,EAAMC,GAAAA,CAAAA,CAAK,IAAM,CAC3D,MAAMC,EAAYD,GAAMH,EAAMK,aAAaC,EAAmBJ,CAAI,CAAC,EAEnE,OAAKE,EAME,CACLA,UAAAA,EACAG,OAAWP,EAAMQ,MAAM,CAAC,WAAYJ,EAAW,MAAM,CAAC,IAAMJ,EAAMQ,MAAM,CAAC,WAAYJ,EAAW,UAAU,CAAC,EAC3GK,UAAWT,EAAMQ,MAAM,CAAC,WAAYJ,EAAW,KAAK,CAAC,EACrDM,UAAW,CAAC,CAACV,EAAMQ,MAAM,CAAC,WAAYJ,CAAS,CAAC,EAChDO,WAAYX,EAAMQ,MAAM,CAAC,aAAc,YAAaJ,EAAW,OAAO,CAAC,EACvEQ,QAAS,CAAC,CAACZ,EAAMQ,MAAM,CAAC,aAAc,YAAaJ,EAAW,MAAM,CAAC,EACrES,UAAWb,EAAMQ,MAAM,CAAC,aAAc,YAAaJ,EAAW,WAAW,EAAG,EAAI,EAChFU,UAAWd,EAAMQ,MAAM,CAAC,WAAYJ,EAAW,WAAW,EAAG,EAAK,EAClEW,gBAAiBf,EAAMQ,MAAM,CAAC,WAAYJ,EAAW,kBAAkB,EAAG,EAAK,EAC/EY,OAAQC,EAAiBjB,EAAOI,CAAS,EACzCc,UAAWlB,EAAMQ,MAAM,CAAC,gBAAiBJ,EAAW,YAAY,EAAG,EAAK,CAAA,EAhBjE,CACLS,UAAW,EAAA,CAiBjB,EAEMM,EAAaA,CAAC,CAAEf,UAAAA,EAAWgB,IAAAA,CAAI,IAAM,CACzC,MAAMlB,EAAOmB,EAAerB,GAAAA,OAASA,OAAAA,EAAAA,EAAMsB,SAASC,IAAInB,CAAS,IAA5BJ,YAAAA,EAA+BE,KAAI,EAClEsB,EAAStB,EAAOA,EAAKuB,MAAM,GAAG,EAAE,CAAC,EAAIC,OAE3C,aACGC,EAAA,CACC,IAAAP,EACA,QAASQ,EAAAA,IAACC,EAAA,CAAiB,6CAA6C,eAAe,+CACvF,MAAOD,EAAAA,IAACC,EAAA,CAAiB,GAAE,oCAAqC,eAAe,iCAAiC,OAAQ,CAAEL,OAAQI,EAAAA,IAAC,SAAA,CAAQJ,SAAAA,CAAAA,CAAO,CAAA,EAAY,CAAA,CAAI,CAGxK,EAOA,MAAMM,UAAkBC,CAAuB,CAA/C,kCAgDEC,EAAAA,sBAAiBC,EAAS,IAAM,CAC9B,KAAKC,MAAMC,SAASC,EAAgB,KAAKF,MAAM9B,SAAS,CAAC,CAAA,EACxD,IAAK,CAAEiC,QAAS,EAAA,CAAM,GA7BzBC,OAAS,CACP,KAAM,CAAElC,UAAAA,EAAWM,UAAAA,EAAWyB,SAAAA,CAAAA,EAAa,KAAKD,MAE3CxB,GAAWyB,EAASI,EAAanC,CAAS,CAAC,EAChD+B,EAASK,EAAepC,CAAS,CAAC,CAAA,CAGpCqC,mBAAqB,CACnB,KAAM,CAAExC,OAAQ,CAAEC,KAAAA,CAAAA,EAAQE,UAAAA,EAAW+B,SAAAA,CAAAA,EAAa,KAAKD,MAEnD9B,EACF,KAAKkC,MAAAA,EAELH,EAASO,EAAcxC,CAAI,CAAC,CAC9B,CAGFyC,mBAAoBC,EAAW,CAC7B,KAAM,CAAE3C,OAAQ,CAAEC,KAAAA,CAAAA,EAAQE,UAAAA,EAAW+B,SAAAA,CAAAA,EAAa,KAAKD,MAEnDU,EAAUxC,YAAcA,GAAaA,EACvC,KAAKkC,MAAAA,EACIM,EAAU3C,OAAOC,OAASA,GACnCiC,EAASO,EAAcxC,CAAI,CAAC,CAC9B,CAOF2C,QAAU,CACR,KAAM,CAAEzC,UAAAA,EAAWO,WAAAA,EAAYC,QAAAA,EAASM,UAAAA,EAAWR,UAAAA,EAAWoC,YAAAA,EAAajC,UAAAA,EAAWC,UAAAA,EAAWE,OAAAA,EAAQT,OAAAA,EAAQE,UAAAA,EAAWM,gBAAAA,CAAAA,EAAoB,KAAKmB,MAErJ,GAAI,CAACxB,EACH,OACEkB,EAAAA,IAACmB,EAAA,CAAkB,YAAAD,EAA0B,UAAU,SAAA,CAAS,EAIpE,GAAI,CAACnC,EACH,OACEiB,EAAAA,IAACoB,EAAA,CACC,SAAApB,EAAAA,IAACqB,EAAA,CAAA,CAAgB,EACnB,EAIJ,IAAIC,EAEJ,MAAMC,EAAkBjC,GAAaJ,GAAaE,EAE9CF,EACFoC,EAAetB,EAAAA,IAACC,EAAA,CAAiB,oCAAoC,eAAe,oBAAmB,EAC9Fb,EACTkC,EAAetB,EAAAA,IAACwB,GAAmB,UAAAhD,CAAA,CAAqB,EAC/Cc,EACTgC,EAAetB,EAAAA,IAACC,EAAA,CAAiB,sCAAsC,eAAe,sBAAqB,EAClGd,GAAmBJ,EAAW0C,UACvCH,EAAetB,EAAAA,IAACC,EAAA,CAAiB,4CAA4C,eAAe,8DAA6D,EAChJtB,GAAUI,EAAW0C,UAC9BH,EAAetB,EAAAA,IAACT,EAAA,CAAW,UAAAf,EAAsB,IAAKK,EAAU,EAEhEyC,EAAetB,EAAAA,IAACC,EAAA,CAAiB,6BAA6B,eAAe,gCAA+B,EAG9G,MAAMyB,EAAgB/C,EAASqB,EAAAA,IAACT,GAAW,UAAAf,EAAsB,IAAKK,EAAU,EAAM,KAEtF,cACGuC,EAAA,CACC,SAAA,CAAApB,EAAAA,IAAC2B,EAAA,EAAgB,QAEhBC,EAAA,CACC,UAAU,YACV,QAAS,CAACL,GAAmBvC,EAC7B,UAAAC,EACA,WAAY,KAAKmB,eACjB,QAASJ,EAAAA,IAAC6B,GAAc,UAAW,KAAKvB,MAAM9B,UAAW,SAAQ,EAAA,CAAA,EACjE,cAAa,GACb,OAAQkD,EACR,aAAAJ,EACA,eAAgB,CAACJ,EAEhBK,SAAAA,EAAkB,CAAA,EAAKxC,EAAW+C,IAAIvD,GACrCyB,EAAAA,IAAC+B,GAAiB,GAAAxD,CAAA,EAAJA,CAAW,CAC3B,CAAA,CACF,CAAA,EACF,CAAA,CAIN,CA9GEyD,EAFI9B,EAEG+B,YAAY,CACjB5D,OAAQ6D,EAAUC,MAAM,CACtB7D,KAAM4D,EAAUE,OAChB7D,GAAI2D,EAAUE,MAAAA,CACf,EAAEC,WACH7D,UAAW0D,EAAUE,OACrB7B,SAAU2B,EAAUI,KAAKD,WACzBtD,WAAYwD,EAAmBC,KAC/BxD,QAASkD,EAAUO,KACnBxD,UAAWiD,EAAUO,KACrBnD,UAAW4C,EAAUO,KACrB3D,UAAWoD,EAAUO,KACrBvD,UAAWgD,EAAUO,KACrBrD,OAAQ8C,EAAUO,KAClB9D,OAAQuD,EAAUO,KAClB5D,UAAWqD,EAAUE,OACrBlB,YAAagB,EAAUO,IAAAA,GAgG3B,MAAAC,GAAeC,EAAQxE,CAAe,EAAE+B,CAAS"}