{"version":3,"file":"column_header-FN7GyEAs.js","sources":["../../app/javascript/mastodon/features/ui/util/columns_context.tsx","../../app/javascript/material-icons/400-24px/arrow_back.svg?react","../../app/javascript/material-icons/400-24px/unfold_less.svg?react","../../app/javascript/material-icons/400-24px/unfold_more.svg?react","../../app/javascript/mastodon/components/column_header.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\nimport { createContext, useContext, useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport const ColumnsContext = createContext<{\n  tabsBarElement: HTMLElement | null;\n  setTabsBarElement: (element: HTMLElement) => void;\n  multiColumn: boolean;\n}>({\n  tabsBarElement: null,\n  multiColumn: false,\n  setTabsBarElement: () => undefined, // no-op\n});\n\nexport function useColumnsContext() {\n  return useContext(ColumnsContext);\n}\n\nexport const ButtonInTabsBar: React.FC<{\n  children: ReactElement | string | undefined;\n}> = ({ children }) => {\n  const { multiColumn, tabsBarElement } = useColumnsContext();\n\n  if (multiColumn) {\n    return children;\n  } else if (!tabsBarElement) {\n    return children;\n  } else {\n    return createPortal(children, tabsBarElement);\n  }\n};\n\ntype ContextValue = React.ContextType<typeof ColumnsContext>;\n\nexport const ColumnsContextProvider: React.FC<\n  React.PropsWithChildren<{ multiColumn: boolean }>\n> = ({ multiColumn, children }) => {\n  const [tabsBarElement, setTabsBarElement] =\n    useState<ContextValue['tabsBarElement']>(null);\n\n  const contextValue = useMemo<ContextValue>(\n    () => ({ multiColumn, tabsBarElement, setTabsBarElement }),\n    [multiColumn, tabsBarElement],\n  );\n\n  return (\n    <ColumnsContext.Provider value={contextValue}>\n      {children}\n    </ColumnsContext.Provider>\n  );\n};\n","import * as React from \"react\";\nconst SvgArrowBack = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z\" }));\nexport default SvgArrowBack;\n","import * as React from \"react\";\nconst SvgUnfoldLess = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m356-160-56-56 180-180 180 180-56 56-124-124-124 124Zm124-404L300-744l56-56 124 124 124-124 56 56-180 180Z\" }));\nexport default SvgUnfoldLess;\n","import * as React from \"react\";\nconst SvgUnfoldMore = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M480-120 300-300l58-58 122 122 122-122 58 58-180 180ZM358-598l-58-58 180-180 180 180-58 58-122-122-122 122Z\" }));\nexport default SvgUnfoldMore;\n","import { useCallback, useState } from 'react';\n\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport AddIcon from '@/material-icons/400-24px/add.svg?react';\nimport ArrowBackIcon from '@/material-icons/400-24px/arrow_back.svg?react';\nimport ChevronLeftIcon from '@/material-icons/400-24px/chevron_left.svg?react';\nimport ChevronRightIcon from '@/material-icons/400-24px/chevron_right.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport UnfoldLessIcon from '@/material-icons/400-24px/unfold_less.svg?react';\nimport UnfoldMoreIcon from '@/material-icons/400-24px/unfold_more.svg?react';\nimport type { IconProp } from 'mastodon/components/icon';\nimport { Icon } from 'mastodon/components/icon';\nimport { ButtonInTabsBar } from 'mastodon/features/ui/util/columns_context';\nimport { useIdentity } from 'mastodon/identity_context';\n\nimport { useAppHistory } from './router';\n\nconst messages = defineMessages({\n  show: { id: 'column_header.show_settings', defaultMessage: 'Show settings' },\n  hide: { id: 'column_header.hide_settings', defaultMessage: 'Hide settings' },\n  moveLeft: {\n    id: 'column_header.moveLeft_settings',\n    defaultMessage: 'Move column to the left',\n  },\n  moveRight: {\n    id: 'column_header.moveRight_settings',\n    defaultMessage: 'Move column to the right',\n  },\n  back: { id: 'column_back_button.label', defaultMessage: 'Back' },\n});\n\nconst BackButton: React.FC<{\n  onlyIcon: boolean;\n}> = ({ onlyIcon }) => {\n  const history = useAppHistory();\n  const intl = useIntl();\n\n  const handleBackClick = useCallback(() => {\n    if (history.location.state?.fromMastodon) {\n      history.goBack();\n    } else {\n      history.push('/');\n    }\n  }, [history]);\n\n  return (\n    <button\n      onClick={handleBackClick}\n      className={classNames('column-header__back-button', {\n        compact: onlyIcon,\n      })}\n      aria-label={intl.formatMessage(messages.back)}\n    >\n      <Icon\n        id='chevron-left'\n        icon={ArrowBackIcon}\n        className='column-back-button__icon'\n      />\n      {!onlyIcon && (\n        <FormattedMessage id='column_back_button.label' defaultMessage='Back' />\n      )}\n    </button>\n  );\n};\n\nexport interface Props {\n  title?: string;\n  icon?: string;\n  iconComponent?: IconProp;\n  active?: boolean;\n  children?: React.ReactNode;\n  pinned?: boolean;\n  multiColumn?: boolean;\n  extraButton?: React.ReactNode;\n  showBackButton?: boolean;\n  placeholder?: boolean;\n  appendContent?: React.ReactNode;\n  collapseIssues?: boolean;\n  onClick?: () => void;\n  onMove?: (arg0: number) => void;\n  onPin?: () => void;\n}\n\nexport const ColumnHeader: React.FC<Props> = ({\n  title,\n  icon,\n  iconComponent,\n  active,\n  children,\n  pinned,\n  multiColumn,\n  extraButton,\n  showBackButton,\n  placeholder,\n  appendContent,\n  collapseIssues,\n  onClick,\n  onMove,\n  onPin,\n}) => {\n  const intl = useIntl();\n  const { signedIn } = useIdentity();\n  const history = useAppHistory();\n  const [collapsed, setCollapsed] = useState(true);\n  const [animating, setAnimating] = useState(false);\n\n  const handleToggleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      setCollapsed((value) => !value);\n      setAnimating(true);\n    },\n    [setCollapsed, setAnimating],\n  );\n\n  const handleTitleClick = useCallback(() => {\n    onClick?.();\n  }, [onClick]);\n\n  const handleMoveLeft = useCallback(() => {\n    onMove?.(-1);\n  }, [onMove]);\n\n  const handleMoveRight = useCallback(() => {\n    onMove?.(1);\n  }, [onMove]);\n\n  const handleTransitionEnd = useCallback(() => {\n    setAnimating(false);\n  }, [setAnimating]);\n\n  const handlePin = useCallback(() => {\n    if (!pinned) {\n      history.replace('/');\n    }\n\n    onPin?.();\n  }, [history, pinned, onPin]);\n\n  const wrapperClassName = classNames('column-header__wrapper', {\n    active,\n  });\n\n  const buttonClassName = classNames('column-header', {\n    active,\n  });\n\n  const collapsibleClassName = classNames('column-header__collapsible', {\n    collapsed,\n    animating,\n  });\n\n  const collapsibleButtonClassName = classNames('column-header__button', {\n    active: !collapsed,\n  });\n\n  let extraContent, pinButton, moveButtons, backButton, collapseButton;\n\n  if (children) {\n    extraContent = (\n      <div key='extra-content' className='column-header__collapsible__extra'>\n        {children}\n      </div>\n    );\n  }\n\n  if (multiColumn && pinned) {\n    pinButton = (\n      <button\n        className='text-btn column-header__setting-btn'\n        onClick={handlePin}\n      >\n        <Icon id='times' icon={CloseIcon} />{' '}\n        <FormattedMessage id='column_header.unpin' defaultMessage='Unpin' />\n      </button>\n    );\n\n    moveButtons = (\n      <div className='column-header__setting-arrows'>\n        <button\n          title={intl.formatMessage(messages.moveLeft)}\n          aria-label={intl.formatMessage(messages.moveLeft)}\n          className='icon-button column-header__setting-btn'\n          onClick={handleMoveLeft}\n        >\n          <Icon id='chevron-left' icon={ChevronLeftIcon} />\n        </button>\n        <button\n          title={intl.formatMessage(messages.moveRight)}\n          aria-label={intl.formatMessage(messages.moveRight)}\n          className='icon-button column-header__setting-btn'\n          onClick={handleMoveRight}\n        >\n          <Icon id='chevron-right' icon={ChevronRightIcon} />\n        </button>\n      </div>\n    );\n  } else if (multiColumn && onPin) {\n    pinButton = (\n      <button\n        className='text-btn column-header__setting-btn'\n        onClick={handlePin}\n      >\n        <Icon id='plus' icon={AddIcon} />{' '}\n        <FormattedMessage id='column_header.pin' defaultMessage='Pin' />\n      </button>\n    );\n  }\n\n  if (\n    !pinned &&\n    ((multiColumn && history.location.state?.fromMastodon) || showBackButton)\n  ) {\n    backButton = <BackButton onlyIcon={!!title} />;\n  }\n\n  const collapsedContent = [extraContent];\n\n  if (multiColumn) {\n    collapsedContent.push(\n      <div key='buttons' className='column-header__advanced-buttons'>\n        {pinButton}\n        {moveButtons}\n      </div>,\n    );\n  }\n\n  if (signedIn && (children || (multiColumn && onPin))) {\n    collapseButton = (\n      <button\n        className={collapsibleButtonClassName}\n        title={intl.formatMessage(collapsed ? messages.show : messages.hide)}\n        aria-label={intl.formatMessage(\n          collapsed ? messages.show : messages.hide,\n        )}\n        onClick={handleToggleClick}\n      >\n        <i className='icon-with-badge'>\n          <Icon\n            id='sliders'\n            icon={collapsed ? UnfoldMoreIcon : UnfoldLessIcon}\n          />\n          {collapseIssues && <i className='icon-with-badge__issue-badge' />}\n        </i>\n      </button>\n    );\n  }\n\n  const hasIcon = icon && iconComponent;\n  const hasTitle = hasIcon && title;\n\n  const component = (\n    <div className={wrapperClassName}>\n      <h1 className={buttonClassName}>\n        {hasTitle && (\n          <>\n            {backButton}\n\n            <button onClick={handleTitleClick} className='column-header__title'>\n              {!backButton && (\n                <Icon\n                  id={icon}\n                  icon={iconComponent}\n                  className='column-header__icon'\n                />\n              )}\n              {title}\n            </button>\n          </>\n        )}\n\n        {!hasTitle && backButton}\n\n        <div className='column-header__buttons'>\n          {extraButton}\n          {collapseButton}\n        </div>\n      </h1>\n\n      <div\n        className={collapsibleClassName}\n        tabIndex={collapsed ? -1 : undefined}\n        onTransitionEnd={handleTransitionEnd}\n      >\n        <div className='column-header__collapsible-inner'>\n          {(!collapsed || animating) && collapsedContent}\n        </div>\n      </div>\n\n      {appendContent}\n    </div>\n  );\n\n  if (placeholder) {\n    return component;\n  } else {\n    return <ButtonInTabsBar>{component}</ButtonInTabsBar>;\n  }\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default ColumnHeader;\n"],"names":["ColumnsContext","createContext","tabsBarElement","multiColumn","setTabsBarElement","useColumnsContext","useContext","ButtonInTabsBar","children","createPortal","ColumnsContextProvider","useState","contextValue","useMemo","SvgArrowBack","props","React.createElement","SvgUnfoldLess","SvgUnfoldMore","messages","defineMessages","show","id","defaultMessage","hide","moveLeft","moveRight","back","BackButton","onlyIcon","history","useAppHistory","intl","useIntl","handleBackClick","useCallback","location","state","fromMastodon","goBack","push","classNames","compact","formatMessage","jsx","Icon","ArrowBackIcon","FormattedMessage","ColumnHeader","title","icon","iconComponent","active","pinned","extraButton","showBackButton","placeholder","appendContent","collapseIssues","onClick","onMove","onPin","signedIn","useIdentity","collapsed","setCollapsed","animating","setAnimating","handleToggleClick","e","stopPropagation","value","handleTitleClick","handleMoveLeft","handleMoveRight","handleTransitionEnd","handlePin","replace","wrapperClassName","buttonClassName","collapsibleClassName","collapsibleButtonClassName","extraContent","pinButton","moveButtons","backButton","collapseButton","jsxs","CloseIcon","ChevronLeftIcon","ChevronRightIcon","AddIcon","collapsedContent","UnfoldMoreIcon","UnfoldLessIcon","hasTitle","component","Fragment","undefined"],"mappings":"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"}