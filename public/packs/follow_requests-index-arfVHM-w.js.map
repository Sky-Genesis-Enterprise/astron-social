{"version":3,"file":"follow_requests-index-arfVHM-w.js","sources":["../../app/javascript/mastodon/features/follow_requests/components/account_authorize.jsx","../../app/javascript/mastodon/features/follow_requests/containers/account_authorize_container.js","../../app/javascript/mastodon/features/follow_requests/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport CheckIcon from '@/material-icons/400-24px/check.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport { IconButton } from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  authorize: { id: 'follow_request.authorize', defaultMessage: 'Authorize' },\n  reject: { id: 'follow_request.reject', defaultMessage: 'Reject' },\n});\n\nclass AccountAuthorize extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.record.isRequired,\n    onAuthorize: PropTypes.func.isRequired,\n    onReject: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl, account, onAuthorize, onReject } = this.props;\n    const content = { __html: account.get('note_emojified') };\n\n    return (\n      <div className='account-authorize__wrapper'>\n        <div className='account-authorize'>\n          <Link to={`/@${account.get('acct')}`} className='detailed-status__display-name'>\n            <div className='account-authorize__avatar'><Avatar account={account} size={48} /></div>\n            <DisplayName account={account} />\n          </Link>\n\n          <div className='account__header__content translate' dangerouslySetInnerHTML={content} />\n        </div>\n\n        <div className='account--panel'>\n          <div className='account--panel__button'><IconButton title={intl.formatMessage(messages.authorize)} icon='check' iconComponent={CheckIcon} onClick={onAuthorize} /></div>\n          <div className='account--panel__button'><IconButton title={intl.formatMessage(messages.reject)} icon='times' iconComponent={CloseIcon} onClick={onReject} /></div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(AccountAuthorize);\n","import { connect } from 'react-redux';\n\nimport { authorizeFollowRequest, rejectFollowRequest } from '../../../actions/accounts';\nimport { makeGetAccount } from '../../../selectors';\nimport AccountAuthorize from '../components/account_authorize';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, props) => ({\n    account: getAccount(state, props.id),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  onAuthorize () {\n    dispatch(authorizeFollowRequest(id));\n  },\n\n  onReject () {\n    dispatch(rejectFollowRequest(id));\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(AccountAuthorize);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport PersonAddIcon from '@/material-icons/400-24px/person_add.svg?react';\n\nimport { fetchFollowRequests, expandFollowRequests } from '../../actions/accounts';\nimport ScrollableList from '../../components/scrollable_list';\nimport { me } from '../../initial_state';\nimport Column from '../ui/components/column';\n\nimport AccountAuthorizeContainer from './containers/account_authorize_container';\n\nconst messages = defineMessages({\n  heading: { id: 'column.follow_requests', defaultMessage: 'Follow requests' },\n});\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['user_lists', 'follow_requests', 'items']),\n  isLoading: state.getIn(['user_lists', 'follow_requests', 'isLoading'], true),\n  hasMore: !!state.getIn(['user_lists', 'follow_requests', 'next']),\n  locked: !!state.getIn(['accounts', me, 'locked']),\n  domain: state.getIn(['meta', 'domain']),\n});\n\nclass FollowRequests extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    accountIds: ImmutablePropTypes.list,\n    locked: PropTypes.bool,\n    domain: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchFollowRequests());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFollowRequests());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, accountIds, hasMore, multiColumn, locked, domain, isLoading } = this.props;\n\n    const emptyMessage = <FormattedMessage id='empty_column.follow_requests' defaultMessage=\"You don't have any follow requests yet. When you receive one, it will show up here.\" />;\n    const unlockedPrependMessage = !locked && accountIds.size > 0 && (\n      <div className='follow_requests-unlocked_explanation'>\n        <FormattedMessage\n          id='follow_requests.unlocked_explanation'\n          defaultMessage='Even though your account is not locked, the {domain} staff thought you might want to review follow requests from these accounts manually.'\n          values={{ domain: domain }}\n        />\n      </div>\n    );\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='user-plus' iconComponent={PersonAddIcon} heading={intl.formatMessage(messages.heading)} alwaysShowBackButton>\n        <ScrollableList\n          scrollKey='follow_requests'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          showLoading={isLoading && accountIds.size === 0}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n          prepend={unlockedPrependMessage}\n        >\n          {accountIds.map(id =>\n            <AccountAuthorizeContainer key={id} id={id} />,\n          )}\n        </ScrollableList>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(FollowRequests));\n"],"names":["messages","defineMessages","authorize","id","defaultMessage","reject","AccountAuthorize","ImmutablePureComponent","render","intl","account","onAuthorize","onReject","props","content","__html","get","jsxs","Link","jsx","Avatar","DisplayName","IconButton","formatMessage","CheckIcon","CloseIcon","__publicField","propTypes","ImmutablePropTypes","record","isRequired","PropTypes","func","object","AccountAuthorize$1","injectIntl","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","state","mapDispatchToProps","dispatch","authorizeFollowRequest","rejectFollowRequest","AccountAuthorizeContainer","connect","heading","accountIds","getIn","isLoading","hasMore","locked","me","domain","FollowRequests","handleLoadMore","debounce","expandFollowRequests","leading","UNSAFE_componentWillMount","fetchFollowRequests","multiColumn","emptyMessage","FormattedMessage","unlockedPrependMessage","size","Column","PersonAddIcon","ScrollableList","map","Helmet","params","bool","list","string","index"],"mappings":"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"}