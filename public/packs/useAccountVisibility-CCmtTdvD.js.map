{"version":3,"file":"useAccountVisibility-CCmtTdvD.js","sources":["../../app/javascript/mastodon/hooks/useAccountId.ts","../../app/javascript/mastodon/hooks/useAccountVisibility.ts"],"sourcesContent":["import { useEffect } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport { fetchAccount, lookupAccount } from 'mastodon/actions/accounts';\nimport { normalizeForLookup } from 'mastodon/reducers/accounts_map';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\ninterface Params {\n  acct?: string;\n  id?: string;\n}\n\nexport const useAccountId = () => {\n  const { acct, id } = useParams<Params>();\n  const dispatch = useAppDispatch();\n  const accountId = useAppSelector(\n    (state) =>\n      id ?? (acct ? state.accounts_map[normalizeForLookup(acct)] : undefined),\n  );\n  const account = useAppSelector((state) =>\n    accountId ? state.accounts.get(accountId) : undefined,\n  );\n  const accountInStore = !!account;\n\n  useEffect(() => {\n    if (typeof accountId === 'undefined' && acct) {\n      dispatch(lookupAccount(acct));\n    } else if (accountId && !accountInStore) {\n      dispatch(fetchAccount(accountId));\n    }\n  }, [dispatch, accountId, acct, accountInStore]);\n\n  return accountId;\n};\n","import { getAccountHidden } from 'mastodon/selectors/accounts';\nimport { useAppSelector } from 'mastodon/store';\n\nexport function useAccountVisibility(accountId?: string | null) {\n  const blockedBy = useAppSelector((state) =>\n    accountId\n      ? !!state.relationships.getIn([accountId, 'blocked_by'], false)\n      : false,\n  );\n  const suspended = useAppSelector((state) =>\n    accountId ? !!state.accounts.getIn([accountId, 'suspended'], false) : false,\n  );\n  const hidden = useAppSelector((state) =>\n    accountId ? Boolean(getAccountHidden(state, accountId)) : false,\n  );\n\n  return {\n    blockedBy,\n    suspended,\n    hidden,\n  };\n}\n"],"names":["useAccountId","acct","id","useParams","dispatch","useAppDispatch","accountId","useAppSelector","state","accounts_map","normalizeForLookup","undefined","accountInStore","accounts","get","useEffect","lookupAccount","fetchAccount","useAccountVisibility","blockedBy","relationships","getIn","suspended","hidden","Boolean","getAccountHidden"],"mappings":"4NAaO,MAAMA,EAAeA,IAAM,CAChC,KAAM,CAAEC,KAAAA,EAAMC,GAAAA,CAAAA,EAAOC,EAAAA,EACfC,EAAWC,EAAAA,EACXC,EAAYC,EACfC,GACCN,IAAOD,EAAOO,EAAMC,aAAaC,EAAmBT,CAAI,CAAC,EAAIU,OACjE,EAIMC,EAAiB,CAAC,CAHRL,EAAgBC,GAC9BF,EAAYE,EAAMK,SAASC,IAAIR,CAAS,EAAIK,MAC9C,EAGAI,OAAAA,EAAAA,UAAU,IAAM,CACV,OAAOT,EAAc,KAAeL,EACtCG,EAASY,EAAcf,CAAI,CAAC,EACnBK,GAAa,CAACM,GACvBR,EAASa,EAAaX,CAAS,CAAC,CAClC,EACC,CAACF,EAAUE,EAAWL,EAAMW,CAAc,CAAC,EAEvCN,CACT,EC/BO,SAASY,EAAqBZ,EAA2B,CAC9D,MAAMa,EAAYZ,EAAgBC,GAChCF,EACI,CAAC,CAACE,EAAMY,cAAcC,MAAM,CAACf,EAAW,YAAY,EAAG,EAAK,EAC5D,EACN,EACMgB,EAAYf,EAAgBC,GAChCF,EAAY,CAAC,CAACE,EAAMK,SAASQ,MAAM,CAACf,EAAW,WAAW,EAAG,EAAK,EAAI,EACxE,EACMiB,EAAShB,EAAgBC,GAC7BF,EAAYkB,EAAQC,EAAiBjB,EAAOF,CAAS,EAAK,EAC5D,EAEA,MAAO,CACLa,UAAAA,EACAG,UAAAA,EACAC,OAAAA,CAAAA,CAEJ"}