{"version":3,"file":"dismissable_banner-DYkkvrn4.js","sources":["../../app/javascript/mastodon/components/dismissable_banner.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-call,\n                  @typescript-eslint/no-unsafe-return,\n                  @typescript-eslint/no-unsafe-assignment,\n                  @typescript-eslint/no-unsafe-member-access\n                  -- the settings store is not yet typed */\nimport type { PropsWithChildren } from 'react';\nimport { useCallback, useState, useEffect } from 'react';\n\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { bannerSettings } from 'mastodon/settings';\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nimport { IconButton } from './icon_button';\n\nconst messages = defineMessages({\n  dismiss: { id: 'dismissable_banner.dismiss', defaultMessage: 'Dismiss' },\n});\n\ninterface Props {\n  id: string;\n}\n\nexport const DismissableBanner: React.FC<PropsWithChildren<Props>> = ({\n  id,\n  children,\n}) => {\n  const dismissed = useAppSelector((state) =>\n    state.settings.getIn(['dismissed_banners', id], false),\n  );\n  const dispatch = useAppDispatch();\n\n  const [visible, setVisible] = useState(!bannerSettings.get(id) && !dismissed);\n  const intl = useIntl();\n\n  const handleDismiss = useCallback(() => {\n    setVisible(false);\n    bannerSettings.set(id, true);\n    dispatch(changeSetting(['dismissed_banners', id], true));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    if (!visible && !dismissed) {\n      dispatch(changeSetting(['dismissed_banners', id], true));\n    }\n  }, [id, dispatch, visible, dismissed]);\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div className='dismissable-banner'>\n      <div className='dismissable-banner__action'>\n        <IconButton\n          icon='times'\n          iconComponent={CloseIcon}\n          title={intl.formatMessage(messages.dismiss)}\n          onClick={handleDismiss}\n        />\n      </div>\n\n      <div className='dismissable-banner__message'>{children}</div>\n    </div>\n  );\n};\n"],"names":["messages","defineMessages","dismiss","id","defaultMessage","DismissableBanner","children","dismissed","useAppSelector","state","settings","getIn","dispatch","useAppDispatch","visible","setVisible","useState","bannerSettings","get","intl","useIntl","handleDismiss","useCallback","set","changeSetting","useEffect","jsxs","jsx","IconButton","CloseIcon","formatMessage"],"mappings":"qNAiBA,MAAMA,EAAWC,EAAe,CAC9BC,QAAS,CAAEC,GAAE,6BAAgCC,eAAc,SAAA,CAC7D,CAAC,EAMYC,EAAwDA,CAAC,CACpEF,GAAAA,EACAG,SAAAA,CACF,IAAM,CACJ,MAAMC,EAAYC,EAAgBC,GAChCA,EAAMC,SAASC,MAAM,CAAC,oBAAqBR,CAAE,EAAG,EAAK,CACvD,EACMS,EAAWC,EAAAA,EAEX,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,CAACC,EAAeC,IAAIf,CAAE,GAAK,CAACI,CAAS,EACtEY,EAAOC,EAAAA,EAEPC,EAAgBC,EAAAA,YAAY,IAAM,CACtCP,EAAW,EAAK,EAChBE,EAAeM,IAAIpB,EAAI,EAAI,EAC3BS,EAASY,EAAc,CAAC,oBAAqBrB,CAAE,EAAG,EAAI,CAAC,CAAA,EACtD,CAACA,EAAIS,CAAQ,CAAC,EAQjB,OANAa,EAAAA,UAAU,IAAM,CACV,CAACX,GAAW,CAACP,GACfK,EAASY,EAAc,CAAC,oBAAqBrB,CAAE,EAAG,EAAI,CAAC,CACzD,EACC,CAACA,EAAIS,EAAUE,EAASP,CAAS,CAAC,EAEhCO,EAKHY,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,MAAC,OAAI,UAAU,6BACb,SAAAA,MAACC,EAAA,CACC,KAAK,QACL,cAAeC,EACf,MAAOV,EAAKW,cAAc9B,EAASE,OAAO,EAC1C,QAASmB,EAAc,EAE3B,EAEAM,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAA+BrB,SAAAA,CAAAA,CAAS,CAAA,EACzD,EAfO,IAiBX"}