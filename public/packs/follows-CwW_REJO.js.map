{"version":3,"file":"follows-CwW_REJO.js","sources":["../../app/javascript/mastodon/features/onboarding/follows.tsx"],"sourcesContent":["import { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport PersonIcon from '@/material-icons/400-24px/person.svg?react';\nimport { fetchRelationships } from 'mastodon/actions/accounts';\nimport { importFetchedAccounts } from 'mastodon/actions/importer';\nimport { fetchSuggestions } from 'mastodon/actions/suggestions';\nimport { markAsPartial } from 'mastodon/actions/timelines';\nimport { apiRequest } from 'mastodon/api';\nimport type { ApiAccountJSON } from 'mastodon/api_types/accounts';\nimport { Account } from 'mastodon/components/account';\nimport { Column } from 'mastodon/components/column';\nimport { ColumnHeader } from 'mastodon/components/column_header';\nimport { ColumnSearchHeader } from 'mastodon/components/column_search_header';\nimport ScrollableList from 'mastodon/components/scrollable_list';\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nconst messages = defineMessages({\n  title: {\n    id: 'onboarding.follows.title',\n    defaultMessage: 'Follow people to get started',\n  },\n  search: { id: 'onboarding.follows.search', defaultMessage: 'Search' },\n  back: { id: 'onboarding.follows.back', defaultMessage: 'Back' },\n});\n\ntype Mode = 'remove' | 'add';\n\nexport const Follows: React.FC<{\n  multiColumn?: boolean;\n}> = ({ multiColumn }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const isLoading = useAppSelector((state) => state.suggestions.isLoading);\n  const suggestions = useAppSelector((state) => state.suggestions.items);\n  const [searchAccountIds, setSearchAccountIds] = useState<string[]>([]);\n  const [mode, setMode] = useState<Mode>('remove');\n  const [isLoadingSearch, setIsLoadingSearch] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n\n  useEffect(() => {\n    void dispatch(fetchSuggestions());\n\n    return () => {\n      dispatch(markAsPartial('home'));\n    };\n  }, [dispatch]);\n\n  const handleSearchClick = useCallback(() => {\n    setMode('add');\n  }, [setMode]);\n\n  const handleDismissSearchClick = useCallback(() => {\n    setMode('remove');\n    setIsSearching(false);\n  }, [setMode, setIsSearching]);\n\n  const searchRequestRef = useRef<AbortController | null>(null);\n\n  const handleSearch = useDebouncedCallback(\n    (value: string) => {\n      if (searchRequestRef.current) {\n        searchRequestRef.current.abort();\n      }\n\n      if (value.trim().length === 0) {\n        setIsSearching(false);\n        setSearchAccountIds([]);\n        return;\n      }\n\n      setIsSearching(true);\n      setIsLoadingSearch(true);\n\n      searchRequestRef.current = new AbortController();\n\n      void apiRequest<ApiAccountJSON[]>('GET', 'v1/accounts/search', {\n        signal: searchRequestRef.current.signal,\n        params: {\n          q: value,\n        },\n      })\n        .then((data) => {\n          dispatch(importFetchedAccounts(data));\n          dispatch(fetchRelationships(data.map((a) => a.id)));\n          setSearchAccountIds(data.map((a) => a.id));\n          setIsLoadingSearch(false);\n          return '';\n        })\n        .catch(() => {\n          setIsLoadingSearch(false);\n        });\n    },\n    500,\n    { leading: true, trailing: true },\n  );\n\n  let displayedAccountIds: string[];\n\n  if (mode === 'add' && isSearching) {\n    displayedAccountIds = searchAccountIds;\n  } else {\n    displayedAccountIds = suggestions.map(\n      (suggestion) => suggestion.account_id,\n    );\n  }\n\n  return (\n    <Column\n      bindToDocument={!multiColumn}\n      label={intl.formatMessage(messages.title)}\n    >\n      <ColumnHeader\n        title={intl.formatMessage(messages.title)}\n        icon='person'\n        iconComponent={PersonIcon}\n        multiColumn={multiColumn}\n        showBackButton\n      />\n\n      <ColumnSearchHeader\n        placeholder={intl.formatMessage(messages.search)}\n        onBack={handleDismissSearchClick}\n        onActivate={handleSearchClick}\n        active={mode === 'add'}\n        onSubmit={handleSearch}\n      />\n\n      <ScrollableList\n        scrollKey='follow_recommendations'\n        trackScroll={!multiColumn}\n        bindToDocument={!multiColumn}\n        showLoading={\n          (isLoading || isLoadingSearch) && displayedAccountIds.length === 0\n        }\n        hasMore={false}\n        isLoading={isLoading || isLoadingSearch}\n        footer={\n          <>\n            {displayedAccountIds.length > 0 && <div className='spacer' />}\n\n            <div className='column-footer'>\n              <Link className='button button--block' to='/home'>\n                <FormattedMessage\n                  id='onboarding.follows.done'\n                  defaultMessage='Done'\n                />\n              </Link>\n            </div>\n          </>\n        }\n        emptyMessage={\n          mode === 'remove' ? (\n            <FormattedMessage\n              id='onboarding.follows.empty'\n              defaultMessage='Unfortunately, no results can be shown right now. You can try using search or browsing the explore page to find people to follow, or try again later.'\n            />\n          ) : (\n            <FormattedMessage\n              id='lists.no_results_found'\n              defaultMessage='No results found.'\n            />\n          )\n        }\n      >\n        {displayedAccountIds.map((accountId) => (\n          <Account id={accountId} key={accountId} withBio withMenu={false} />\n        ))}\n      </ScrollableList>\n\n      <Helmet>\n        <title>{intl.formatMessage(messages.title)}</title>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Follows;\n"],"names":["messages","defineMessages","title","id","defaultMessage","search","back","Follows","multiColumn","intl","useIntl","dispatch","useAppDispatch","isLoading","useAppSelector","state","suggestions","items","searchAccountIds","setSearchAccountIds","useState","mode","setMode","isLoadingSearch","setIsLoadingSearch","isSearching","setIsSearching","useEffect","fetchSuggestions","markAsPartial","handleSearchClick","useCallback","handleDismissSearchClick","searchRequestRef","useRef","handleSearch","useDebouncedCallback","value","current","abort","trim","length","AbortController","apiRequest","signal","params","q","then","data","importFetchedAccounts","fetchRelationships","map","a","catch","leading","trailing","displayedAccountIds","suggestion","account_id","jsxs","Column","formatMessage","jsx","ColumnHeader","PersonIcon","ColumnSearchHeader","ScrollableList","Fragment","Link","FormattedMessage","accountId","Account","Helmet"],"mappings":"66CAuBA,MAAMA,EAAWC,EAAe,CAC9BC,MAAO,CACLC,GAAE,2BACFC,eAAc,8BAAA,EAEhBC,OAAQ,CAAEF,GAAE,4BAA+BC,eAAc,QAAA,EACzDE,KAAM,CAAEH,GAAE,0BAA6BC,eAAc,MAAA,CACvD,CAAC,EAIYG,GAERA,CAAC,CAAEC,YAAAA,CAAY,IAAM,CACxB,MAAMC,EAAOC,EAAAA,EACPC,EAAWC,EAAAA,EACXC,EAAYC,EAAgBC,GAAUA,EAAMC,YAAYH,SAAS,EACjEG,EAAcF,EAAgBC,GAAUA,EAAMC,YAAYC,KAAK,EAC/D,CAACC,EAAkBC,CAAmB,EAAIC,EAAAA,SAAmB,CAAA,CAAE,EAC/D,CAACC,EAAMC,CAAO,EAAIF,EAAAA,SAAe,QAAQ,EACzC,CAACG,EAAiBC,CAAkB,EAAIJ,EAAAA,SAAS,EAAK,EACtD,CAACK,EAAaC,CAAc,EAAIN,EAAAA,SAAS,EAAK,EAEpDO,EAAAA,UAAU,KACHhB,EAASiB,GAAkB,EAEzB,IAAM,CACXjB,EAASkB,EAAc,MAAM,CAAC,CAAA,GAE/B,CAAClB,CAAQ,CAAC,EAEb,MAAMmB,EAAoBC,EAAAA,YAAY,IAAM,CAC1CT,EAAQ,KAAK,CAAA,EACZ,CAACA,CAAO,CAAC,EAENU,EAA2BD,EAAAA,YAAY,IAAM,CACjDT,EAAQ,QAAQ,EAChBI,EAAe,EAAK,CAAA,EACnB,CAACJ,EAASI,CAAc,CAAC,EAEtBO,EAAmBC,EAAAA,OAA+B,IAAI,EAEtDC,EAAeC,EAClBC,GAAkB,CAKjB,GAJIJ,EAAiBK,SACnBL,EAAiBK,QAAQC,MAAAA,EAGvBF,EAAMG,OAAOC,SAAW,EAAG,CAC7Bf,EAAe,EAAK,EACpBP,EAAoB,CAAA,CAAE,EACtB,MAAA,CAGFO,EAAe,EAAI,EACnBF,EAAmB,EAAI,EAEvBS,EAAiBK,QAAU,IAAII,gBAE1BC,EAA6B,MAAO,qBAAsB,CAC7DC,OAAQX,EAAiBK,QAAQM,OACjCC,OAAQ,CACNC,EAAGT,CAAAA,CACL,CACD,EACEU,KAAMC,IACLrC,EAASsC,EAAsBD,CAAI,CAAC,EACpCrC,EAASuC,EAAmBF,EAAKG,OAAWC,EAAEjD,EAAE,CAAC,CAAC,EAClDgB,EAAoB6B,EAAKG,IAAKC,GAAMA,EAAEjD,EAAE,CAAC,EACzCqB,EAAmB,EAAK,EACjB,GACR,EACA6B,MAAM,IAAM,CACX7B,EAAmB,EAAK,CAAA,CACzB,CAAA,EAEL,IACA,CAAE8B,QAAS,GAAMC,SAAU,EAAA,CAC7B,EAEA,IAAIC,EAEJ,OAAInC,IAAS,OAASI,EACpB+B,EAAsBtC,EAEtBsC,EAAsBxC,EAAYmC,IAC/BM,GAAeA,EAAWC,UAC7B,EAIAC,OAACC,EAAA,CACC,eAAgB,CAACpD,EACjB,MAAOC,EAAKoD,cAAc7D,EAASE,KAAK,EAExC,SAAA,CAAA4D,EAAAA,IAACC,EAAA,CACC,MAAOtD,EAAKoD,cAAc7D,EAASE,KAAK,EACxC,KAAK,SACL,cAAe8D,EACf,YAAAxD,EACA,eAAc,GAAA,QAGfyD,EAAA,CACC,YAAaxD,EAAKoD,cAAc7D,EAASK,MAAM,EAC/C,OAAQ2B,EACR,WAAYF,EACZ,OAAQT,IAAS,MACjB,SAAUc,EAAa,EAGzB2B,EAAAA,IAACI,GACC,UAAU,yBACV,YAAa,CAAC1D,EACd,eAAgB,CAACA,EACjB,aACGK,GAAaU,IAAoBiC,EAAoBf,SAAW,EAEnE,QAAS,GACT,UAAW5B,GAAaU,EACxB,OACEoC,EAAAA,KAAAQ,EAAAA,SAAA,CACGX,SAAAA,CAAAA,EAAoBf,OAAS,GAAKqB,EAAAA,IAAC,MAAA,CAAI,UAAU,SAAQ,QAEzD,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAAA,IAACM,GAAK,UAAU,uBAAuB,GAAG,QACxC,eAACC,EAAA,CACC,6BACA,eAAe,OAAM,EAEzB,CAAA,CACF,CAAA,CAAA,CACF,EAEF,aACEhD,IAAS,SACPyC,EAAAA,IAACO,EAAA,CACC,GAAE,2BACF,eAAe,uJAAA,CAAuJ,EAGxKP,EAAAA,IAACO,GACC,GAAE,yBACF,eAAe,mBAAA,GAKpBb,SAAAA,EAAoBL,IAAKmB,SACvBC,EAAA,CAAQ,GAAID,EAA2B,QAAO,GAAC,SAAU,IAA7BA,EAC9B,EACH,SAECE,EAAA,CACC,SAAA,CAAAV,MAAC,QAAA,CAAOrD,SAAAA,EAAKoD,cAAc7D,EAASE,KAAK,EAAE,EAC3C4D,EAAAA,IAAC,OAAA,CAAK,KAAK,SAAS,QAAQ,SAAA,CAAS,CAAA,CAAA,CACvC,CAAA,EACF,CAEJ"}