{"version":3,"file":"schedule_idle_task-Co3Ydhdu.js","sources":["../../node_modules/tiny-queue/index.js","../../app/javascript/mastodon/features/ui/util/schedule_idle_task.js"],"sourcesContent":["'use strict';\n\n// Simple FIFO queue implementation to avoid having to do shift()\n// on an array, which is slow.\n\nfunction Queue() {\n  this.length = 0;\n}\n\nQueue.prototype.push = function (item) {\n  var node = {item: item};\n  if (this.last) {\n    this.last = this.last.next = node;\n  } else {\n    this.last = this.first = node;\n  }\n  this.length++;\n};\n\nQueue.prototype.shift = function () {\n  var node = this.first;\n  if (node) {\n    this.first = node.next;\n    if (!(--this.length)) {\n      this.last = undefined;\n    }\n    return node.item;\n  }\n};\n\nQueue.prototype.slice = function (start, end) {\n  start = typeof start === 'undefined' ? 0 : start;\n  end = typeof end === 'undefined' ? Infinity : end;\n\n  var output = [];\n\n  var i = 0;\n  for (var node = this.first; node; node = node.next) {\n    if (--end < 0) {\n      break;\n    } else if (++i > start) {\n      output.push(node.item);\n    }\n  }\n  return output;\n}\n\nmodule.exports = Queue;\n","// Wrapper to call requestIdleCallback() to schedule low-priority work.\n// See https://developer.mozilla.org/en-US/docs/Web/API/Background_Tasks_API\n// for a good breakdown of the concepts behind this.\n\nimport Queue from 'tiny-queue';\n\nconst taskQueue = new Queue();\nlet runningRequestIdleCallback = false;\n\nfunction runTasks(deadline) {\n  while (taskQueue.length && deadline.timeRemaining() > 0) {\n    taskQueue.shift()();\n  }\n  if (taskQueue.length) {\n    requestIdleCallback(runTasks);\n  } else {\n    runningRequestIdleCallback = false;\n  }\n}\n\nfunction scheduleIdleTask(task) {\n  taskQueue.push(task);\n  if (!runningRequestIdleCallback) {\n    runningRequestIdleCallback = true;\n    requestIdleCallback(runTasks);\n  }\n}\n\nexport default scheduleIdleTask;\n"],"names":["Queue","item","node","start","end","output","i","tinyQueue","taskQueue","runningRequestIdleCallback","runTasks","deadline","length","timeRemaining","shift","requestIdleCallback","scheduleIdleTask","task","push"],"mappings":"+EAKA,SAASA,GAAQ,CACf,KAAK,OAAS,CAChB,CAEA,OAAAA,EAAM,UAAU,KAAO,SAAUC,EAAM,CACrC,IAAIC,EAAO,CAAC,KAAMD,CAAI,EAClB,KAAK,KACP,KAAK,KAAO,KAAK,KAAK,KAAOC,EAE7B,KAAK,KAAO,KAAK,MAAQA,EAE3B,KAAK,UAGPF,EAAM,UAAU,MAAQ,UAAY,CAClC,IAAIE,EAAO,KAAK,MAChB,GAAIA,EACF,YAAK,MAAQA,EAAK,KACZ,EAAE,KAAK,SACX,KAAK,KAAO,QAEPA,EAAK,MAIhBF,EAAM,UAAU,MAAQ,SAAUG,EAAOC,EAAK,CAC5CD,EAAQ,OAAOA,EAAU,IAAc,EAAIA,EAC3CC,EAAM,OAAOA,EAAQ,IAAc,IAAWA,EAK9C,QAHIC,EAAS,CAAA,EAETC,EAAI,EACCJ,EAAO,KAAK,MAAOA,GACtB,IAAEE,EAAM,GADoBF,EAAOA,EAAK,KAGjC,EAAEI,EAAIH,GACfE,EAAO,KAAKH,EAAK,IAAI,EAGzB,OAAOG,CACT,EAEAE,EAAiBP,2BCzCXQ,EAAY,IAAIR,EACtB,IAAIS,EAA6B,GAEjC,SAASC,EAASC,EAAU,CAC1B,KAAOH,EAAUI,QAAUD,EAASE,cAAa,EAAK,GACpDL,EAAUM,MAAK,EAAE,EAEfN,EAAUI,OACZG,oBAAoBL,CAAQ,EAE5BD,EAA6B,EAEjC,CAEA,SAASO,EAAiBC,EAAM,CAC9BT,EAAUU,KAAKD,CAAI,EACdR,IACHA,EAA6B,GAC7BM,oBAAoBL,CAAQ,EAEhC","x_google_ignoreList":[0]}