{"version":3,"file":"search-BPrZ-C9C.js","sources":["../../app/javascript/mastodon/features/compose/components/search.tsx"],"sourcesContent":["import { useCallback, useState, useRef, useEffect } from 'react';\n\nimport {\n  defineMessages,\n  useIntl,\n  FormattedMessage,\n  FormattedList,\n} from 'react-intl';\n\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\n\nimport { isFulfilled } from '@reduxjs/toolkit';\n\nimport CancelIcon from '@/material-icons/400-24px/cancel-fill.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport SearchIcon from '@/material-icons/400-24px/search.svg?react';\nimport {\n  clickSearchResult,\n  forgetSearchResult,\n  openURL,\n} from 'mastodon/actions/search';\nimport { Icon } from 'mastodon/components/icon';\nimport { useIdentity } from 'mastodon/identity_context';\nimport { domain, searchEnabled } from 'mastodon/initial_state';\nimport type { RecentSearch, SearchType } from 'mastodon/models/search';\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\nimport { HASHTAG_REGEX } from 'mastodon/utils/hashtags';\n\nconst messages = defineMessages({\n  placeholder: { id: 'search.placeholder', defaultMessage: 'Search' },\n  placeholderSignedIn: {\n    id: 'search.search_or_paste',\n    defaultMessage: 'Search or paste URL',\n  },\n});\n\nconst labelForRecentSearch = (search: RecentSearch) => {\n  switch (search.type) {\n    case 'account':\n      return `@${search.q}`;\n    case 'hashtag':\n      return `#${search.q}`;\n    default:\n      return search.q;\n  }\n};\n\nconst unfocus = () => {\n  document.querySelector('.ui')?.parentElement?.focus();\n};\n\ninterface SearchOption {\n  key: string;\n  label: React.ReactNode;\n  action: (e: React.MouseEvent | React.KeyboardEvent) => void;\n  forget?: (e: React.MouseEvent | React.KeyboardEvent) => void;\n}\n\nexport const Search: React.FC<{\n  singleColumn: boolean;\n  initialValue?: string;\n}> = ({ singleColumn, initialValue }) => {\n  const intl = useIntl();\n  const recent = useAppSelector((state) => state.search.recent);\n  const { signedIn } = useIdentity();\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const searchInputRef = useRef<HTMLInputElement>(null);\n  const [value, setValue] = useState(initialValue ?? '');\n  const hasValue = value.length > 0;\n  const [expanded, setExpanded] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(-1);\n  const [quickActions, setQuickActions] = useState<SearchOption[]>([]);\n  useEffect(() => {\n    setValue(initialValue ?? '');\n    setQuickActions([]);\n  }, [initialValue]);\n  const searchOptions: SearchOption[] = [];\n\n  if (searchEnabled) {\n    searchOptions.push(\n      {\n        key: 'prompt-has',\n        label: (\n          <>\n            <mark>has:</mark>{' '}\n            <FormattedList\n              type='disjunction'\n              value={['media', 'poll', 'embed']}\n            />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('has:');\n        },\n      },\n      {\n        key: 'prompt-is',\n        label: (\n          <>\n            <mark>is:</mark>{' '}\n            <FormattedList type='disjunction' value={['reply', 'sensitive']} />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('is:');\n        },\n      },\n      {\n        key: 'prompt-language',\n        label: (\n          <>\n            <mark>language:</mark>{' '}\n            <FormattedMessage\n              id='search_popout.language_code'\n              defaultMessage='ISO language code'\n            />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('language:');\n        },\n      },\n      {\n        key: 'prompt-from',\n        label: (\n          <>\n            <mark>from:</mark>{' '}\n            <FormattedMessage id='search_popout.user' defaultMessage='user' />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('from:');\n        },\n      },\n      {\n        key: 'prompt-before',\n        label: (\n          <>\n            <mark>before:</mark>{' '}\n            <FormattedMessage\n              id='search_popout.specific_date'\n              defaultMessage='specific date'\n            />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('before:');\n        },\n      },\n      {\n        key: 'prompt-during',\n        label: (\n          <>\n            <mark>during:</mark>{' '}\n            <FormattedMessage\n              id='search_popout.specific_date'\n              defaultMessage='specific date'\n            />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('during:');\n        },\n      },\n      {\n        key: 'prompt-after',\n        label: (\n          <>\n            <mark>after:</mark>{' '}\n            <FormattedMessage\n              id='search_popout.specific_date'\n              defaultMessage='specific date'\n            />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('after:');\n        },\n      },\n      {\n        key: 'prompt-in',\n        label: (\n          <>\n            <mark>in:</mark>{' '}\n            <FormattedList\n              type='disjunction'\n              value={['all', 'library', 'public']}\n            />\n          </>\n        ),\n        action: (e) => {\n          e.preventDefault();\n          insertText('in:');\n        },\n      },\n    );\n  }\n\n  const recentOptions: SearchOption[] = recent.map((search) => ({\n    key: `${search.type}/${search.q}`,\n    label: labelForRecentSearch(search),\n    action: () => {\n      setValue(search.q);\n\n      if (search.type === 'account') {\n        history.push(`/@${search.q}`);\n      } else if (search.type === 'hashtag') {\n        history.push(`/tags/${search.q}`);\n      } else {\n        const queryParams = new URLSearchParams({ q: search.q });\n        if (search.type) queryParams.set('type', search.type);\n        history.push({ pathname: '/search', search: queryParams.toString() });\n      }\n\n      unfocus();\n    },\n    forget: (e) => {\n      e.stopPropagation();\n      void dispatch(forgetSearchResult(search));\n    },\n  }));\n\n  const navigableOptions = hasValue\n    ? quickActions.concat(searchOptions)\n    : recentOptions.concat(quickActions, searchOptions);\n\n  const insertText = (text: string) => {\n    setValue((currentValue) => {\n      if (currentValue === '') {\n        return text;\n      } else if (currentValue.endsWith(' ')) {\n        return `${currentValue}${text}`;\n      } else {\n        return `${currentValue} ${text}`;\n      }\n    });\n  };\n\n  const submit = useCallback(\n    (q: string, type?: SearchType) => {\n      void dispatch(clickSearchResult({ q, type }));\n      const queryParams = new URLSearchParams({ q });\n      if (type) queryParams.set('type', type);\n      history.push({ pathname: '/search', search: queryParams.toString() });\n      unfocus();\n    },\n    [dispatch, history],\n  );\n\n  const handleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(value);\n\n      const trimmedValue = value.trim();\n      const newQuickActions = [];\n\n      if (trimmedValue.length > 0) {\n        const couldBeURL =\n          trimmedValue.startsWith('https://') && !trimmedValue.includes(' ');\n\n        if (couldBeURL) {\n          newQuickActions.push({\n            key: 'open-url',\n            label: (\n              <FormattedMessage\n                id='search.quick_action.open_url'\n                defaultMessage='Open URL in Mastodon'\n              />\n            ),\n            action: async () => {\n              const result = await dispatch(openURL({ url: trimmedValue }));\n\n              if (isFulfilled(result)) {\n                if (result.payload.accounts[0]) {\n                  history.push(`/@${result.payload.accounts[0].acct}`);\n                } else if (result.payload.statuses[0]) {\n                  history.push(\n                    `/@${result.payload.statuses[0].account.acct}/${result.payload.statuses[0].id}`,\n                  );\n                }\n              }\n\n              unfocus();\n            },\n          });\n        }\n\n        const couldBeHashtag =\n          (trimmedValue.startsWith('#') && trimmedValue.length > 1) ||\n          trimmedValue.match(HASHTAG_REGEX);\n\n        if (couldBeHashtag) {\n          newQuickActions.push({\n            key: 'go-to-hashtag',\n            label: (\n              <FormattedMessage\n                id='search.quick_action.go_to_hashtag'\n                defaultMessage='Go to hashtag {x}'\n                values={{ x: <mark>#{trimmedValue.replace(/^#/, '')}</mark> }}\n              />\n            ),\n            action: () => {\n              const query = trimmedValue.replace(/^#/, '');\n              history.push(`/tags/${query}`);\n              void dispatch(clickSearchResult({ q: query, type: 'hashtag' }));\n              unfocus();\n            },\n          });\n        }\n\n        const couldBeUsername = /^@?[a-z0-9_-]+(@[^\\s]+)?$/i.exec(trimmedValue);\n\n        if (couldBeUsername) {\n          newQuickActions.push({\n            key: 'go-to-account',\n            label: (\n              <FormattedMessage\n                id='search.quick_action.go_to_account'\n                defaultMessage='Go to profile {x}'\n                values={{ x: <mark>@{trimmedValue.replace(/^@/, '')}</mark> }}\n              />\n            ),\n            action: () => {\n              const query = trimmedValue.replace(/^@/, '');\n              history.push(`/@${query}`);\n              void dispatch(clickSearchResult({ q: query, type: 'account' }));\n              unfocus();\n            },\n          });\n        }\n\n        const couldBeStatusSearch = searchEnabled;\n\n        if (couldBeStatusSearch && signedIn) {\n          newQuickActions.push({\n            key: 'status-search',\n            label: (\n              <FormattedMessage\n                id='search.quick_action.status_search'\n                defaultMessage='Posts matching {x}'\n                values={{ x: <mark>{trimmedValue}</mark> }}\n              />\n            ),\n            action: () => {\n              submit(trimmedValue, 'statuses');\n            },\n          });\n        }\n\n        newQuickActions.push({\n          key: 'account-search',\n          label: (\n            <FormattedMessage\n              id='search.quick_action.account_search'\n              defaultMessage='Profiles matching {x}'\n              values={{ x: <mark>{trimmedValue}</mark> }}\n            />\n          ),\n          action: () => {\n            submit(trimmedValue, 'accounts');\n          },\n        });\n      }\n\n      setQuickActions(newQuickActions);\n    },\n    [dispatch, history, signedIn, setValue, setQuickActions, submit],\n  );\n\n  const handleClear = useCallback(() => {\n    setValue('');\n    setQuickActions([]);\n    setSelectedOption(-1);\n  }, [setValue, setQuickActions, setSelectedOption]);\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      switch (e.key) {\n        case 'Escape':\n          e.preventDefault();\n          unfocus();\n\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n\n          if (navigableOptions.length > 0) {\n            setSelectedOption(\n              Math.min(selectedOption + 1, navigableOptions.length - 1),\n            );\n          }\n\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n\n          if (navigableOptions.length > 0) {\n            setSelectedOption(Math.max(selectedOption - 1, -1));\n          }\n\n          break;\n        case 'Enter':\n          e.preventDefault();\n\n          if (selectedOption === -1) {\n            submit(value);\n          } else if (navigableOptions.length > 0) {\n            navigableOptions[selectedOption]?.action(e);\n          }\n\n          break;\n        case 'Delete':\n          if (selectedOption > -1 && navigableOptions.length > 0) {\n            const search = navigableOptions[selectedOption];\n\n            if (typeof search?.forget === 'function') {\n              e.preventDefault();\n              search.forget(e);\n            }\n          }\n\n          break;\n      }\n    },\n    [navigableOptions, value, selectedOption, setSelectedOption, submit],\n  );\n\n  const handleFocus = useCallback(() => {\n    setExpanded(true);\n    setSelectedOption(-1);\n\n    if (searchInputRef.current && !singleColumn) {\n      const { left, right } = searchInputRef.current.getBoundingClientRect();\n\n      if (\n        left < 0 ||\n        right > (window.innerWidth || document.documentElement.clientWidth)\n      ) {\n        searchInputRef.current.scrollIntoView();\n      }\n    }\n  }, [setExpanded, setSelectedOption, singleColumn]);\n\n  const handleBlur = useCallback(() => {\n    setExpanded(false);\n    setSelectedOption(-1);\n  }, [setExpanded, setSelectedOption]);\n\n  return (\n    <form className={classNames('search', { active: expanded })}>\n      <input\n        ref={searchInputRef}\n        className='search__input'\n        type='text'\n        placeholder={intl.formatMessage(\n          signedIn ? messages.placeholderSignedIn : messages.placeholder,\n        )}\n        aria-label={intl.formatMessage(\n          signedIn ? messages.placeholderSignedIn : messages.placeholder,\n        )}\n        value={value}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n\n      <button type='button' className='search__icon' onClick={handleClear}>\n        <Icon\n          id='search'\n          icon={SearchIcon}\n          className={hasValue ? '' : 'active'}\n        />\n        <Icon\n          id='times-circle'\n          icon={CancelIcon}\n          className={hasValue ? 'active' : ''}\n          aria-label={intl.formatMessage(messages.placeholder)}\n        />\n      </button>\n\n      <div className='search__popout'>\n        {!hasValue && (\n          <>\n            <h4>\n              <FormattedMessage\n                id='search_popout.recent'\n                defaultMessage='Recent searches'\n              />\n            </h4>\n\n            <div className='search__popout__menu'>\n              {recentOptions.length > 0 ? (\n                recentOptions.map(({ label, key, action, forget }, i) => (\n                  <div\n                    key={key}\n                    tabIndex={0}\n                    role='button'\n                    onMouseDown={action}\n                    className={classNames(\n                      'search__popout__menu__item search__popout__menu__item--flex',\n                      { selected: selectedOption === i },\n                    )}\n                  >\n                    <span>{label}</span>\n                    <button className='icon-button' onMouseDown={forget}>\n                      <Icon id='times' icon={CloseIcon} />\n                    </button>\n                  </div>\n                ))\n              ) : (\n                <div className='search__popout__menu__message'>\n                  <FormattedMessage\n                    id='search.no_recent_searches'\n                    defaultMessage='No recent searches'\n                  />\n                </div>\n              )}\n            </div>\n          </>\n        )}\n\n        {quickActions.length > 0 && (\n          <>\n            <h4>\n              <FormattedMessage\n                id='search_popout.quick_actions'\n                defaultMessage='Quick actions'\n              />\n            </h4>\n\n            <div className='search__popout__menu'>\n              {quickActions.map(({ key, label, action }, i) => (\n                <button\n                  key={key}\n                  onMouseDown={action}\n                  className={classNames('search__popout__menu__item', {\n                    selected: selectedOption === i,\n                  })}\n                >\n                  {label}\n                </button>\n              ))}\n            </div>\n          </>\n        )}\n\n        <h4>\n          <FormattedMessage\n            id='search_popout.options'\n            defaultMessage='Search options'\n          />\n        </h4>\n\n        {searchEnabled && signedIn ? (\n          <div className='search__popout__menu'>\n            {searchOptions.map(({ key, label, action }, i) => (\n              <button\n                key={key}\n                onMouseDown={action}\n                className={classNames('search__popout__menu__item', {\n                  selected:\n                    selectedOption ===\n                    (quickActions.length || recent.length) + i,\n                })}\n              >\n                {label}\n              </button>\n            ))}\n          </div>\n        ) : (\n          <div className='search__popout__menu__message'>\n            {searchEnabled ? (\n              <FormattedMessage\n                id='search_popout.full_text_search_logged_out_message'\n                defaultMessage='Only available when logged in.'\n              />\n            ) : (\n              <FormattedMessage\n                id='search_popout.full_text_search_disabled_message'\n                defaultMessage='Not available on {domain}.'\n                values={{ domain }}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    </form>\n  );\n};\n"],"names":["messages","defineMessages","placeholder","id","defaultMessage","placeholderSignedIn","labelForRecentSearch","search","type","q","unfocus","document","querySelector","parentElement","focus","Search","singleColumn","initialValue","intl","useIntl","recent","useAppSelector","state","signedIn","useIdentity","dispatch","useAppDispatch","history","useHistory","searchInputRef","useRef","value","setValue","useState","hasValue","length","expanded","setExpanded","selectedOption","setSelectedOption","quickActions","setQuickActions","useEffect","searchOptions","searchEnabled","push","key","label","jsxs","Fragment","jsx","FormattedList","action","e","preventDefault","insertText","FormattedMessage","recentOptions","map","queryParams","URLSearchParams","set","pathname","toString","forget","stopPropagation","forgetSearchResult","navigableOptions","concat","text","currentValue","endsWith","submit","useCallback","clickSearchResult","handleChange","target","trimmedValue","trim","newQuickActions","startsWith","includes","result","openURL","url","isFulfilled","payload","accounts","acct","statuses","account","match","HASHTAG_REGEX","x","replace","query","exec","handleClear","handleKeyDown","Math","min","max","handleFocus","current","left","right","getBoundingClientRect","window","innerWidth","documentElement","clientWidth","scrollIntoView","handleBlur","classNames","active","formatMessage","Icon","SearchIcon","CancelIcon","i","selected","CloseIcon","domain"],"mappings":"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"}