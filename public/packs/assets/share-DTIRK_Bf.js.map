{"version":3,"file":"share-DTIRK_Bf.js","sources":["../../../app/javascript/mastodon/features/standalone/compose/index.jsx","../../../app/javascript/mastodon/containers/compose_container.jsx","../../../app/javascript/entrypoints/share.tsx"],"sourcesContent":["import { AlertsController } from 'mastodon/components/alerts_controller';\nimport ComposeFormContainer from 'mastodon/features/compose/containers/compose_form_container';\nimport LoadingBarContainer from 'mastodon/features/ui/containers/loading_bar_container';\nimport ModalContainer from 'mastodon/features/ui/containers/modal_container';\n\nconst Compose = () => (\n  <>\n    <ComposeFormContainer autoFocus withoutNavigation />\n    <AlertsController />\n    <ModalContainer />\n    <LoadingBarContainer className='loading-bar' />\n  </>\n);\n\nexport default Compose;\n","import { Provider } from 'react-redux';\n\nimport { fetchCustomEmojis } from 'mastodon/actions/custom_emojis';\nimport { fetchServer } from 'mastodon/actions/server';\nimport { hydrateStore } from 'mastodon/actions/store';\nimport { Router } from 'mastodon/components/router';\nimport Compose from 'mastodon/features/standalone/compose';\nimport initialState from 'mastodon/initial_state';\nimport { IntlProvider } from 'mastodon/locales';\nimport { store } from 'mastodon/store';\n\nif (initialState) {\n  store.dispatch(hydrateStore(initialState));\n}\n\nstore.dispatch(fetchCustomEmojis());\nstore.dispatch(fetchServer());\n\nconst ComposeContainer = () => (\n  <IntlProvider>\n    <Provider store={store}>\n      <Router>\n        <Compose />\n      </Router>\n    </Provider>\n  </IntlProvider>\n);\n\nexport default ComposeContainer;\n","import { createRoot } from 'react-dom/client';\n\nimport ComposeContainer from '../mastodon/containers/compose_container';\nimport { loadPolyfills } from '../mastodon/polyfills';\nimport ready from '../mastodon/ready';\n\nfunction loaded() {\n  const mountNode = document.getElementById('mastodon-compose');\n\n  if (mountNode) {\n    const attr = mountNode.getAttribute('data-props');\n\n    if (!attr) return;\n\n    const props = JSON.parse(attr) as object;\n    const root = createRoot(mountNode);\n\n    root.render(<ComposeContainer {...props} />);\n  }\n}\n\nfunction main() {\n  ready(loaded).catch((error: unknown) => {\n    console.error(error);\n  });\n}\n\nloadPolyfills()\n  .then(main)\n  .catch((error: unknown) => {\n    console.error(error);\n  });\n"],"names":["Compose","jsxs","Fragment","jsx","ComposeFormContainer","AlertsController","ModalContainer","LoadingBarContainer","initialState","store","dispatch","hydrateStore","fetchCustomEmojis","fetchServer","ComposeContainer","IntlProvider","Provider","Router","loaded","mountNode","document","getElementById","attr","getAttribute","props","JSON","parse","createRoot","render","main","ready","catch","error","console","loadPolyfills","then"],"mappings":"2qDAKA,MAAMA,EAAUA,IACdC,EAAAA,KAAAC,EAAAA,SAAA,CACE,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAqB,UAAS,GAAC,kBAAiB,GAAA,QAChDC,EAAA,EAAgB,QAChBC,EAAA,EAAc,EACfH,EAAAA,IAACI,EAAA,CAAoB,UAAU,aAAA,CAAa,CAAA,EAC9C,ECAEC,GACFC,EAAMC,SAASC,EAAaH,CAAY,CAAC,EAG3CC,EAAMC,SAASE,GAAmB,EAClCH,EAAMC,SAASG,GAAa,EAE5B,MAAMC,EAAmBA,IACvBX,EAAAA,IAACY,EAAA,CACC,SAAAZ,MAACa,EAAA,CAAS,MAAAP,EACR,SAAAN,EAAAA,IAACc,EAAA,CACC,SAAAd,EAAAA,IAACH,EAAA,EAAO,CAAA,CACV,EACF,EACF,ECnBF,SAASkB,GAAS,CAChB,MAAMC,EAAYC,SAASC,eAAe,kBAAkB,EAE5D,GAAIF,EAAW,CACb,MAAMG,EAAOH,EAAUI,aAAa,YAAY,EAEhD,GAAI,CAACD,EAAM,OAEX,MAAME,EAAQC,KAAKC,MAAMJ,CAAI,EAChBK,EAAAA,WAAWR,CAAS,EAE5BS,OAAOzB,EAAAA,IAACW,EAAA,CAAiB,GAAIU,EAAM,CAAG,CAAA,CAE/C,CAEA,SAASK,GAAO,CACdC,EAAMZ,CAAM,EAAEa,MAAOC,GAAmB,CACtCC,QAAQD,MAAMA,CAAK,CAAA,CACpB,CACH,CAEAE,EAAAA,EACGC,KAAKN,CAAI,EACTE,MAAOC,GAAmB,CACzBC,QAAQD,MAAMA,CAAK,CACrB,CAAC"}