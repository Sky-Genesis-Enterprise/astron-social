{"version":3,"file":"list_adder-index-CbzSOQ2G.js","sources":["../../app/javascript/mastodon/features/list_adder/index.tsx"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\n\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\n\nimport { isFulfilled } from '@reduxjs/toolkit';\n\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport ListAltIcon from '@/material-icons/400-24px/list_alt.svg?react';\nimport { fetchLists } from 'mastodon/actions/lists';\nimport { createList } from 'mastodon/actions/lists_typed';\nimport {\n  apiGetAccountLists,\n  apiAddAccountToList,\n  apiRemoveAccountFromList,\n} from 'mastodon/api/lists';\nimport type { ApiListJSON } from 'mastodon/api_types/lists';\nimport { Button } from 'mastodon/components/button';\nimport { CheckBox } from 'mastodon/components/check_box';\nimport { Icon } from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport { getOrderedLists } from 'mastodon/selectors/lists';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nconst messages = defineMessages({\n  newList: {\n    id: 'lists.new_list_name',\n    defaultMessage: 'New list name',\n  },\n  createList: {\n    id: 'lists.create',\n    defaultMessage: 'Create',\n  },\n  close: {\n    id: 'lightbox.close',\n    defaultMessage: 'Close',\n  },\n});\n\nconst ListItem: React.FC<{\n  id: string;\n  title: string;\n  checked: boolean;\n  onChange: (id: string, checked: boolean) => void;\n}> = ({ id, title, checked, onChange }) => {\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(id, e.target.checked);\n    },\n    [id, onChange],\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\n    <label className='lists__item'>\n      <div className='lists__item__title'>\n        <Icon id='list-ul' icon={ListAltIcon} />\n        <span>{title}</span>\n      </div>\n\n      <CheckBox value={id} checked={checked} onChange={handleChange} />\n    </label>\n  );\n};\n\nconst NewListItem: React.FC<{\n  onCreate: (list: ApiListJSON) => void;\n}> = ({ onCreate }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const [title, setTitle] = useState('');\n\n  const handleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(value);\n    },\n    [setTitle],\n  );\n\n  const handleSubmit = useCallback(() => {\n    if (title.trim().length === 0) {\n      return;\n    }\n\n    void dispatch(createList({ title })).then((result) => {\n      if (isFulfilled(result)) {\n        onCreate(result.payload);\n        setTitle('');\n      }\n\n      return '';\n    });\n  }, [setTitle, dispatch, onCreate, title]);\n\n  return (\n    <form className='lists__item' onSubmit={handleSubmit}>\n      <label className='lists__item__title'>\n        <Icon id='list-ul' icon={ListAltIcon} />\n\n        <input\n          type='text'\n          value={title}\n          onChange={handleChange}\n          maxLength={30}\n          required\n          placeholder={intl.formatMessage(messages.newList)}\n        />\n      </label>\n\n      <Button text={intl.formatMessage(messages.createList)} type='submit' />\n    </form>\n  );\n};\n\nconst ListAdder: React.FC<{\n  accountId: string;\n  onClose: () => void;\n}> = ({ accountId, onClose }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const account = useAppSelector((state) => state.accounts.get(accountId));\n  const lists = useAppSelector((state) => getOrderedLists(state));\n  const [listIds, setListIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    void dispatch(fetchLists());\n\n    apiGetAccountLists(accountId)\n      .then((data) => {\n        setListIds(data.map((l) => l.id));\n        return '';\n      })\n      .catch(() => {\n        // Nothing\n      });\n  }, [dispatch, setListIds, accountId]);\n\n  const handleToggle = useCallback(\n    (listId: string, checked: boolean) => {\n      if (checked) {\n        setListIds((currentListIds) => [listId, ...currentListIds]);\n\n        apiAddAccountToList(listId, accountId).catch(() => {\n          setListIds((currentListIds) =>\n            currentListIds.filter((id) => id !== listId),\n          );\n        });\n      } else {\n        setListIds((currentListIds) =>\n          currentListIds.filter((id) => id !== listId),\n        );\n\n        apiRemoveAccountFromList(listId, accountId).catch(() => {\n          setListIds((currentListIds) => [listId, ...currentListIds]);\n        });\n      }\n    },\n    [setListIds, accountId],\n  );\n\n  const handleCreate = useCallback(\n    (list: ApiListJSON) => {\n      setListIds((currentListIds) => [list.id, ...currentListIds]);\n\n      apiAddAccountToList(list.id, accountId).catch(() => {\n        setListIds((currentListIds) =>\n          currentListIds.filter((id) => id !== list.id),\n        );\n      });\n    },\n    [setListIds, accountId],\n  );\n\n  return (\n    <div className='modal-root__modal dialog-modal'>\n      <div className='dialog-modal__header'>\n        <IconButton\n          className='dialog-modal__header__close'\n          title={intl.formatMessage(messages.close)}\n          icon='times'\n          iconComponent={CloseIcon}\n          onClick={onClose}\n        />\n\n        <span className='dialog-modal__header__title'>\n          <FormattedMessage\n            id='lists.add_to_lists'\n            defaultMessage='Add {name} to lists'\n            values={{ name: <strong>@{account?.acct}</strong> }}\n          />\n        </span>\n      </div>\n\n      <div className='dialog-modal__content'>\n        <div className='lists-scrollable'>\n          <NewListItem onCreate={handleCreate} />\n\n          {lists.map((list) => (\n            <ListItem\n              key={list.id}\n              id={list.id}\n              title={list.title}\n              checked={listIds.includes(list.id)}\n              onChange={handleToggle}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default ListAdder;\n"],"names":["messages","defineMessages","newList","id","defaultMessage","createList","close","ListItem","title","checked","onChange","handleChange","useCallback","e","target","jsxs","jsx","Icon","ListAltIcon","CheckBox","NewListItem","onCreate","intl","useIntl","dispatch","useAppDispatch","setTitle","useState","value","handleSubmit","trim","length","then","result","isFulfilled","payload","formatMessage","Button","ListAdder","accountId","onClose","account","useAppSelector","state","accounts","get","lists","getOrderedLists","listIds","setListIds","useEffect","fetchLists","apiGetAccountLists","data","map","l","catch","handleToggle","listId","currentListIds","apiAddAccountToList","filter","apiRemoveAccountFromList","handleCreate","list","IconButton","CloseIcon","FormattedMessage","name","acct","includes"],"mappings":"wvBAuBA,MAAMA,EAAWC,EAAe,CAC9BC,QAAS,CACPC,GAAE,sBACFC,eAAc,eAAA,EAEhBC,WAAY,CACVF,GAAE,eACFC,eAAc,QAAA,EAEhBE,MAAO,CACLH,GAAE,iBACFC,eAAc,OAAA,CAElB,CAAC,EAEKG,EAKDA,CAAC,CAAEJ,GAAAA,EAAIK,MAAAA,EAAOC,QAAAA,EAASC,SAAAA,CAAS,IAAM,CACzC,MAAMC,EAAeC,cAClBC,GAA2C,CAC1CH,EAASP,EAAIU,EAAEC,OAAOL,OAAO,CAAA,EAE/B,CAACN,EAAIO,CAAQ,CACf,EAEA,OAEEK,EAAAA,KAAC,QAAA,CAAM,UAAU,cACf,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,qBACb,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAK,GAAG,UAAU,KAAMC,EAAY,EACrCF,EAAAA,IAAC,QAAMR,SAAAA,CAAAA,CAAM,CAAA,EACf,QAECW,EAAA,CAAS,MAAOhB,EAAI,QAAAM,EAAkB,SAAUE,CAAAA,CAAa,CAAA,CAAA,CAChE,CAEJ,EAEMS,EAEDA,CAAC,CAAEC,SAAAA,CAAS,IAAM,CACrB,MAAMC,EAAOC,EAAAA,EACPC,EAAWC,EAAAA,EACX,CAACjB,EAAOkB,CAAQ,EAAIC,EAAAA,SAAS,EAAE,EAE/BhB,EAAeC,EAAAA,YACnB,CAAC,CAAEE,OAAQ,CAAEc,MAAAA,CAAAA,CAAM,IAA6C,CAC9DF,EAASE,CAAK,CAAA,EAEhB,CAACF,CAAQ,CACX,EAEMG,EAAejB,EAAAA,YAAY,IAAM,CACjCJ,EAAMsB,OAAOC,SAAW,GAIvBP,EAASnB,EAAW,CAAEG,MAAAA,CAAAA,CAAO,CAAC,EAAEwB,KAAMC,IACrCC,EAAYD,CAAM,IACpBZ,EAASY,EAAOE,OAAO,EACvBT,EAAS,EAAE,GAGN,GACR,CAAA,EACA,CAACA,EAAUF,EAAUH,EAAUb,CAAK,CAAC,EAExC,OACEO,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAc,SAAUc,EACtC,SAAA,CAAAd,EAAAA,KAAC,QAAA,CAAM,UAAU,qBACf,SAAA,CAAAC,EAAAA,IAACC,EAAA,CAAK,GAAG,UAAU,KAAMC,EAAY,QAEpC,QAAA,CACC,KAAK,OACL,MAAOV,EACP,SAAUG,EACV,UAAW,GACX,SAAQ,GACR,YAAaW,EAAKc,cAAcpC,EAASE,OAAO,CAAA,CAAE,CAAA,EAEtD,EAEAc,MAACqB,GAAO,KAAMf,EAAKc,cAAcpC,EAASK,UAAU,EAAG,KAAK,QAAA,CAAQ,CAAA,EACtE,CAEJ,EAEMiC,GAGDA,CAAC,CAAEC,UAAAA,EAAWC,QAAAA,CAAQ,IAAM,CAC/B,MAAMlB,EAAOC,EAAAA,EACPC,EAAWC,EAAAA,EACXgB,EAAUC,EAAgBC,GAAUA,EAAMC,SAASC,IAAIN,CAAS,CAAC,EACjEO,EAAQJ,EAAgBC,GAAUI,EAAgBJ,CAAK,CAAC,EACxD,CAACK,EAASC,CAAU,EAAItB,EAAAA,SAAmB,CAAA,CAAE,EAEnDuB,EAAAA,UAAU,IAAM,CACT1B,EAAS2B,GAAY,EAE1BC,EAAmBb,CAAS,EACzBP,KAAMqB,IACLJ,EAAWI,EAAKC,IAAKC,GAAMA,EAAEpD,EAAE,CAAC,EACzB,GACR,EACAqD,MAAM,IAAM,CAAA,CAEZ,CAAA,EACF,CAAChC,EAAUyB,EAAYV,CAAS,CAAC,EAEpC,MAAMkB,EAAe7C,EAAAA,YACnB,CAAC8C,EAAgBjD,IAAqB,CAChCA,GACFwC,EAAYU,GAAmB,CAACD,EAAQ,GAAGC,CAAc,CAAC,EAE1DC,EAAoBF,EAAQnB,CAAS,EAAEiB,MAAM,IAAM,CACjDP,KACEU,EAAeE,OAAQ1D,GAAOA,IAAOuD,CAAM,CAC7C,CAAA,CACD,IAEDT,KACEU,EAAeE,OAAQ1D,GAAOA,IAAOuD,CAAM,CAC7C,EAEAI,EAAyBJ,EAAQnB,CAAS,EAAEiB,MAAM,IAAM,CACtDP,EAAYU,GAAmB,CAACD,EAAQ,GAAGC,CAAc,CAAC,CAAA,CAC3D,EACH,EAEF,CAACV,EAAYV,CAAS,CACxB,EAEMwB,EAAenD,cAClBoD,GAAsB,CACrBf,KAA+B,CAACe,EAAK7D,GAAI,GAAGwD,CAAc,CAAC,EAE3DC,EAAoBI,EAAK7D,GAAIoC,CAAS,EAAEiB,MAAM,IAAM,CAClDP,KACEU,EAAeE,UAAe1D,IAAO6D,EAAK7D,EAAE,CAC9C,CAAA,CACD,CAAA,EAEH,CAAC8C,EAAYV,CAAS,CACxB,EAEA,OACExB,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAACiD,EAAA,CACC,UAAU,8BACV,MAAO3C,EAAKc,cAAcpC,EAASM,KAAK,EACxC,KAAK,QACL,cAAe4D,EACf,QAAS1B,EAAQ,EAGnBxB,EAAAA,IAAC,OAAA,CAAK,UAAU,8BACd,SAAAA,EAAAA,IAACmD,GACC,GAAE,qBACF,eAAe,sBACf,OAAQ,CAAEC,YAAO,SAAA,CAAO,SAAA,CAAA,IAAE3B,GAAAA,YAAAA,EAAS4B,IAAAA,CAAAA,CAAK,CAAA,EAAY,CAAA,CAExD,CAAA,EACF,QAEC,MAAA,CAAI,UAAU,wBACb,SAAAtD,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAACI,EAAA,CAAY,SAAU2C,CAAAA,CAAa,EAEnCjB,EAAMQ,IAAKU,GACVhD,EAAAA,IAACT,GAEC,GAAIyD,EAAK7D,GACT,MAAO6D,EAAKxD,MACZ,QAASwC,EAAQsB,SAASN,EAAK7D,EAAE,EACjC,SAAUsD,CAAAA,EAJLO,EAAK7D,EAIa,CAE1B,CAAA,CAAA,CACH,CAAA,CACF,CAAA,EACF,CAEJ"}