{"version":3,"mappings":"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","names":["setAnnouncementEndsAttributes","target","valid","value","validity","element","document","querySelector","classList","remove","required","min","add","removeAttribute","Rails","delegate","HTMLInputElement","batchCheckboxClassName","showSelectAll","selectAllMatchingElement","hideSelectAll","hiddenField","selectedMsg","notSelectedMsg","querySelectorAll","forEach","content","checked","active","checkAllElement","allCheckboxes","Array","from","every","indeterminate","some","HTMLSelectElement","form","submit","onDomainBlockSeverityChange","rejectMediaDiv","rejectReportsDiv","HTMLElement","style","display","onEnableBootstrapTimelineAccountsChange","bootstrapTimelineAccountsField","disabled","parentElement","onChangeRegistrationMode","enabled","warning_hint","input","contains","convertUTCDateTimeToLocal","date","Date","twoChars","x","toString","padStart","getFullYear","getMonth","getDate","getHours","getMinutes","convertLocalDatetimeToUTC","fullISO8601","toISOString","slice","indexOf","mountReactComponent","componentName","getAttribute","stringProps","componentProps","JSON","parse","default","AdminComponent","__vitePreload","Component","__variableDynamicImportRuntimeHelper","createRoot","render","jsxDEV","ready","domainBlockSeveritySelect","enableBootstrapTimelineAccounts","registrationMode","addEventListener","e","domain","HTMLAnchorElement","url","URL","href","searchParams","set","placeholder","HTMLFormElement","announcementStartsAt","catch","reason"],"ignoreList":[],"sources":["../../../app/javascript/entrypoints/admin.tsx"],"sourcesContent":["import { createRoot } from 'react-dom/client';\n\nimport Rails from '@rails/ujs';\n\nimport ready from '../mastodon/ready';\n\nconst setAnnouncementEndsAttributes = (target: HTMLInputElement) => {\n  const valid = target.value && target.validity.valid;\n  const element = document.querySelector<HTMLInputElement>(\n    'input[type=\"datetime-local\"]#announcement_ends_at',\n  );\n\n  if (!element) return;\n\n  if (valid) {\n    element.classList.remove('optional');\n    element.required = true;\n    element.min = target.value;\n  } else {\n    element.classList.add('optional');\n    element.removeAttribute('required');\n    element.removeAttribute('min');\n  }\n};\n\nRails.delegate(\n  document,\n  'input[type=\"datetime-local\"]#announcement_starts_at',\n  'change',\n  ({ target }) => {\n    if (target instanceof HTMLInputElement)\n      setAnnouncementEndsAttributes(target);\n  },\n);\n\nconst batchCheckboxClassName = '.batch-checkbox input[type=\"checkbox\"]';\n\nconst showSelectAll = () => {\n  const selectAllMatchingElement = document.querySelector(\n    '.batch-table__select-all',\n  );\n  selectAllMatchingElement?.classList.add('active');\n};\n\nconst hideSelectAll = () => {\n  const selectAllMatchingElement = document.querySelector(\n    '.batch-table__select-all',\n  );\n  const hiddenField = document.querySelector<HTMLInputElement>(\n    'input#select_all_matching',\n  );\n  const selectedMsg = document.querySelector(\n    '.batch-table__select-all .selected',\n  );\n  const notSelectedMsg = document.querySelector(\n    '.batch-table__select-all .not-selected',\n  );\n\n  selectAllMatchingElement?.classList.remove('active');\n  selectedMsg?.classList.remove('active');\n  notSelectedMsg?.classList.add('active');\n  if (hiddenField) hiddenField.value = '0';\n};\n\nRails.delegate(document, '#batch_checkbox_all', 'change', ({ target }) => {\n  if (!(target instanceof HTMLInputElement)) return;\n\n  const selectAllMatchingElement = document.querySelector(\n    '.batch-table__select-all',\n  );\n\n  document\n    .querySelectorAll<HTMLInputElement>(batchCheckboxClassName)\n    .forEach((content) => {\n      content.checked = target.checked;\n    });\n\n  if (selectAllMatchingElement) {\n    if (target.checked) {\n      showSelectAll();\n    } else {\n      hideSelectAll();\n    }\n  }\n});\n\nRails.delegate(document, '.batch-table__select-all button', 'click', () => {\n  const hiddenField = document.querySelector<HTMLInputElement>(\n    '#select_all_matching',\n  );\n\n  if (!hiddenField) return;\n\n  const active = hiddenField.value === '1';\n  const selectedMsg = document.querySelector(\n    '.batch-table__select-all .selected',\n  );\n  const notSelectedMsg = document.querySelector(\n    '.batch-table__select-all .not-selected',\n  );\n\n  if (!selectedMsg || !notSelectedMsg) return;\n\n  if (active) {\n    hiddenField.value = '0';\n    selectedMsg.classList.remove('active');\n    notSelectedMsg.classList.add('active');\n  } else {\n    hiddenField.value = '1';\n    notSelectedMsg.classList.remove('active');\n    selectedMsg.classList.add('active');\n  }\n});\n\nRails.delegate(document, batchCheckboxClassName, 'change', () => {\n  const checkAllElement = document.querySelector<HTMLInputElement>(\n    'input#batch_checkbox_all',\n  );\n  const selectAllMatchingElement = document.querySelector(\n    '.batch-table__select-all',\n  );\n\n  if (checkAllElement) {\n    const allCheckboxes = Array.from(\n      document.querySelectorAll<HTMLInputElement>(batchCheckboxClassName),\n    );\n    checkAllElement.checked = allCheckboxes.every((content) => content.checked);\n    checkAllElement.indeterminate =\n      !checkAllElement.checked &&\n      allCheckboxes.some((content) => content.checked);\n\n    if (selectAllMatchingElement) {\n      if (checkAllElement.checked) {\n        showSelectAll();\n      } else {\n        hideSelectAll();\n      }\n    }\n  }\n});\n\nRails.delegate(\n  document,\n  '.filter-subset--with-select select',\n  'change',\n  ({ target }) => {\n    if (target instanceof HTMLSelectElement) target.form?.submit();\n  },\n);\n\nconst onDomainBlockSeverityChange = (target: HTMLSelectElement) => {\n  const rejectMediaDiv = document.querySelector(\n    '.input.with_label.domain_block_reject_media',\n  );\n  const rejectReportsDiv = document.querySelector(\n    '.input.with_label.domain_block_reject_reports',\n  );\n\n  if (rejectMediaDiv && rejectMediaDiv instanceof HTMLElement) {\n    rejectMediaDiv.style.display =\n      target.value === 'suspend' ? 'none' : 'block';\n  }\n\n  if (rejectReportsDiv && rejectReportsDiv instanceof HTMLElement) {\n    rejectReportsDiv.style.display =\n      target.value === 'suspend' ? 'none' : 'block';\n  }\n};\n\nRails.delegate(document, '#domain_block_severity', 'change', ({ target }) => {\n  if (target instanceof HTMLSelectElement) onDomainBlockSeverityChange(target);\n});\n\nconst onEnableBootstrapTimelineAccountsChange = (target: HTMLInputElement) => {\n  const bootstrapTimelineAccountsField =\n    document.querySelector<HTMLInputElement>(\n      '#form_admin_settings_bootstrap_timeline_accounts',\n    );\n\n  if (bootstrapTimelineAccountsField) {\n    bootstrapTimelineAccountsField.disabled = !target.checked;\n    if (target.checked) {\n      bootstrapTimelineAccountsField.parentElement?.classList.remove(\n        'disabled',\n      );\n      bootstrapTimelineAccountsField.parentElement?.parentElement?.classList.remove(\n        'disabled',\n      );\n    } else {\n      bootstrapTimelineAccountsField.parentElement?.classList.add('disabled');\n      bootstrapTimelineAccountsField.parentElement?.parentElement?.classList.add(\n        'disabled',\n      );\n    }\n  }\n};\n\nRails.delegate(\n  document,\n  '#form_admin_settings_enable_bootstrap_timeline_accounts',\n  'change',\n  ({ target }) => {\n    if (target instanceof HTMLInputElement)\n      onEnableBootstrapTimelineAccountsChange(target);\n  },\n);\n\nconst onChangeRegistrationMode = (target: HTMLSelectElement) => {\n  const enabled = target.value === 'approved';\n\n  document\n    .querySelectorAll<HTMLElement>(\n      '.form_admin_settings_registrations_mode .warning-hint',\n    )\n    .forEach((warning_hint) => {\n      warning_hint.style.display = target.value === 'open' ? 'inline' : 'none';\n    });\n\n  document\n    .querySelectorAll<HTMLInputElement>(\n      'input#form_admin_settings_require_invite_text',\n    )\n    .forEach((input) => {\n      input.disabled = !enabled;\n      if (enabled) {\n        let element: HTMLElement | null = input;\n        do {\n          element.classList.remove('disabled');\n          element = element.parentElement;\n        } while (element && !element.classList.contains('fields-group'));\n      } else {\n        let element: HTMLElement | null = input;\n        do {\n          element.classList.add('disabled');\n          element = element.parentElement;\n        } while (element && !element.classList.contains('fields-group'));\n      }\n    });\n};\n\nconst convertUTCDateTimeToLocal = (value: string) => {\n  const date = new Date(value + 'Z');\n  const twoChars = (x: number) => x.toString().padStart(2, '0');\n  return `${date.getFullYear()}-${twoChars(date.getMonth() + 1)}-${twoChars(date.getDate())}T${twoChars(date.getHours())}:${twoChars(date.getMinutes())}`;\n};\n\nfunction convertLocalDatetimeToUTC(value: string) {\n  const date = new Date(value);\n  const fullISO8601 = date.toISOString();\n  return fullISO8601.slice(0, fullISO8601.indexOf('T') + 6);\n}\n\nRails.delegate(\n  document,\n  '#form_admin_settings_registrations_mode',\n  'change',\n  ({ target }) => {\n    if (target instanceof HTMLSelectElement) onChangeRegistrationMode(target);\n  },\n);\n\nasync function mountReactComponent(element: Element) {\n  const componentName = element.getAttribute('data-admin-component');\n  const stringProps = element.getAttribute('data-props');\n\n  if (!stringProps) return;\n\n  const componentProps = JSON.parse(stringProps) as object;\n\n  const { default: AdminComponent } = await import(\n    '@/mastodon/containers/admin_component'\n  );\n\n  const { default: Component } = (await import(\n    `@/mastodon/components/admin/${componentName}.jsx`\n  )) as { default: React.ComponentType };\n\n  const root = createRoot(element);\n\n  root.render(\n    <AdminComponent>\n      <Component {...componentProps} />\n    </AdminComponent>,\n  );\n}\n\nready(() => {\n  const domainBlockSeveritySelect = document.querySelector<HTMLSelectElement>(\n    'select#domain_block_severity',\n  );\n  if (domainBlockSeveritySelect)\n    onDomainBlockSeverityChange(domainBlockSeveritySelect);\n\n  const enableBootstrapTimelineAccounts =\n    document.querySelector<HTMLInputElement>(\n      'input#form_admin_settings_enable_bootstrap_timeline_accounts',\n    );\n  if (enableBootstrapTimelineAccounts)\n    onEnableBootstrapTimelineAccountsChange(enableBootstrapTimelineAccounts);\n\n  const registrationMode = document.querySelector<HTMLSelectElement>(\n    'select#form_admin_settings_registrations_mode',\n  );\n  if (registrationMode) onChangeRegistrationMode(registrationMode);\n\n  const checkAllElement = document.querySelector<HTMLInputElement>(\n    'input#batch_checkbox_all',\n  );\n  if (checkAllElement) {\n    const allCheckboxes = Array.from(\n      document.querySelectorAll<HTMLInputElement>(batchCheckboxClassName),\n    );\n    checkAllElement.checked = allCheckboxes.every((content) => content.checked);\n    checkAllElement.indeterminate =\n      !checkAllElement.checked &&\n      allCheckboxes.some((content) => content.checked);\n  }\n\n  document\n    .querySelector('a#add-instance-button')\n    ?.addEventListener('click', (e) => {\n      const domain = document.querySelector<HTMLInputElement>(\n        'input[type=\"text\"]#by_domain',\n      )?.value;\n\n      if (domain && e.target instanceof HTMLAnchorElement) {\n        const url = new URL(e.target.href);\n        url.searchParams.set('_domain', domain);\n        e.target.href = url.toString();\n      }\n    });\n\n  document\n    .querySelectorAll<HTMLInputElement>('input[type=\"datetime-local\"]')\n    .forEach((element) => {\n      if (element.value) {\n        element.value = convertUTCDateTimeToLocal(element.value);\n      }\n      if (element.placeholder) {\n        element.placeholder = convertUTCDateTimeToLocal(element.placeholder);\n      }\n    });\n\n  Rails.delegate(document, 'form', 'submit', ({ target }) => {\n    if (target instanceof HTMLFormElement)\n      target\n        .querySelectorAll<HTMLInputElement>('input[type=\"datetime-local\"]')\n        .forEach((element) => {\n          if (element.value && element.validity.valid) {\n            element.value = convertLocalDatetimeToUTC(element.value);\n          }\n        });\n  });\n\n  const announcementStartsAt = document.querySelector<HTMLInputElement>(\n    'input[type=\"datetime-local\"]#announcement_starts_at',\n  );\n  if (announcementStartsAt) {\n    setAnnouncementEndsAttributes(announcementStartsAt);\n  }\n\n  document.querySelectorAll('[data-admin-component]').forEach((element) => {\n    void mountReactComponent(element);\n  });\n}).catch((reason: unknown) => {\n  throw reason;\n});\n"],"file":"assets/admin-eOWoMbSG.js"}