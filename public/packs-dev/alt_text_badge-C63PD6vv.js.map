{"version":3,"file":"alt_text_badge-C63PD6vv.js","sources":["../../app/javascript/mastodon/components/alt_text_badge.tsx"],"sourcesContent":["import { useState, useCallback, useRef, useId } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport Overlay from 'react-overlays/Overlay';\nimport type {\n  OffsetValue,\n  UsePopperOptions,\n} from 'react-overlays/esm/usePopper';\n\nimport { useSelectableClick } from 'mastodon/hooks/useSelectableClick';\n\nconst offset = [0, 4] as OffsetValue;\nconst popperConfig = { strategy: 'fixed' } as UsePopperOptions;\n\nexport const AltTextBadge: React.FC<{\n  description: string;\n}> = ({ description }) => {\n  const accessibilityId = useId();\n  const anchorRef = useRef<HTMLButtonElement>(null);\n  const [open, setOpen] = useState(false);\n\n  const handleClick = useCallback(() => {\n    setOpen((v) => !v);\n  }, [setOpen]);\n\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const [handleMouseDown, handleMouseUp] = useSelectableClick(handleClose);\n\n  return (\n    <>\n      <button\n        ref={anchorRef}\n        className='media-gallery__alt__label'\n        onClick={handleClick}\n        aria-expanded={open}\n        aria-controls={accessibilityId}\n      >\n        ALT\n      </button>\n\n      <Overlay\n        rootClose\n        onHide={handleClose}\n        show={open}\n        target={anchorRef.current}\n        placement='top-end'\n        flip\n        offset={offset}\n        popperConfig={popperConfig}\n      >\n        {({ props }) => (\n          <div {...props} className='hover-card-controller'>\n            <div // eslint-disable-line jsx-a11y/no-noninteractive-element-interactions\n              className='media-gallery__alt__popover dropdown-animation'\n              role='region'\n              id={accessibilityId}\n              onMouseDown={handleMouseDown}\n              onMouseUp={handleMouseUp}\n            >\n              <h4>\n                <FormattedMessage\n                  id='alt_text_badge.title'\n                  defaultMessage='Alt text'\n                />\n              </h4>\n              <p>{description}</p>\n            </div>\n          </div>\n        )}\n      </Overlay>\n    </>\n  );\n};\n"],"names":["offset","popperConfig","strategy","AltTextBadge","description","accessibilityId","useId","anchorRef","useRef","open","setOpen","useState","handleClick","useCallback","v","handleClose","handleMouseDown","handleMouseUp","useSelectableClick","jsxDEV","Fragment","this","Overlay","current","props","FormattedMessage"],"mappings":"wLAYA,MAAMA,EAAS,CAAC,EAAG,CAAC,EACdC,EAAe,CAAEC,SAAU,OAAA,EAEpBC,EAERA,CAAC,CAAEC,YAAAA,KAAkB,CACxB,MAAMC,EAAkBC,EAAAA,MAAAA,EAClBC,EAAYC,EAAAA,OAA0B,IAAI,EAC1C,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAS,EAAK,EAEhCC,EAAcC,EAAAA,YAAY,IAAM,CACpCH,EAASI,GAAM,CAACA,CAAC,CAAA,EAChB,CAACJ,CAAO,CAAC,EAENK,EAAcF,EAAAA,YAAY,IAAM,CACpCH,EAAQ,EAAK,CAAA,EACZ,CAACA,CAAO,CAAC,EAEN,CAACM,EAAiBC,CAAa,EAAIC,EAAmBH,CAAW,EAEvE,OACEI,EAAAA,OAAAC,WAAA,CACE,SAAA,CAAAD,EAAAA,OAAC,SAAA,CACC,IAAKZ,EACL,UAAU,4BACV,QAASK,EACT,gBAAeH,EACf,gBAAeJ,EAAgB,SAAA,KAAA,EALjC,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,CAAA,EAAAgB,MAAA,EAUAF,EAAAA,OAACG,EAAA,CACC,UAAA,GACA,OAAQP,EACR,KAAMN,EACN,OAAQF,EAAUgB,QAClB,UAAU,UACV,KAAA,GACA,OAAAvB,EACA,aAAAC,EAEC,SAAA,CAAC,CAAEuB,MAAAA,CAAAA,aACD,MAAA,CAAI,GAAIA,EAAO,UAAU,wBACxB,SAAAL,EAAAA,OAAC,MAAA,CACC,UAAU,iDACV,KAAK,SACL,GAAId,EACJ,YAAaW,EACb,UAAWC,EAEX,SAAA,CAAAE,SAAC,KAAA,CACC,SAAAA,EAAAA,OAACM,EAAA,CACC,GAAE,uBACF,eAAe,UAAA,EAFjB,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,EAAA,EAAAJ,MAAA,CAE2B,EAH7B,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAKA,EACAF,EAAAA,OAAC,KAAGf,SAAAA,CAAAA,EAAJ,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,EAAA,EAAAiB,MAAgB,CAAA,CAAA,EAblB,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,EAAA,EAAAA,MAAA,CAcA,EAfF,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAgBA,CAAA,EA3BJ,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAAA,CA6BA,CAAA,EAxCF,OAAA,GAAA,CAAA,SAAA,+FAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAyCA,CAEJ"}