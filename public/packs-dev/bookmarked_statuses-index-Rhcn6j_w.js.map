{"version":3,"file":"bookmarked_statuses-index-Rhcn6j_w.js","sources":["../../app/javascript/mastodon/features/bookmarked_statuses/index.tsx"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\n\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport BookmarksIcon from '@/material-icons/400-24px/bookmarks-fill.svg?react';\nimport {\n  fetchBookmarkedStatuses,\n  expandBookmarkedStatuses,\n} from 'mastodon/actions/bookmarks';\nimport { addColumn, removeColumn, moveColumn } from 'mastodon/actions/columns';\nimport { Column } from 'mastodon/components/column';\nimport type { ColumnRef } from 'mastodon/components/column';\nimport { ColumnHeader } from 'mastodon/components/column_header';\nimport StatusList from 'mastodon/components/status_list';\nimport { getStatusList } from 'mastodon/selectors';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nconst messages = defineMessages({\n  heading: { id: 'column.bookmarks', defaultMessage: 'Bookmarks' },\n});\n\nconst Bookmarks: React.FC<{\n  columnId: string;\n  multiColumn: boolean;\n}> = ({ columnId, multiColumn }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const columnRef = useRef<ColumnRef>(null);\n  const statusIds = useAppSelector((state) =>\n    getStatusList(state, 'bookmarks'),\n  );\n  const isLoading = useAppSelector(\n    (state) =>\n      state.status_lists.getIn(['bookmarks', 'isLoading'], true) as boolean,\n  );\n  const hasMore = useAppSelector(\n    (state) => !!state.status_lists.getIn(['bookmarks', 'next']),\n  );\n\n  useEffect(() => {\n    dispatch(fetchBookmarkedStatuses());\n  }, [dispatch]);\n\n  const handlePin = useCallback(() => {\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('BOOKMARKS', {}));\n    }\n  }, [dispatch, columnId]);\n\n  const handleMove = useCallback(\n    (dir: number) => {\n      dispatch(moveColumn(columnId, dir));\n    },\n    [dispatch, columnId],\n  );\n\n  const handleHeaderClick = useCallback(() => {\n    columnRef.current?.scrollTop();\n  }, []);\n\n  const handleLoadMore = useCallback(() => {\n    dispatch(expandBookmarkedStatuses());\n  }, [dispatch]);\n\n  const pinned = !!columnId;\n\n  const emptyMessage = (\n    <FormattedMessage\n      id='empty_column.bookmarked_statuses'\n      defaultMessage=\"You don't have any bookmarked posts yet. When you bookmark one, it will show up here.\"\n    />\n  );\n\n  return (\n    <Column\n      bindToDocument={!multiColumn}\n      ref={columnRef}\n      label={intl.formatMessage(messages.heading)}\n    >\n      <ColumnHeader\n        icon='bookmarks'\n        iconComponent={BookmarksIcon}\n        title={intl.formatMessage(messages.heading)}\n        onPin={handlePin}\n        onMove={handleMove}\n        onClick={handleHeaderClick}\n        pinned={pinned}\n        multiColumn={multiColumn}\n      />\n\n      <StatusList\n        trackScroll={!pinned}\n        statusIds={statusIds}\n        scrollKey={`bookmarked_statuses-${columnId}`}\n        hasMore={hasMore}\n        isLoading={isLoading}\n        onLoadMore={handleLoadMore}\n        emptyMessage={emptyMessage}\n        bindToDocument={!multiColumn}\n        timelineId='bookmarks'\n      />\n\n      <Helmet>\n        <title>{intl.formatMessage(messages.heading)}</title>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Bookmarks;\n"],"names":["messages","defineMessages","heading","id","defaultMessage","Bookmarks","columnId","multiColumn","intl","useIntl","dispatch","useAppDispatch","columnRef","useRef","statusIds","useAppSelector","state","getStatusList","isLoading","status_lists","getIn","hasMore","useEffect","fetchBookmarkedStatuses","handlePin","useCallback","removeColumn","addColumn","handleMove","dir","moveColumn","handleHeaderClick","current","scrollTop","handleLoadMore","expandBookmarkedStatuses","pinned","emptyMessage","jsxDEV","FormattedMessage","this","Column","formatMessage","ColumnHeader","BookmarksIcon","StatusList","Helmet"],"mappings":"8xDAmBA,MAAMA,EAAWC,EAAe,CAC9BC,QAAS,CAAEC,sBAAwBC,2BACrC,CAAC,EAEKC,GAGDA,CAAC,CAAEC,SAAAA,EAAUC,YAAAA,KAAkB,CAClC,MAAMC,EAAOC,EAAAA,EACPC,EAAWC,EAAAA,EACXC,EAAYC,EAAAA,OAAkB,IAAI,EAClCC,EAAYC,EAAgBC,GAChCC,EAAcD,EAAO,WAAW,CAAA,EAE5BE,EAAYH,EACfC,GACCA,EAAMG,aAAaC,MAAM,CAAC,YAAa,WAAW,EAAG,EAAI,CAAA,EAEvDC,EAAUN,EACbC,GAAU,CAAC,CAACA,EAAMG,aAAaC,MAAM,CAAC,YAAa,MAAM,CAAC,CAAA,EAG7DE,EAAAA,UAAU,IAAM,CACdZ,EAASa,GAAyB,CAAA,EACjC,CAACb,CAAQ,CAAC,EAEb,MAAMc,EAAYC,EAAAA,YAAY,IAAM,CAEhCf,EADEJ,EACOoB,EAAapB,CAAQ,EAErBqB,EAAU,YAAa,CAAA,CAAE,CAFH,CAGjC,EACC,CAACjB,EAAUJ,CAAQ,CAAC,EAEjBsB,EAAaH,EAAAA,YAChBI,GAAgB,CACfnB,EAASoB,EAAWxB,EAAUuB,CAAG,CAAC,CAAA,EAEpC,CAACnB,EAAUJ,CAAQ,CAAA,EAGfyB,EAAoBN,EAAAA,YAAY,IAAM,QAC1Cb,EAAAA,EAAUoB,UAAVpB,MAAAA,EAAmBqB,WAAU,EAC5B,EAAE,EAECC,EAAiBT,EAAAA,YAAY,IAAM,CACvCf,EAASyB,GAA0B,CAAA,EAClC,CAACzB,CAAQ,CAAC,EAEP0B,EAAS,CAAC,CAAC9B,EAEX+B,EACJC,EAAAA,OAACC,EAAA,CACC,GAAE,mCACF,eAAe,uFAAA,EAFjB,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,GAAA,aAAA,CAAA,EAAAC,MAAA,EAMF,OACEF,EAAAA,OAACG,EAAA,CACC,eAAgB,CAAClC,EACjB,IAAKK,EACL,MAAOJ,EAAKkC,cAAc1C,EAASE,OAAO,EAE1C,SAAA,CAAAoC,EAAAA,OAACK,EAAA,CACC,KAAK,YACL,cAAeC,EACf,MAAOpC,EAAKkC,cAAc1C,EAASE,OAAO,EAC1C,MAAOsB,EACP,OAAQI,EACR,QAASG,EACT,OAAAK,EACA,YAAA7B,CAAA,EARF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,GAAA,aAAA,CAAA,EAAAiC,MAAA,EAWAF,EAAAA,OAACO,EAAA,CACC,YAAa,CAACT,EACd,UAAAtB,EACA,UAAW,uBAAuBR,CAAQ,GAC1C,QAAAe,EACA,UAAAH,EACA,WAAYgB,EACZ,aAAAG,EACA,eAAgB,CAAC9B,EACjB,WAAW,WAAA,EATb,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,GAAA,aAAA,CAAA,EAAAiC,MAAA,WAYCM,EAAA,CACC,SAAA,CAAAR,EAAAA,OAAC,QAAA,CAAO9B,SAAAA,EAAKkC,cAAc1C,EAASE,OAAO,CAAA,EAA3C,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,CAAA,EAAAsC,MAA6C,EAC7CF,SAAC,OAAA,CAAK,KAAK,SAAS,QAAQ,SAAA,EAA5B,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,CAAA,EAAAE,MAAqC,CAAA,CAAA,EAFvC,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,IAAA,aAAA,CAAA,EAAAA,MAGA,CAAA,CAAA,EA/BF,OAAA,GAAA,CAAA,SAAA,wGAAA,WAAA,GAAA,aAAA,CAAA,EAAAA,MAAA,CAkCJ"}