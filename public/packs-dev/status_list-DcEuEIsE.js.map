{"version":3,"file":"status_list-DcEuEIsE.js","sources":["../../app/javascript/mastodon/components/regeneration_indicator.tsx","../../app/javascript/mastodon/features/home_timeline/components/inline_follow_suggestions.tsx","../../app/javascript/mastodon/components/status_list.jsx"],"sourcesContent":["import { FormattedMessage } from 'react-intl';\n\nimport { GIF } from './gif';\n\nexport const RegenerationIndicator: React.FC = () => (\n  <div className='regeneration-indicator'>\n    <GIF\n      src='/loading.gif'\n      staticSrc='/loading.png'\n      className='regeneration-indicator__figure'\n    />\n\n    <div className='regeneration-indicator__label'>\n      <strong>\n        <FormattedMessage\n          id='regeneration_indicator.preparing_your_home_feed'\n          defaultMessage='Preparing your home feedâ€¦'\n        />\n      </strong>\n      <FormattedMessage\n        id='regeneration_indicator.please_stand_by'\n        defaultMessage='Please stand by.'\n      />\n    </div>\n  </div>\n);\n","import { useEffect, useCallback, useRef, useState } from 'react';\n\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport ChevronLeftIcon from '@/material-icons/400-24px/chevron_left.svg?react';\nimport ChevronRightIcon from '@/material-icons/400-24px/chevron_right.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport InfoIcon from '@/material-icons/400-24px/info.svg?react';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport {\n  fetchSuggestions,\n  dismissSuggestion,\n} from 'mastodon/actions/suggestions';\nimport type { ApiSuggestionSourceJSON } from 'mastodon/api_types/suggestions';\nimport { Avatar } from 'mastodon/components/avatar';\nimport { DisplayName } from 'mastodon/components/display_name';\nimport { FollowButton } from 'mastodon/components/follow_button';\nimport { Icon } from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport { VerifiedBadge } from 'mastodon/components/verified_badge';\nimport { domain } from 'mastodon/initial_state';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nconst messages = defineMessages({\n  follow: { id: 'account.follow', defaultMessage: 'Follow' },\n  unfollow: { id: 'account.unfollow', defaultMessage: 'Unfollow' },\n  previous: { id: 'lightbox.previous', defaultMessage: 'Previous' },\n  next: { id: 'lightbox.next', defaultMessage: 'Next' },\n  dismiss: {\n    id: 'follow_suggestions.dismiss',\n    defaultMessage: \"Don't show again\",\n  },\n  friendsOfFriendsHint: {\n    id: 'follow_suggestions.hints.friends_of_friends',\n    defaultMessage: 'This profile is popular among the people you follow.',\n  },\n  similarToRecentlyFollowedHint: {\n    id: 'follow_suggestions.hints.similar_to_recently_followed',\n    defaultMessage:\n      'This profile is similar to the profiles you have most recently followed.',\n  },\n  featuredHint: {\n    id: 'follow_suggestions.hints.featured',\n    defaultMessage: 'This profile has been hand-picked by the {domain} team.',\n  },\n  mostFollowedHint: {\n    id: 'follow_suggestions.hints.most_followed',\n    defaultMessage: 'This profile is one of the most followed on {domain}.',\n  },\n  mostInteractionsHint: {\n    id: 'follow_suggestions.hints.most_interactions',\n    defaultMessage:\n      'This profile has been recently getting a lot of attention on {domain}.',\n  },\n});\n\nconst Source: React.FC<{\n  id: ApiSuggestionSourceJSON;\n}> = ({ id }) => {\n  const intl = useIntl();\n\n  let label, hint;\n\n  switch (id) {\n    case 'friends_of_friends':\n      hint = intl.formatMessage(messages.friendsOfFriendsHint);\n      label = (\n        <FormattedMessage\n          id='follow_suggestions.personalized_suggestion'\n          defaultMessage='Personalized suggestion'\n        />\n      );\n      break;\n    case 'similar_to_recently_followed':\n      hint = intl.formatMessage(messages.similarToRecentlyFollowedHint);\n      label = (\n        <FormattedMessage\n          id='follow_suggestions.personalized_suggestion'\n          defaultMessage='Personalized suggestion'\n        />\n      );\n      break;\n    case 'featured':\n      hint = intl.formatMessage(messages.featuredHint, { domain });\n      label = (\n        <FormattedMessage\n          id='follow_suggestions.curated_suggestion'\n          defaultMessage='Staff pick'\n        />\n      );\n      break;\n    case 'most_followed':\n      hint = intl.formatMessage(messages.mostFollowedHint, { domain });\n      label = (\n        <FormattedMessage\n          id='follow_suggestions.popular_suggestion'\n          defaultMessage='Popular suggestion'\n        />\n      );\n      break;\n    case 'most_interactions':\n      hint = intl.formatMessage(messages.mostInteractionsHint, { domain });\n      label = (\n        <FormattedMessage\n          id='follow_suggestions.popular_suggestion'\n          defaultMessage='Popular suggestion'\n        />\n      );\n      break;\n  }\n\n  return (\n    <div\n      className='inline-follow-suggestions__body__scrollable__card__text-stack__source'\n      title={hint}\n    >\n      <Icon id='' icon={InfoIcon} />\n      {label}\n    </div>\n  );\n};\n\nconst Card: React.FC<{\n  id: string;\n  sources: [ApiSuggestionSourceJSON, ...ApiSuggestionSourceJSON[]];\n}> = ({ id, sources }) => {\n  const intl = useIntl();\n  const account = useAppSelector((state) => state.accounts.get(id));\n  const firstVerifiedField = account?.fields.find((item) => !!item.verified_at);\n  const dispatch = useAppDispatch();\n\n  const handleDismiss = useCallback(() => {\n    void dispatch(dismissSuggestion({ accountId: id }));\n  }, [id, dispatch]);\n\n  return (\n    <div className='inline-follow-suggestions__body__scrollable__card'>\n      <IconButton\n        icon=''\n        iconComponent={CloseIcon}\n        onClick={handleDismiss}\n        title={intl.formatMessage(messages.dismiss)}\n      />\n\n      <div className='inline-follow-suggestions__body__scrollable__card__avatar'>\n        <Link to={`/@${account?.acct}`} data-hover-card-account={account?.id}>\n          <Avatar account={account} size={72} />\n        </Link>\n      </div>\n\n      <div className='inline-follow-suggestions__body__scrollable__card__text-stack'>\n        <Link to={`/@${account?.acct}`} data-hover-card-account={account?.id}>\n          <DisplayName account={account} />\n        </Link>\n        {firstVerifiedField ? (\n          <VerifiedBadge link={firstVerifiedField.value} />\n        ) : (\n          <Source id={sources[0]} />\n        )}\n      </div>\n\n      <FollowButton accountId={id} />\n    </div>\n  );\n};\n\nconst DISMISSIBLE_ID = 'home/follow-suggestions';\n\nexport const InlineFollowSuggestions: React.FC<{\n  hidden?: boolean;\n}> = ({ hidden }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const suggestions = useAppSelector((state) => state.suggestions.items);\n  const isLoading = useAppSelector((state) => state.suggestions.isLoading);\n  const dismissed = useAppSelector(\n    (state) =>\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      state.settings.getIn(['dismissed_banners', DISMISSIBLE_ID]) as boolean,\n  );\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(true);\n\n  useEffect(() => {\n    void dispatch(fetchSuggestions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!bodyRef.current) {\n      return;\n    }\n\n    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n      setCanScrollLeft(\n        bodyRef.current.clientWidth - bodyRef.current.scrollLeft <\n          bodyRef.current.scrollWidth,\n      );\n      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n    } else {\n      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n      setCanScrollRight(\n        bodyRef.current.scrollLeft + bodyRef.current.clientWidth <\n          bodyRef.current.scrollWidth,\n      );\n    }\n  }, [setCanScrollRight, setCanScrollLeft, suggestions]);\n\n  const handleLeftNav = useCallback(() => {\n    if (!bodyRef.current) {\n      return;\n    }\n\n    bodyRef.current.scrollLeft -= 200;\n  }, []);\n\n  const handleRightNav = useCallback(() => {\n    if (!bodyRef.current) {\n      return;\n    }\n\n    bodyRef.current.scrollLeft += 200;\n  }, []);\n\n  const handleScroll = useCallback(() => {\n    if (!bodyRef.current) {\n      return;\n    }\n\n    if (getComputedStyle(bodyRef.current).direction === 'rtl') {\n      setCanScrollLeft(\n        bodyRef.current.clientWidth - bodyRef.current.scrollLeft <\n          bodyRef.current.scrollWidth,\n      );\n      setCanScrollRight(bodyRef.current.scrollLeft < 0);\n    } else {\n      setCanScrollLeft(bodyRef.current.scrollLeft > 0);\n      setCanScrollRight(\n        bodyRef.current.scrollLeft + bodyRef.current.clientWidth <\n          bodyRef.current.scrollWidth,\n      );\n    }\n  }, [setCanScrollRight, setCanScrollLeft]);\n\n  const handleDismiss = useCallback(() => {\n    dispatch(changeSetting(['dismissed_banners', DISMISSIBLE_ID], true));\n  }, [dispatch]);\n\n  if (dismissed || (!isLoading && suggestions.length === 0)) {\n    return null;\n  }\n\n  if (hidden) {\n    return <div className='inline-follow-suggestions' />;\n  }\n\n  return (\n    <div className='inline-follow-suggestions'>\n      <div className='inline-follow-suggestions__header'>\n        <h3>\n          <FormattedMessage\n            id='follow_suggestions.who_to_follow'\n            defaultMessage='Who to follow'\n          />\n        </h3>\n\n        <div className='inline-follow-suggestions__header__actions'>\n          <button className='link-button' onClick={handleDismiss}>\n            <FormattedMessage\n              id='follow_suggestions.dismiss'\n              defaultMessage=\"Don't show again\"\n            />\n          </button>\n          <Link to='/explore/suggestions' className='link-button'>\n            <FormattedMessage\n              id='follow_suggestions.view_all'\n              defaultMessage='View all'\n            />\n          </Link>\n        </div>\n      </div>\n\n      <div className='inline-follow-suggestions__body'>\n        <div\n          className='inline-follow-suggestions__body__scrollable'\n          ref={bodyRef}\n          onScroll={handleScroll}\n        >\n          {suggestions.map((suggestion) => (\n            <Card\n              key={suggestion.account_id}\n              id={suggestion.account_id}\n              sources={suggestion.sources}\n            />\n          ))}\n        </div>\n\n        {canScrollLeft && (\n          <button\n            className='inline-follow-suggestions__body__scroll-button left'\n            onClick={handleLeftNav}\n            aria-label={intl.formatMessage(messages.previous)}\n          >\n            <div className='inline-follow-suggestions__body__scroll-button__icon'>\n              <Icon id='' icon={ChevronLeftIcon} />\n            </div>\n          </button>\n        )}\n\n        {canScrollRight && (\n          <button\n            className='inline-follow-suggestions__body__scroll-button right'\n            onClick={handleRightNav}\n            aria-label={intl.formatMessage(messages.next)}\n          >\n            <div className='inline-follow-suggestions__body__scroll-button__icon'>\n              <Icon id='' icon={ChevronRightIcon} />\n            </div>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n","import PropTypes from 'prop-types';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { debounce } from 'lodash';\n\nimport { TIMELINE_GAP, TIMELINE_SUGGESTIONS } from 'mastodon/actions/timelines';\nimport { RegenerationIndicator } from 'mastodon/components/regeneration_indicator';\nimport { InlineFollowSuggestions } from 'mastodon/features/home_timeline/components/inline_follow_suggestions';\n\nimport { StatusQuoteManager } from '../components/status_quoted';\n\nimport { LoadGap } from './load_gap';\nimport ScrollableList from './scrollable_list';\n\nexport default class StatusList extends ImmutablePureComponent {\n\n  static propTypes = {\n    scrollKey: PropTypes.string.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    featuredStatusIds: ImmutablePropTypes.list,\n    onLoadMore: PropTypes.func,\n    onScrollToTop: PropTypes.func,\n    onScroll: PropTypes.func,\n    trackScroll: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isPartial: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    prepend: PropTypes.node,\n    emptyMessage: PropTypes.node,\n    alwaysPrepend: PropTypes.bool,\n    withCounters: PropTypes.bool,\n    timelineId: PropTypes.string,\n    lastId: PropTypes.string,\n    bindToDocument: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    trackScroll: true,\n  };\n\n  getFeaturedStatusCount = () => {\n    return this.props.featuredStatusIds ? this.props.featuredStatusIds.size : 0;\n  };\n\n  getCurrentStatusIndex = (id, featured) => {\n    if (featured) {\n      return this.props.featuredStatusIds.indexOf(id);\n    } else {\n      return this.props.statusIds.indexOf(id) + this.getFeaturedStatusCount();\n    }\n  };\n\n  handleMoveUp = (id, featured) => {\n    const elementIndex = this.getCurrentStatusIndex(id, featured) - 1;\n    this._selectChild(elementIndex, true);\n  };\n\n  handleMoveDown = (id, featured) => {\n    const elementIndex = this.getCurrentStatusIndex(id, featured) + 1;\n    this._selectChild(elementIndex, false);\n  };\n\n  handleLoadOlder = debounce(() => {\n    const { statusIds, lastId, onLoadMore } = this.props;\n    onLoadMore(lastId || (statusIds.size > 0 ? statusIds.last() : undefined));\n  }, 300, { leading: true });\n\n  _selectChild (index, align_top) {\n    const container = this.node.node;\n    const element = container.querySelector(`article:nth-of-type(${index + 1}) .focusable`);\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  render () {\n    const { statusIds, featuredStatusIds, onLoadMore, timelineId, ...other }  = this.props;\n    const { isLoading, isPartial } = other;\n\n    if (isPartial) {\n      return <RegenerationIndicator />;\n    }\n\n    let scrollableContent = (isLoading || statusIds.size > 0) ? (\n      statusIds.map((statusId, index) => {\n        switch(statusId) {\n        case TIMELINE_SUGGESTIONS:\n          return (\n            <InlineFollowSuggestions\n              key='inline-follow-suggestions'\n            />\n          );\n        case TIMELINE_GAP:\n          return (\n            <LoadGap\n              key={'gap:' + statusIds.get(index + 1)}\n              disabled={isLoading}\n              param={index > 0 ? statusIds.get(index - 1) : null}\n              onClick={onLoadMore}\n            />\n          );\n        default:\n          return (\n            <StatusQuoteManager\n              key={statusId}\n              id={statusId}\n              onMoveUp={this.handleMoveUp}\n              onMoveDown={this.handleMoveDown}\n              contextType={timelineId}\n              scrollKey={this.props.scrollKey}\n              showThread\n              withCounters={this.props.withCounters}\n            />\n          );\n        }\n      })\n    ) : null;\n\n    if (scrollableContent && featuredStatusIds) {\n      scrollableContent = featuredStatusIds.map(statusId => (\n        <StatusQuoteManager\n          key={`f-${statusId}`}\n          id={statusId}\n          featured\n          onMoveUp={this.handleMoveUp}\n          onMoveDown={this.handleMoveDown}\n          contextType={timelineId}\n          showThread\n          withCounters={this.props.withCounters}\n        />\n      )).concat(scrollableContent);\n    }\n\n    return (\n      <ScrollableList {...other} showLoading={isLoading && statusIds.size === 0} onLoadMore={onLoadMore && this.handleLoadOlder} ref={this.setRef}>\n        {scrollableContent}\n      </ScrollableList>\n    );\n  }\n\n}\n"],"names":["RegenerationIndicator","jsxDEV","GIF","this","FormattedMessage","messages","defineMessages","follow","id","defaultMessage","unfollow","previous","next","dismiss","friendsOfFriendsHint","similarToRecentlyFollowedHint","featuredHint","mostFollowedHint","mostInteractionsHint","Source","intl","useIntl","label","hint","formatMessage","domain","Icon","InfoIcon","Card","sources","account","useAppSelector","state","accounts","get","firstVerifiedField","fields","find","item","verified_at","dispatch","useAppDispatch","handleDismiss","useCallback","dismissSuggestion","accountId","IconButton","CloseIcon","Link","acct","Avatar","DisplayName","VerifiedBadge","value","FollowButton","DISMISSIBLE_ID","InlineFollowSuggestions","hidden","suggestions","items","isLoading","dismissed","settings","getIn","bodyRef","useRef","canScrollLeft","setCanScrollLeft","useState","canScrollRight","setCanScrollRight","useEffect","fetchSuggestions","current","getComputedStyle","direction","clientWidth","scrollLeft","scrollWidth","handleLeftNav","handleRightNav","handleScroll","changeSetting","length","map","suggestion","account_id","ChevronLeftIcon","ChevronRightIcon","StatusList","ImmutablePureComponent","getFeaturedStatusCount","props","featuredStatusIds","size","getCurrentStatusIndex","featured","indexOf","statusIds","handleMoveUp","elementIndex","_selectChild","handleMoveDown","handleLoadOlder","debounce","lastId","onLoadMore","last","undefined","leading","setRef","c","node","index","align_top","container","element","querySelector","scrollTop","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","render","timelineId","other","isPartial","scrollableContent","statusId","TIMELINE_SUGGESTIONS","TIMELINE_GAP","LoadGap","StatusQuoteManager","scrollKey","withCounters","concat","ScrollableList","__publicField","propTypes","PropTypes","string","isRequired","ImmutablePropTypes","list","func","onScrollToTop","onScroll","trackScroll","bool","hasMore","prepend","emptyMessage","alwaysPrepend","bindToDocument","defaultProps"],"mappings":"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"}