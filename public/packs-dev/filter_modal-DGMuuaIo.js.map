{"version":3,"file":"filter_modal-DGMuuaIo.js","sources":["../../app/javascript/mastodon/features/filters/added_to_filter.jsx","../../app/javascript/mastodon/utils/icons.tsx","../../app/javascript/mastodon/features/filters/select_filter.jsx","../../app/javascript/mastodon/features/ui/components/filter_modal.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'mastodon/components/button';\nimport { toServerSideType } from 'mastodon/utils/filters';\n\nconst mapStateToProps = (state, { filterId }) => ({\n  filter: state.getIn(['filters', filterId]),\n});\n\nclass AddedToFilter extends PureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    contextType: PropTypes.string,\n    filter: ImmutablePropTypes.map.isRequired,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  handleCloseClick = () => {\n    const { onClose } = this.props;\n    onClose();\n  };\n\n  render () {\n    const { filter, contextType } = this.props;\n\n    let expiredMessage = null;\n    if (filter.get('expires_at') && filter.get('expires_at') < new Date()) {\n      expiredMessage = (\n        <>\n          <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.expired_title' defaultMessage='Expired filter!' /></h4>\n          <p className='report-dialog-modal__lead'>\n            <FormattedMessage\n              id='filter_modal.added.expired_explanation'\n              defaultMessage='This filter category has expired, you will need to change the expiration date for it to apply.'\n            />\n          </p>\n        </>\n      );\n    }\n\n    let contextMismatchMessage = null;\n    if (contextType && !filter.get('context').includes(toServerSideType(contextType))) {\n      contextMismatchMessage = (\n        <>\n          <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.context_mismatch_title' defaultMessage='Context mismatch!' /></h4>\n          <p className='report-dialog-modal__lead'>\n            <FormattedMessage\n              id='filter_modal.added.context_mismatch_explanation'\n              defaultMessage='This filter category does not apply to the context in which you have accessed this post. If you want the post to be filtered in this context too, you will have to edit the filter.'\n            />\n          </p>\n        </>\n      );\n    }\n\n    const settings_link = (\n      <a href={`/filters/${filter.get('id')}/edit`}>\n        <FormattedMessage\n          id='filter_modal.added.settings_link'\n          defaultMessage='settings page'\n        />\n      </a>\n    );\n\n    return (\n      <>\n        <h3 className='report-dialog-modal__title'><FormattedMessage id='filter_modal.added.title' defaultMessage='Filter added!' /></h3>\n        <p className='report-dialog-modal__lead'>\n          <FormattedMessage\n            id='filter_modal.added.short_explanation'\n            defaultMessage='This post has been added to the following filter category: {title}.'\n            values={{ title: filter.get('title') }}\n          />\n        </p>\n\n        {expiredMessage}\n        {contextMismatchMessage}\n\n        <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.review_and_configure_title' defaultMessage='Filter settings' /></h4>\n        <p className='report-dialog-modal__lead'>\n          <FormattedMessage\n            id='filter_modal.added.review_and_configure'\n            defaultMessage='To review and further configure this filter category, go to the {settings_link}.'\n            values={{ settings_link }}\n          />\n        </p>\n\n        <div className='flex-spacer' />\n\n        <div className='report-dialog-modal__actions'>\n          <Button onClick={this.handleCloseClick}><FormattedMessage id='report.close' defaultMessage='Done' /></Button>\n        </div>\n      </>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(AddedToFilter);\n","// Copied from emoji-mart for consistency with emoji picker and since\n// they don't export the icons in the package\nexport const loupeIcon = (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    viewBox='0 0 20 20'\n    width='13'\n    height='13'\n  >\n    <path d='M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z' />\n  </svg>\n);\n\nexport const deleteIcon = (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    viewBox='0 0 20 20'\n    width='13'\n    height='13'\n  >\n    <path d='M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z' />\n  </svg>\n);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport fuzzysort from 'fuzzysort';\n\nimport AddIcon from '@/material-icons/400-24px/add.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\nimport { toServerSideType } from 'mastodon/utils/filters';\nimport { loupeIcon, deleteIcon } from 'mastodon/utils/icons';\n\nconst messages = defineMessages({\n  search: { id: 'filter_modal.select_filter.search', defaultMessage: 'Search or create' },\n  clear: { id: 'emoji_button.clear', defaultMessage: 'Clear' },\n});\n\nconst mapStateToProps = (state, { contextType }) => ({\n  filters: Array.from(state.get('filters').values()).map((filter) => [\n    filter.get('id'),\n    filter.get('title'),\n    filter.get('keywords')?.map((keyword) => keyword.get('keyword')).join('\\n'),\n    filter.get('expires_at') && filter.get('expires_at') < new Date(),\n    contextType && !filter.get('context').includes(toServerSideType(contextType)),\n  ]),\n});\n\nclass SelectFilter extends PureComponent {\n\n  static propTypes = {\n    onSelectFilter: PropTypes.func.isRequired,\n    onNewFilter: PropTypes.func.isRequired,\n    filters: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    searchValue: '',\n  };\n\n  search () {\n    const { filters } = this.props;\n    const { searchValue } = this.state;\n\n    if (searchValue === '') {\n      return filters;\n    }\n\n    return fuzzysort.go(searchValue, filters, {\n      keys: ['1', '2'],\n      limit: 5,\n      threshold: -10000,\n    }).map(result => result.obj);\n  }\n\n  renderItem = filter => {\n    let warning = null;\n    if (filter[3] || filter[4]) {\n      warning = (\n        <span className='language-dropdown__dropdown__results__item__common-name'>\n          (\n          {filter[3] && <FormattedMessage id='filter_modal.select_filter.expired' defaultMessage='expired' />}\n          {filter[3] && filter[4] && ', '}\n          {filter[4] && <FormattedMessage id='filter_modal.select_filter.context_mismatch' defaultMessage='does not apply to this context' />}\n          )\n        </span>\n      );\n    }\n\n    return (\n      <div key={filter[0]} role='button' tabIndex={0} data-index={filter[0]} className='language-dropdown__dropdown__results__item' onClick={this.handleItemClick} onKeyDown={this.handleKeyDown}>\n        <span className='language-dropdown__dropdown__results__item__native-name'>{filter[1]}</span> {warning}\n      </div>\n    );\n  };\n\n  renderCreateNew (name) {\n    return (\n      <div key='add-new-filter' role='button' tabIndex={0} className='language-dropdown__dropdown__results__item' onClick={this.handleNewFilterClick} onKeyDown={this.handleKeyDown}>\n        <Icon id='plus' icon={AddIcon} /> <FormattedMessage id='filter_modal.select_filter.prompt_new' defaultMessage='New category: {name}' values={{ name }} />\n      </div>\n    );\n  }\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchValue: target.value });\n  };\n\n  setListRef = c => {\n    this.listNode = c;\n  };\n\n  handleKeyDown = e => {\n    const index = Array.from(this.listNode.childNodes).findIndex(node => node === e.currentTarget);\n\n    let element = null;\n\n    switch(e.key) {\n    case ' ':\n    case 'Enter':\n      e.currentTarget.click();\n      break;\n    case 'ArrowDown':\n      element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      break;\n    case 'ArrowUp':\n      element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      break;\n    case 'Tab':\n      if (e.shiftKey) {\n        element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      } else {\n        element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      }\n      break;\n    case 'Home':\n      element = this.listNode.firstChild;\n      break;\n    case 'End':\n      element = this.listNode.lastChild;\n      break;\n    }\n\n    if (element) {\n      element.focus();\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  handleSearchKeyDown = e => {\n    let element = null;\n\n    switch(e.key) {\n    case 'Tab':\n    case 'ArrowDown':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        element.focus();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      break;\n    }\n  };\n\n  handleClear = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  handleItemClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onSelectFilter(value);\n  };\n\n  handleNewFilterClick = e => {\n    e.preventDefault();\n\n    this.props.onNewFilter(this.state.searchValue);\n  };\n\n  render () {\n    const { intl } = this.props;\n\n    const { searchValue } = this.state;\n    const isSearching = searchValue !== '';\n    const results = this.search();\n\n    return (\n      <>\n        <h3 className='report-dialog-modal__title'><FormattedMessage id='filter_modal.select_filter.title' defaultMessage='Filter this post' /></h3>\n        <p className='report-dialog-modal__lead'><FormattedMessage id='filter_modal.select_filter.subtitle' defaultMessage='Use an existing category or create a new one' /></p>\n\n        <div className='emoji-mart-search'>\n          <input type='search' value={searchValue} onChange={this.handleSearchChange} onKeyDown={this.handleSearchKeyDown} placeholder={intl.formatMessage(messages.search)} autoFocus />\n          <button type='button' className='emoji-mart-search-icon' disabled={!isSearching} aria-label={intl.formatMessage(messages.clear)} onClick={this.handleClear}>{!isSearching ? loupeIcon : deleteIcon}</button>\n        </div>\n\n        <div className='language-dropdown__dropdown__results emoji-mart-scroll' role='listbox' ref={this.setListRef}>\n          {results.map(this.renderItem)}\n          {isSearching && this.renderCreateNew(searchValue) }\n        </div>\n\n      </>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(SelectFilter));\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport { fetchFilters, createFilter, createFilterStatus } from 'mastodon/actions/filters';\nimport { fetchStatus } from 'mastodon/actions/statuses';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport AddedToFilter from 'mastodon/features/filters/added_to_filter';\nimport SelectFilter from 'mastodon/features/filters/select_filter';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nclass FilterModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    contextType: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    step: 'select',\n    filterId: null,\n    isSubmitting: false,\n    isSubmitted: false,\n  };\n\n  handleNewFilterSuccess = (result) => {\n    this.handleSelectFilter(result.id);\n  };\n\n  handleSuccess = () => {\n    const { dispatch, statusId } = this.props;\n    dispatch(fetchStatus(statusId, true));\n    this.setState({ isSubmitting: false, isSubmitted: true, step: 'submitted' });\n  };\n\n  handleFail = () => {\n    this.setState({ isSubmitting: false });\n  };\n\n  handleNextStep = step => {\n    this.setState({ step });\n  };\n\n  handleSelectFilter = (filterId) => {\n    const { dispatch, statusId } = this.props;\n\n    this.setState({ isSubmitting: true, filterId });\n\n    dispatch(createFilterStatus({\n      filter_id: filterId,\n      status_id: statusId,\n    }, this.handleSuccess, this.handleFail));\n  };\n\n  handleNewFilter = (title) => {\n    const { dispatch } = this.props;\n\n    this.setState({ isSubmitting: true });\n\n    dispatch(createFilter({\n      title,\n      context: ['home', 'notifications', 'public', 'thread', 'account'],\n      action: 'warn',\n    }, this.handleNewFilterSuccess, this.handleFail));\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n\n    dispatch(fetchFilters());\n  }\n\n  render () {\n    const {\n      intl,\n      statusId,\n      contextType,\n      onClose,\n    } = this.props;\n\n    const {\n      step,\n      filterId,\n    } = this.state;\n\n    let stepComponent;\n\n    switch(step) {\n    case 'select':\n      stepComponent = (\n        <SelectFilter\n          contextType={contextType}\n          onSelectFilter={this.handleSelectFilter}\n          onNewFilter={this.handleNewFilter}\n        />\n      );\n      break;\n    case 'create':\n      stepComponent = null;\n      break;\n    case 'submitted':\n      stepComponent = (\n        <AddedToFilter\n          contextType={contextType}\n          filterId={filterId}\n          statusId={statusId}\n          onClose={onClose}\n        />\n      );\n    }\n\n    return (\n      <div className='modal-root__modal report-dialog-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' iconComponent={CloseIcon} onClick={onClose} size={20} />\n          <FormattedMessage id='filter_modal.title.status' defaultMessage='Filter a post' />\n        </div>\n\n        <div className='report-dialog-modal__container'>\n          {stepComponent}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(injectIntl(FilterModal));\n"],"names":["mapStateToProps","state","filterId","filter","getIn","AddedToFilter","PureComponent","handleCloseClick","onClose","props","render","contextType","expiredMessage","get","Date","jsxDEV","Fragment","FormattedMessage","contextMismatchMessage","includes","toServerSideType","settings_link","title","Button","AddedToFilter$1","connect","loupeIcon","this","deleteIcon","messages","defineMessages","search","id","defaultMessage","clear","filters","Array","from","values","map","keyword","join","SelectFilter","searchValue","renderItem","warning","handleItemClick","handleKeyDown","handleSearchChange","target","setState","value","setListRef","c","listNode","e","index","childNodes","findIndex","node","currentTarget","element","key","click","firstChild","lastChild","shiftKey","focus","preventDefault","stopPropagation","handleSearchKeyDown","handleClear","getAttribute","onSelectFilter","handleNewFilterClick","onNewFilter","fuzzysort","go","keys","limit","threshold","result","obj","renderCreateNew","name","Icon","AddIcon","intl","isSearching","results","formatMessage","SelectFilter$1","injectIntl","close","FilterModal","ImmutablePureComponent","step","isSubmitting","isSubmitted","handleNewFilterSuccess","handleSelectFilter","handleSuccess","dispatch","statusId","fetchStatus","handleFail","handleNextStep","createFilterStatus","filter_id","status_id","handleNewFilter","createFilter","context","action","componentDidMount","fetchFilters","stepComponent","IconButton","CloseIcon","__publicField","propTypes","PropTypes","string","isRequired","func","object","filter_modal"],"mappings":"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"}