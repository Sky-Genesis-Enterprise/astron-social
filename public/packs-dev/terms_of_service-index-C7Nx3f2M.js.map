{"version":3,"file":"terms_of_service-index-C7Nx3f2M.js","sources":["../../app/javascript/mastodon/features/terms_of_service/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport {\n  FormattedMessage,\n  FormattedDate,\n  useIntl,\n  defineMessages,\n} from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { apiGetTermsOfService } from 'mastodon/api/instance';\nimport type { ApiTermsOfServiceJSON } from 'mastodon/api_types/instance';\nimport { Column } from 'mastodon/components/column';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\n\nconst messages = defineMessages({\n  title: { id: 'terms_of_service.title', defaultMessage: 'Terms of Service' },\n});\n\ninterface Params {\n  date?: string;\n}\n\nconst TermsOfService: React.FC<{\n  multiColumn: boolean;\n}> = ({ multiColumn }) => {\n  const intl = useIntl();\n  const { date } = useParams<Params>();\n  const [response, setResponse] = useState<ApiTermsOfServiceJSON>();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    apiGetTermsOfService(date)\n      .then((data) => {\n        setResponse(data);\n        setLoading(false);\n        return '';\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  }, [date]);\n\n  if (!loading && !response) {\n    return <BundleColumnError multiColumn={multiColumn} errorType='routing' />;\n  }\n\n  return (\n    <Column\n      bindToDocument={!multiColumn}\n      label={intl.formatMessage(messages.title)}\n    >\n      <div className='scrollable privacy-policy'>\n        <div className='column-title'>\n          <h3>\n            <FormattedMessage\n              id='terms_of_service.title'\n              defaultMessage='Terms of Service'\n            />\n          </h3>\n          <p className='prose'>\n            {response?.effective ? (\n              <FormattedMessage\n                id='privacy_policy.last_updated'\n                defaultMessage='Last updated {date}'\n                values={{\n                  date: (\n                    <FormattedDate\n                      value={response.effective_date}\n                      year='numeric'\n                      month='short'\n                      day='2-digit'\n                    />\n                  ),\n                }}\n              />\n            ) : (\n              <FormattedMessage\n                id='terms_of_service.effective_as_of'\n                defaultMessage='Effective as of {date}'\n                values={{\n                  date: (\n                    <FormattedDate\n                      value={response?.effective_date}\n                      year='numeric'\n                      month='short'\n                      day='2-digit'\n                    />\n                  ),\n                }}\n              />\n            )}\n\n            {response?.succeeded_by && (\n              <>\n                {' Â· '}\n                <Link to={`/terms-of-service/${response.succeeded_by}`}>\n                  <FormattedMessage\n                    id='terms_of_service.upcoming_changes_on'\n                    defaultMessage='Upcoming changes on {date}'\n                    values={{\n                      date: (\n                        <FormattedDate\n                          value={response.succeeded_by}\n                          year='numeric'\n                          month='short'\n                          day='2-digit'\n                        />\n                      ),\n                    }}\n                  />\n                </Link>\n              </>\n            )}\n          </p>\n        </div>\n\n        {response && (\n          <div\n            className='privacy-policy__body prose'\n            dangerouslySetInnerHTML={{ __html: response.content }}\n          />\n        )}\n      </div>\n\n      <Helmet>\n        <title>{intl.formatMessage(messages.title)}</title>\n        <meta name='robots' content='all' />\n      </Helmet>\n    </Column>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default TermsOfService;\n"],"names":["messages","defineMessages","title","id","defaultMessage","TermsOfService","multiColumn","intl","useIntl","date","useParams","response","setResponse","useState","loading","setLoading","useEffect","apiGetTermsOfService","then","data","catch","jsxDEV","BundleColumnError","this","Column","formatMessage","FormattedMessage","effective","FormattedDate","effective_date","succeeded_by","Fragment","Link","__html","content","Helmet"],"mappings":"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"}