{"version":3,"file":"Retention-DPeK780G.js","sources":["../../app/javascript/mastodon/components/admin/Retention.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, FormattedNumber, FormattedDate } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport api from 'mastodon/api';\nimport { roundTo10 } from 'mastodon/utils/numbers';\n\nconst dateForCohort = cohort => {\n  const timeZone = 'UTC';\n  switch(cohort.frequency) {\n  case 'day':\n    return <FormattedDate value={cohort.period} month='long' day='2-digit' timeZone={timeZone} />;\n  default:\n    return <FormattedDate value={cohort.period} month='long' year='numeric' timeZone={timeZone} />;\n  }\n};\n\nexport default class Retention extends PureComponent {\n\n  static propTypes = {\n    start_at: PropTypes.string,\n    end_at: PropTypes.string,\n    frequency: PropTypes.string,\n  };\n\n  state = {\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount () {\n    const { start_at, end_at, frequency } = this.props;\n\n    api(false).post('/api/v1/admin/retention', { start_at, end_at, frequency }).then(res => {\n      this.setState({\n        loading: false,\n        data: res.data,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render () {\n    const { loading, data } = this.state;\n    const { frequency } = this.props;\n\n    let content;\n\n    if (loading) {\n      content = <FormattedMessage id='loading_indicator.label' defaultMessage='Loadingâ€¦' />;\n    } else {\n      content = (\n        <table className='retention__table'>\n          <thead>\n            <tr>\n              <th>\n                <div className='retention__table__date retention__table__label'>\n                  <FormattedMessage id='admin.dashboard.retention.cohort' defaultMessage='Sign-up month' />\n                </div>\n              </th>\n\n              <th>\n                <div className='retention__table__number retention__table__label'>\n                  <FormattedMessage id='admin.dashboard.retention.cohort_size' defaultMessage='New users' />\n                </div>\n              </th>\n\n              {data[0].data.slice(1).map((retention, i) => (\n                <th key={retention.date}>\n                  <div className='retention__table__number retention__table__label'>\n                    {i + 1}\n                  </div>\n                </th>\n              ))}\n            </tr>\n\n            <tr>\n              <td>\n                <div className='retention__table__date retention__table__average'>\n                  <FormattedMessage id='admin.dashboard.retention.average' defaultMessage='Average' />\n                </div>\n              </td>\n\n              <td>\n                <div className='retention__table__size'>\n                  <FormattedNumber value={data.reduce((sum, cohort, i) => sum + ((cohort.data[0].value * 1) - sum) / (i + 1), 0)} maximumFractionDigits={0} />\n                </div>\n              </td>\n\n              {data[0].data.slice(1).map((retention, i) => {\n                const average = data.reduce((sum, cohort, k) => cohort.data[i + 1] ? sum + (cohort.data[i + 1].rate - sum)/(k + 1) : sum, 0);\n\n                return (\n                  <td key={retention.date}>\n                    <div className={classNames('retention__table__box', 'retention__table__average', `retention__table__box--${roundTo10(average * 100)}`)}>\n                      <FormattedNumber value={average} style='percent' />\n                    </div>\n                  </td>\n                );\n              })}\n            </tr>\n          </thead>\n\n          <tbody>\n            {data.slice(0, -1).map(cohort => (\n              <tr key={cohort.period}>\n                <td>\n                  <div className='retention__table__date'>\n                    {dateForCohort(cohort)}\n                  </div>\n                </td>\n\n                <td>\n                  <div className='retention__table__size'>\n                    <FormattedNumber value={cohort.data[0].value} />\n                  </div>\n                </td>\n\n                {cohort.data.slice(1).map(retention => (\n                  <td key={retention.date}>\n                    <div className={classNames('retention__table__box', `retention__table__box--${roundTo10(retention.rate * 100)}`)}>\n                      <FormattedNumber value={retention.rate} style='percent' />\n                    </div>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n\n    let title = null;\n    switch(frequency) {\n    case 'day':\n      title = <FormattedMessage id='admin.dashboard.daily_retention' defaultMessage='User retention rate by day after sign-up' />;\n      break;\n    default:\n      title = <FormattedMessage id='admin.dashboard.monthly_retention' defaultMessage='User retention rate by month after sign-up' />;\n    }\n\n    return (\n      <div className='retention'>\n        <h4>{title}</h4>\n\n        {content}\n      </div>\n    );\n  }\n\n}\n"],"names":["dateForCohort","cohort","timeZone","frequency","jsxDEV","FormattedDate","period","this","Retention","PureComponent","state","loading","data","componentDidMount","start_at","end_at","props","api","post","then","res","setState","catch","err","console","error","render","content","FormattedMessage","slice","map","retention","i","date","FormattedNumber","reduce","sum","value","average","k","rate","classNames","roundTo10","title"],"mappings":"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"}