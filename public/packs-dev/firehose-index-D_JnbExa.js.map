{"version":3,"file":"firehose-index-D_JnbExa.js","sources":["../../app/javascript/mastodon/features/firehose/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useRef, useCallback, useEffect } from 'react';\n\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { NavLink } from 'react-router-dom';\n\nimport { useIdentity } from '@/mastodon/identity_context';\nimport PublicIcon from '@/material-icons/400-24px/public.svg?react';\nimport { addColumn } from 'mastodon/actions/columns';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { connectPublicStream, connectCommunityStream } from 'mastodon/actions/streaming';\nimport { expandPublicTimeline, expandCommunityTimeline } from 'mastodon/actions/timelines';\nimport { DismissableBanner } from 'mastodon/components/dismissable_banner';\nimport { domain } from 'mastodon/initial_state';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nimport Column from '../../components/column';\nimport ColumnHeader from '../../components/column_header';\nimport SettingToggle from '../notifications/components/setting_toggle';\nimport StatusListContainer from '../ui/containers/status_list_container';\n\nconst messages = defineMessages({\n  title: { id: 'column.firehose', defaultMessage: 'Live feeds' },\n});\n\nconst ColumnSettings = () => {\n  const dispatch = useAppDispatch();\n  const settings = useAppSelector((state) => state.getIn(['settings', 'firehose']));\n  const onChange = useCallback(\n    (key, checked) => dispatch(changeSetting(['firehose', ...key], checked)),\n    [dispatch],\n  );\n\n  return (\n    <div className='column-settings'>\n      <section>\n        <div className='column-settings__row'>\n          <SettingToggle\n            settings={settings}\n            settingPath={['onlyMedia']}\n            onChange={onChange}\n            label={<FormattedMessage id='community.column_settings.media_only' defaultMessage='Media only' />}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nconst Firehose = ({ feedType, multiColumn }) => {\n  const dispatch = useAppDispatch();\n  const intl = useIntl();\n  const { signedIn } = useIdentity();\n  const columnRef = useRef(null);\n\n  const onlyMedia = useAppSelector((state) => state.getIn(['settings', 'firehose', 'onlyMedia'], false));\n  const hasUnread = useAppSelector((state) => state.getIn(['timelines', `${feedType}${onlyMedia ? ':media' : ''}`, 'unread'], 0) > 0);\n\n  const handlePin = useCallback(\n    () => {\n      switch(feedType) {\n      case 'community':\n        dispatch(addColumn('COMMUNITY', { other: { onlyMedia } }));\n        break;\n      case 'public':\n        dispatch(addColumn('PUBLIC', { other: { onlyMedia } }));\n        break;\n      case 'public:remote':\n        dispatch(addColumn('REMOTE', { other: { onlyMedia, onlyRemote: true } }));\n        break;\n      }\n    },\n    [dispatch, onlyMedia, feedType],\n  );\n\n  const handleLoadMore = useCallback(\n    (maxId) => {\n      switch(feedType) {\n      case 'community':\n        dispatch(expandCommunityTimeline({ maxId, onlyMedia }));\n        break;\n      case 'public':\n        dispatch(expandPublicTimeline({ maxId, onlyMedia }));\n        break;\n      case 'public:remote':\n        dispatch(expandPublicTimeline({ maxId, onlyMedia, onlyRemote: true }));\n        break;\n      }\n    },\n    [dispatch, onlyMedia, feedType],\n  );\n\n  const handleHeaderClick = useCallback(() => columnRef.current?.scrollTop(), []);\n\n  useEffect(() => {\n    let disconnect;\n\n    switch(feedType) {\n    case 'community':\n      dispatch(expandCommunityTimeline({ onlyMedia }));\n      if (signedIn) {\n        disconnect = dispatch(connectCommunityStream({ onlyMedia }));\n      }\n      break;\n    case 'public':\n      dispatch(expandPublicTimeline({ onlyMedia }));\n      if (signedIn) {\n        disconnect = dispatch(connectPublicStream({ onlyMedia }));\n      }\n      break;\n    case 'public:remote':\n      dispatch(expandPublicTimeline({ onlyMedia, onlyRemote: true }));\n      if (signedIn) {\n        disconnect = dispatch(connectPublicStream({ onlyMedia, onlyRemote: true }));\n      }\n      break;\n    }\n\n    return () => disconnect?.();\n  }, [dispatch, signedIn, feedType, onlyMedia]);\n\n  const prependBanner = feedType === 'community' ? (\n    <DismissableBanner id='community_timeline'>\n      <FormattedMessage\n        id='dismissable_banner.community_timeline'\n        defaultMessage='These are the most recent public posts from people whose accounts are hosted by {domain}.'\n        values={{ domain }}\n      />\n    </DismissableBanner>\n  ) : (\n    <DismissableBanner id='public_timeline'>\n      <FormattedMessage\n        id='dismissable_banner.public_timeline'\n        defaultMessage='These are the most recent public posts from people on the fediverse that people on {domain} follow.'\n        values={{ domain }}\n      />\n    </DismissableBanner>\n  );\n\n  const emptyMessage = feedType === 'community' ? (\n    <FormattedMessage\n      id='empty_column.community'\n      defaultMessage='The local timeline is empty. Write something publicly to get the ball rolling!'\n    />\n  ) : (\n    <FormattedMessage\n      id='empty_column.public'\n      defaultMessage='There is nothing here! Write something publicly, or manually follow users from other servers to fill it up'\n    />\n  );\n\n  return (\n    <Column bindToDocument={!multiColumn} ref={columnRef} label={intl.formatMessage(messages.title)}>\n      <ColumnHeader\n        icon='globe'\n        iconComponent={PublicIcon}\n        active={hasUnread}\n        title={intl.formatMessage(messages.title)}\n        onPin={handlePin}\n        onClick={handleHeaderClick}\n        multiColumn={multiColumn}\n      >\n        <ColumnSettings />\n      </ColumnHeader>\n\n      <div className='account__section-headline'>\n        <NavLink exact to='/public/local'>\n          <FormattedMessage tagName='div' id='firehose.local' defaultMessage='This server' />\n        </NavLink>\n\n        <NavLink exact to='/public/remote'>\n          <FormattedMessage tagName='div' id='firehose.remote' defaultMessage='Other servers' />\n        </NavLink>\n\n        <NavLink exact to='/public'>\n          <FormattedMessage tagName='div' id='firehose.all' defaultMessage='All' />\n        </NavLink>\n      </div>\n\n      <StatusListContainer\n        prepend={prependBanner}\n        timelineId={`${feedType}${onlyMedia ? ':media' : ''}`}\n        onLoadMore={handleLoadMore}\n        trackScroll\n        scrollKey='firehose'\n        emptyMessage={emptyMessage}\n        bindToDocument={!multiColumn}\n      />\n\n      <Helmet>\n        <title>{intl.formatMessage(messages.title)}</title>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\nFirehose.propTypes = {\n  multiColumn: PropTypes.bool,\n  feedType: PropTypes.string,\n};\n\nexport default Firehose;\n"],"names":["messages","defineMessages","title","id","defaultMessage","ColumnSettings","dispatch","useAppDispatch","settings","useAppSelector","state","getIn","onChange","useCallback","key","checked","changeSetting","jsxDEV","SettingToggle","FormattedMessage","this","Firehose","feedType","multiColumn","intl","useIntl","signedIn","useIdentity","columnRef","useRef","onlyMedia","hasUnread","handlePin","addColumn","other","onlyRemote","handleLoadMore","maxId","expandCommunityTimeline","expandPublicTimeline","handleHeaderClick","current","scrollTop","useEffect","disconnect","connectCommunityStream","connectPublicStream","prependBanner","DismissableBanner","domain","emptyMessage","Column","formatMessage","ColumnHeader","PublicIcon","NavLink","StatusListContainer","Helmet"],"mappings":"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"}