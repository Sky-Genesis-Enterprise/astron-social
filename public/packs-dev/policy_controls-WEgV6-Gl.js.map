{"version":3,"file":"policy_controls-WEgV6-Gl.js","sources":["../../app/javascript/material-icons/400-24px/arrow_drop_down.svg?react","../../app/javascript/mastodon/features/notifications/components/select_with_label.tsx","../../app/javascript/mastodon/features/notifications/components/policy_controls.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgArrowDropDown = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M480-360 280-560h400L480-360Z\" }));\nexport default SvgArrowDropDown;\n","import type { PropsWithChildren } from 'react';\nimport { useCallback, useState, useRef } from 'react';\n\nimport classNames from 'classnames';\n\nimport type { Placement, State as PopperState } from '@popperjs/core';\nimport Overlay from 'react-overlays/Overlay';\n\nimport ArrowDropDownIcon from '@/material-icons/400-24px/arrow_drop_down.svg?react';\nimport type { SelectItem } from 'mastodon/components/dropdown_selector';\nimport { DropdownSelector } from 'mastodon/components/dropdown_selector';\nimport { Icon } from 'mastodon/components/icon';\n\ninterface DropdownProps {\n  value: string;\n  options: SelectItem[];\n  disabled?: boolean;\n  onChange: (value: string) => void;\n  placement?: Placement;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  value,\n  options,\n  disabled,\n  onChange,\n  placement: initialPlacement = 'bottom-end',\n}) => {\n  const activeElementRef = useRef<Element | null>(null);\n  const containerRef = useRef(null);\n  const [isOpen, setOpen] = useState<boolean>(false);\n  const [placement, setPlacement] = useState<Placement>(initialPlacement);\n\n  const handleToggle = useCallback(() => {\n    if (\n      isOpen &&\n      activeElementRef.current &&\n      activeElementRef.current instanceof HTMLElement\n    ) {\n      activeElementRef.current.focus({ preventScroll: true });\n    }\n\n    setOpen(!isOpen);\n  }, [isOpen, setOpen]);\n\n  const handleMouseDown = useCallback(() => {\n    if (!isOpen) activeElementRef.current = document.activeElement;\n  }, [isOpen]);\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          if (!isOpen) activeElementRef.current = document.activeElement;\n          break;\n      }\n    },\n    [isOpen],\n  );\n\n  const handleClose = useCallback(() => {\n    if (\n      isOpen &&\n      activeElementRef.current &&\n      activeElementRef.current instanceof HTMLElement\n    )\n      activeElementRef.current.focus({ preventScroll: true });\n    setOpen(false);\n  }, [isOpen]);\n\n  const handleOverlayEnter = useCallback(\n    (state: Partial<PopperState>) => {\n      if (state.placement) setPlacement(state.placement);\n    },\n    [setPlacement],\n  );\n\n  const valueOption = options.find((item) => item.value === value);\n\n  return (\n    <div ref={containerRef}>\n      <button\n        type='button'\n        onClick={handleToggle}\n        onMouseDown={handleMouseDown}\n        onKeyDown={handleKeyDown}\n        disabled={disabled}\n        className={classNames('dropdown-button', { active: isOpen })}\n      >\n        <span className='dropdown-button__label'>{valueOption?.text}</span>\n        <Icon id='down' icon={ArrowDropDownIcon} />\n      </button>\n\n      <Overlay\n        show={isOpen}\n        offset={[5, 5]}\n        placement={placement}\n        flip\n        target={containerRef}\n        popperConfig={{ strategy: 'fixed', onFirstUpdate: handleOverlayEnter }}\n      >\n        {({ props, placement }) => (\n          <div {...props}>\n            <div\n              className={`dropdown-animation privacy-dropdown__dropdown ${placement}`}\n            >\n              <DropdownSelector\n                items={options}\n                value={value}\n                onClose={handleClose}\n                onChange={onChange}\n                classNamePrefix='privacy-dropdown'\n              />\n            </div>\n          </div>\n        )}\n      </Overlay>\n    </div>\n  );\n};\n\ninterface Props {\n  value: string;\n  options: SelectItem[];\n  disabled?: boolean;\n  onChange: (value: string) => void;\n}\n\nexport const SelectWithLabel: React.FC<PropsWithChildren<Props>> = ({\n  value,\n  options,\n  disabled,\n  children,\n  onChange,\n}) => {\n  return (\n    <label className='app-form__toggle'>\n      <div className='app-form__toggle__label'>{children}</div>\n\n      <div className='app-form__toggle__toggle'>\n        <div>\n          <Dropdown\n            value={value}\n            onChange={onChange}\n            disabled={disabled}\n            options={options}\n          />\n        </div>\n      </div>\n    </label>\n  );\n};\n","import { useCallback } from 'react';\n\nimport { useIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport { updateNotificationsPolicy } from 'mastodon/actions/notification_policies';\nimport type { AppDispatch } from 'mastodon/store';\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nimport { SelectWithLabel } from './select_with_label';\n\nconst messages = defineMessages({\n  accept: { id: 'notifications.policy.accept', defaultMessage: 'Accept' },\n  accept_hint: {\n    id: 'notifications.policy.accept_hint',\n    defaultMessage: 'Show in notifications',\n  },\n  filter: { id: 'notifications.policy.filter', defaultMessage: 'Filter' },\n  filter_hint: {\n    id: 'notifications.policy.filter_hint',\n    defaultMessage: 'Send to filtered notifications inbox',\n  },\n  drop: { id: 'notifications.policy.drop', defaultMessage: 'Ignore' },\n  drop_hint: {\n    id: 'notifications.policy.drop_hint',\n    defaultMessage: 'Send to the void, never to be seen again',\n  },\n});\n\n// TODO: change the following when we change the API\nconst changeFilter = (\n  dispatch: AppDispatch,\n  filterType: string,\n  value: string,\n) => {\n  if (value === 'drop') {\n    dispatch(\n      openModal({\n        modalType: 'IGNORE_NOTIFICATIONS',\n        modalProps: { filterType },\n      }),\n    );\n  } else {\n    void dispatch(updateNotificationsPolicy({ [filterType]: value }));\n  }\n};\n\nexport const PolicyControls: React.FC = () => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n\n  const notificationPolicy = useAppSelector(\n    (state) => state.notificationPolicy,\n  );\n\n  const handleFilterNotFollowing = useCallback(\n    (value: string) => {\n      changeFilter(dispatch, 'for_not_following', value);\n    },\n    [dispatch],\n  );\n\n  const handleFilterNotFollowers = useCallback(\n    (value: string) => {\n      changeFilter(dispatch, 'for_not_followers', value);\n    },\n    [dispatch],\n  );\n\n  const handleFilterNewAccounts = useCallback(\n    (value: string) => {\n      changeFilter(dispatch, 'for_new_accounts', value);\n    },\n    [dispatch],\n  );\n\n  const handleFilterPrivateMentions = useCallback(\n    (value: string) => {\n      changeFilter(dispatch, 'for_private_mentions', value);\n    },\n    [dispatch],\n  );\n\n  const handleFilterLimitedAccounts = useCallback(\n    (value: string) => {\n      changeFilter(dispatch, 'for_limited_accounts', value);\n    },\n    [dispatch],\n  );\n\n  if (!notificationPolicy) return null;\n\n  const options = [\n    {\n      value: 'accept',\n      text: intl.formatMessage(messages.accept),\n      meta: intl.formatMessage(messages.accept_hint),\n    },\n    {\n      value: 'filter',\n      text: intl.formatMessage(messages.filter),\n      meta: intl.formatMessage(messages.filter_hint),\n    },\n    {\n      value: 'drop',\n      text: intl.formatMessage(messages.drop),\n      meta: intl.formatMessage(messages.drop_hint),\n    },\n  ];\n\n  return (\n    <section>\n      <h3>\n        <FormattedMessage\n          id='notifications.policy.title'\n          defaultMessage='Manage notifications fromâ€¦'\n        />\n      </h3>\n\n      <div className='column-settings__row'>\n        <SelectWithLabel\n          value={notificationPolicy.for_not_following}\n          onChange={handleFilterNotFollowing}\n          options={options}\n        >\n          <strong>\n            <FormattedMessage\n              id='notifications.policy.filter_not_following_title'\n              defaultMessage=\"People you don't follow\"\n            />\n          </strong>\n          <span className='hint'>\n            <FormattedMessage\n              id='notifications.policy.filter_not_following_hint'\n              defaultMessage='Until you manually approve them'\n            />\n          </span>\n        </SelectWithLabel>\n\n        <SelectWithLabel\n          value={notificationPolicy.for_not_followers}\n          onChange={handleFilterNotFollowers}\n          options={options}\n        >\n          <strong>\n            <FormattedMessage\n              id='notifications.policy.filter_not_followers_title'\n              defaultMessage='People not following you'\n            />\n          </strong>\n          <span className='hint'>\n            <FormattedMessage\n              id='notifications.policy.filter_not_followers_hint'\n              defaultMessage='Including people who have been following you fewer than {days, plural, one {one day} other {# days}}'\n              values={{ days: 3 }}\n            />\n          </span>\n        </SelectWithLabel>\n\n        <SelectWithLabel\n          value={notificationPolicy.for_new_accounts}\n          onChange={handleFilterNewAccounts}\n          options={options}\n        >\n          <strong>\n            <FormattedMessage\n              id='notifications.policy.filter_new_accounts_title'\n              defaultMessage='New accounts'\n            />\n          </strong>\n          <span className='hint'>\n            <FormattedMessage\n              id='notifications.policy.filter_new_accounts.hint'\n              defaultMessage='Created within the past {days, plural, one {one day} other {# days}}'\n              values={{ days: 30 }}\n            />\n          </span>\n        </SelectWithLabel>\n\n        <SelectWithLabel\n          value={notificationPolicy.for_private_mentions}\n          onChange={handleFilterPrivateMentions}\n          options={options}\n        >\n          <strong>\n            <FormattedMessage\n              id='notifications.policy.filter_private_mentions_title'\n              defaultMessage='Unsolicited private mentions'\n            />\n          </strong>\n          <span className='hint'>\n            <FormattedMessage\n              id='notifications.policy.filter_private_mentions_hint'\n              defaultMessage=\"Filtered unless it's in reply to your own mention or if you follow the sender\"\n            />\n          </span>\n        </SelectWithLabel>\n\n        <SelectWithLabel\n          value={notificationPolicy.for_limited_accounts}\n          onChange={handleFilterLimitedAccounts}\n          options={options}\n        >\n          <strong>\n            <FormattedMessage\n              id='notifications.policy.filter_limited_accounts_title'\n              defaultMessage='Moderated accounts'\n            />\n          </strong>\n          <span className='hint'>\n            <FormattedMessage\n              id='notifications.policy.filter_limited_accounts_hint'\n              defaultMessage='Limited by server moderators'\n            />\n          </span>\n        </SelectWithLabel>\n      </div>\n    </section>\n  );\n};\n"],"names":["SvgArrowDropDown","props","React.createElement","Dropdown","value","options","disabled","onChange","placement","initialPlacement","activeElementRef","useRef","containerRef","isOpen","setOpen","useState","setPlacement","handleToggle","useCallback","current","HTMLElement","focus","preventScroll","handleMouseDown","document","activeElement","handleKeyDown","e","key","handleClose","handleOverlayEnter","state","valueOption","find","item","jsxDEV","classNames","active","text","this","Icon","ArrowDropDownIcon","Overlay","strategy","onFirstUpdate","DropdownSelector","SelectWithLabel","children","messages","defineMessages","accept","id","defaultMessage","accept_hint","filter","filter_hint","drop","drop_hint","changeFilter","dispatch","filterType","openModal","modalType","modalProps","updateNotificationsPolicy","PolicyControls","intl","useIntl","useAppDispatch","notificationPolicy","useAppSelector","handleFilterNotFollowing","handleFilterNotFollowers","handleFilterNewAccounts","handleFilterPrivateMentions","handleFilterLimitedAccounts","formatMessage","meta","FormattedMessage","for_not_following","for_not_followers","days","for_new_accounts","for_private_mentions","for_limited_accounts"],"mappings":"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"}