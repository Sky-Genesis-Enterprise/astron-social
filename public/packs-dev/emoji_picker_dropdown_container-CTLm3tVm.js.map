{"version":3,"file":"emoji_picker_dropdown_container-CTLm3tVm.js","sources":["../../app/javascript/material-icons/400-20px/mood.svg?react","../../app/javascript/mastodon/features/compose/components/emoji_picker_dropdown.jsx","../../app/javascript/mastodon/features/compose/containers/emoji_picker_dropdown_container.js"],"sourcesContent":["import * as React from \"react\";\nconst SvgMood = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 20, viewBox: \"0 -960 960 960\", width: 20, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M612-516q25 0 42.5-17.5T672-576q0-25-17.5-42.5T612-636q-25 0-42.5 17.5T552-576q0 25 17.5 42.5T612-516Zm-264 0q25 0 42.5-17.5T408-576q0-25-17.5-42.5T348-636q-25 0-42.5 17.5T288-576q0 25 17.5 42.5T348-516Zm132 228q60 0 110.5-31t79.5-84H290q29 53 79.5 84T480-288Zm.28 192Q401-96 331-126t-122.5-82.5Q156-261 126-330.96t-30-149.5Q96-560 126-629.5q30-69.5 82.5-122T330.96-834q69.96-30 149.5-30t149.04 30q69.5 30 122 82.5T834-629.28q30 69.73 30 149Q864-401 834-331t-82.5 122.5Q699-156 629.28-126q-69.73 30-149 30ZM480-480Zm0 312q130 0 221-91t91-221q0-130-91-221t-221-91q-130 0-221 91t-91 221q0 130 91 221t221 91Z\" }));\nexport default SvgMood;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport Overlay from 'react-overlays/Overlay';\n\nimport MoodIcon from '@/material-icons/400-20px/mood.svg?react';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nimport { buildCustomEmojis, categoriesFromEmojis } from '../../emoji/emoji';\nimport { EmojiPicker as EmojiPickerAsync } from '../../ui/util/async-components';\n\nconst messages = defineMessages({\n  emoji: { id: 'emoji_button.label', defaultMessage: 'Insert emoji' },\n  emoji_search: { id: 'emoji_button.search', defaultMessage: 'Search...' },\n  custom: { id: 'emoji_button.custom', defaultMessage: 'Custom' },\n  recent: { id: 'emoji_button.recent', defaultMessage: 'Frequently used' },\n  search_results: { id: 'emoji_button.search_results', defaultMessage: 'Search results' },\n  people: { id: 'emoji_button.people', defaultMessage: 'People' },\n  nature: { id: 'emoji_button.nature', defaultMessage: 'Nature' },\n  food: { id: 'emoji_button.food', defaultMessage: 'Food & Drink' },\n  activity: { id: 'emoji_button.activity', defaultMessage: 'Activity' },\n  travel: { id: 'emoji_button.travel', defaultMessage: 'Travel & Places' },\n  objects: { id: 'emoji_button.objects', defaultMessage: 'Objects' },\n  symbols: { id: 'emoji_button.symbols', defaultMessage: 'Symbols' },\n  flags: { id: 'emoji_button.flags', defaultMessage: 'Flags' },\n});\n\nlet EmojiPicker, Emoji; // load asynchronously\n\nconst listenerOptions = supportsPassiveEvents ? { passive: true, capture: true } : true;\n\nconst notFoundFn = () => (\n  <div className='emoji-mart-no-results'>\n    <Emoji\n      emoji='sleuth_or_spy'\n      size={32}\n    />\n\n    <div className='emoji-mart-no-results-label'>\n      <FormattedMessage id='emoji_button.not_found' defaultMessage='No matching emojis found' />\n    </div>\n  </div>\n);\n\nclass ModifierPickerMenu extends PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  handleClick = e => {\n    this.props.onSelect(e.currentTarget.getAttribute('data-index') * 1);\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.active) {\n      this.attachListeners();\n    } else {\n      this.removeListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  };\n\n  attachListeners() {\n    document.addEventListener('click', this.handleDocumentClick, { capture: true });\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  removeListeners() {\n    document.removeEventListener('click', this.handleDocumentClick, { capture: true });\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  render() {\n    const { active } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers__menu' style={{ display: active ? 'block' : 'none' }} ref={this.setRef}>\n        <button type='button' onClick={this.handleClick} data-index={1}><Emoji emoji='fist' size={22} skin={1} /></button>\n        <button type='button' onClick={this.handleClick} data-index={2}><Emoji emoji='fist' size={22} skin={2} /></button>\n        <button type='button' onClick={this.handleClick} data-index={3}><Emoji emoji='fist' size={22} skin={3} /></button>\n        <button type='button' onClick={this.handleClick} data-index={4}><Emoji emoji='fist' size={22} skin={4} /></button>\n        <button type='button' onClick={this.handleClick} data-index={5}><Emoji emoji='fist' size={22} skin={5} /></button>\n        <button type='button' onClick={this.handleClick} data-index={6}><Emoji emoji='fist' size={22} skin={6} /></button>\n      </div>\n    );\n  }\n\n}\n\nclass ModifierPicker extends PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    modifier: PropTypes.number,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n  };\n\n  handleClick = () => {\n    if (this.props.active) {\n      this.props.onClose();\n    } else {\n      this.props.onOpen();\n    }\n  };\n\n  handleSelect = modifier => {\n    this.props.onChange(modifier);\n    this.props.onClose();\n  };\n\n  render() {\n    const { active, modifier } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers'>\n        <Emoji emoji='fist' size={22} skin={modifier} onClick={this.handleClick} />\n        <ModifierPickerMenu active={active} onSelect={this.handleSelect} onClose={this.props.onClose} />\n      </div>\n    );\n  }\n\n}\n\nclass EmojiPickerMenuImpl extends PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    loading: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    onPick: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    intl: PropTypes.object.isRequired,\n    skinTone: PropTypes.number.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n    pickerButtonRef: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    style: {},\n    loading: true,\n    frequentlyUsedEmojis: [],\n  };\n\n  state = {\n    modifierOpen: false,\n    readyToFocus: false,\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target) && !this.props.pickerButtonRef.contains(e.target)) {\n      this.props.onClose();\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleDocumentClick, { capture: true });\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n\n    // Because of https://github.com/react-bootstrap/react-bootstrap/issues/2614 we need\n    // to wait for a frame before focusing\n    requestAnimationFrame(() => {\n      this.setState({ readyToFocus: true });\n      if (this.node) {\n        const element = this.node.querySelector('input[type=\"search\"]');\n        if (element) element.focus();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleDocumentClick, { capture: true });\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  getI18n = () => {\n    const { intl } = this.props;\n\n    return {\n      search: intl.formatMessage(messages.emoji_search),\n      categories: {\n        search: intl.formatMessage(messages.search_results),\n        recent: intl.formatMessage(messages.recent),\n        people: intl.formatMessage(messages.people),\n        nature: intl.formatMessage(messages.nature),\n        foods: intl.formatMessage(messages.food),\n        activity: intl.formatMessage(messages.activity),\n        places: intl.formatMessage(messages.travel),\n        objects: intl.formatMessage(messages.objects),\n        symbols: intl.formatMessage(messages.symbols),\n        flags: intl.formatMessage(messages.flags),\n        custom: intl.formatMessage(messages.custom),\n      },\n    };\n  };\n\n  handleClick = (emoji, event) => {\n    if (!emoji.native) {\n      emoji.native = emoji.colons;\n    }\n    if (!(event.ctrlKey || event.metaKey)) {\n\n      this.props.onClose();\n    }\n    this.props.onPick(emoji);\n  };\n\n  handleModifierOpen = () => {\n    this.setState({ modifierOpen: true });\n  };\n\n  handleModifierClose = () => {\n    this.setState({ modifierOpen: false });\n  };\n\n  handleModifierChange = modifier => {\n    this.props.onSkinTone(modifier);\n  };\n\n  render() {\n    const { loading, style, intl, custom_emojis, skinTone, frequentlyUsedEmojis } = this.props;\n\n    if (loading) {\n      return <div style={{ width: 299 }} />;\n    }\n\n    const title = intl.formatMessage(messages.emoji);\n\n    const { modifierOpen } = this.state;\n\n    const categoriesSort = [\n      'recent',\n      'people',\n      'nature',\n      'foods',\n      'activity',\n      'places',\n      'objects',\n      'symbols',\n      'flags',\n    ];\n\n    categoriesSort.splice(1, 0, ...Array.from(categoriesFromEmojis(custom_emojis)).sort());\n\n    return (\n      <div className={classNames('emoji-picker-dropdown__menu', { selecting: modifierOpen })} style={style} ref={this.setRef}>\n        <EmojiPicker\n          perLine={8}\n          emojiSize={22}\n          custom={buildCustomEmojis(custom_emojis)}\n          color=''\n          emoji=''\n          title={title}\n          i18n={this.getI18n()}\n          onClick={this.handleClick}\n          include={categoriesSort}\n          recent={frequentlyUsedEmojis}\n          skin={skinTone}\n          showPreview={false}\n          showSkinTones={false}\n          notFound={notFoundFn}\n          autoFocus={this.state.readyToFocus}\n          emojiTooltip\n        />\n\n        <ModifierPicker\n          active={modifierOpen}\n          modifier={skinTone}\n          onOpen={this.handleModifierOpen}\n          onClose={this.handleModifierClose}\n          onChange={this.handleModifierChange}\n        />\n      </div>\n    );\n  }\n\n}\n\nconst EmojiPickerMenu = injectIntl(EmojiPickerMenuImpl);\n\nclass EmojiPickerDropdown extends PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    intl: PropTypes.object.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n    skinTone: PropTypes.number.isRequired,\n  };\n\n  state = {\n    active: false,\n    loading: false,\n    placement: 'bottom',\n  };\n\n  setRef = (c) => {\n    this.dropdown = c;\n  };\n\n  onShowDropdown = () => {\n    this.setState({ active: true });\n\n    if (!EmojiPicker) {\n      this.setState({ loading: true });\n\n      EmojiPickerAsync().then(EmojiMart => {\n        EmojiPicker = EmojiMart.Picker;\n        Emoji = EmojiMart.Emoji;\n\n        this.setState({ loading: false });\n      }).catch(() => {\n        this.setState({ loading: false, active: false });\n      });\n    }\n  };\n\n  onHideDropdown = () => {\n    this.setState({ active: false });\n  };\n\n  onToggle = (e) => {\n    if (!this.state.loading && (!e.key || e.key === 'Enter')) {\n      if (this.state.active) {\n        this.onHideDropdown();\n      } else {\n        this.onShowDropdown(e);\n      }\n    }\n  };\n\n  handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      this.onHideDropdown();\n    }\n  };\n\n  setTargetRef = c => {\n    this.target = c;\n  };\n\n  findTarget = () => {\n    return this.target;\n  };\n\n  handleOverlayEnter = (state) => {\n    this.setState({ placement: state.placement });\n  };\n\n  render() {\n    const { intl, onPickEmoji, onSkinTone, skinTone, frequentlyUsedEmojis } = this.props;\n    const title = intl.formatMessage(messages.emoji);\n    const { active, loading, placement } = this.state;\n\n    return (\n      <div className='emoji-picker-dropdown' onKeyDown={this.handleKeyDown} ref={this.setTargetRef}>\n        <IconButton\n          title={title}\n          aria-expanded={active}\n          active={active}\n          iconComponent={MoodIcon}\n          onClick={this.onToggle}\n          inverted\n        />\n\n        <Overlay show={active} placement={placement} flip target={this.findTarget} popperConfig={{ strategy: 'fixed', onFirstUpdate: this.handleOverlayEnter }}>\n          {({ props, placement }) => (\n            <div {...props} style={{ ...props.style }}>\n              <div className={`dropdown-animation ${placement}`}>\n                <EmojiPickerMenu\n                  custom_emojis={this.props.custom_emojis}\n                  loading={loading}\n                  onClose={this.onHideDropdown}\n                  onPick={onPickEmoji}\n                  onSkinTone={onSkinTone}\n                  skinTone={skinTone}\n                  frequentlyUsedEmojis={frequentlyUsedEmojis}\n                  pickerButtonRef={this.target}\n                />\n              </div>\n            </div>\n          )}\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(EmojiPickerDropdown);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\n\n\nimport { useEmoji } from '../../../actions/emojis';\nimport { changeSetting } from '../../../actions/settings';\nimport EmojiPickerDropdown from '../components/emoji_picker_dropdown';\n\nconst perLine = 8;\nconst lines   = 2;\n\nconst DEFAULTS = [\n  '+1',\n  'grinning',\n  'kissing_heart',\n  'heart_eyes',\n  'laughing',\n  'stuck_out_tongue_winking_eye',\n  'sweat_smile',\n  'joy',\n  'yum',\n  'disappointed',\n  'thinking_face',\n  'weary',\n  'sob',\n  'sunglasses',\n  'heart',\n  'ok_hand',\n];\n\nconst getFrequentlyUsedEmojis = createSelector([\n  state => state.getIn(['settings', 'frequentlyUsedEmojis'], ImmutableMap()),\n], emojiCounters => {\n  let emojis = emojiCounters\n    .keySeq()\n    .sort((a, b) => emojiCounters.get(a) - emojiCounters.get(b))\n    .reverse()\n    .slice(0, perLine * lines)\n    .toArray();\n\n  if (emojis.length < DEFAULTS.length) {\n    let uniqueDefaults = DEFAULTS.filter(emoji => !emojis.includes(emoji));\n    emojis = emojis.concat(uniqueDefaults.slice(0, DEFAULTS.length - emojis.length));\n  }\n\n  return emojis;\n});\n\nconst getCustomEmojis = createSelector([\n  state => state.get('custom_emojis'),\n], emojis => emojis.filter(e => e.get('visible_in_picker')).sort((a, b) => {\n  const aShort = a.get('shortcode').toLowerCase();\n  const bShort = b.get('shortcode').toLowerCase();\n\n  if (aShort < bShort) {\n    return -1;\n  } else if (aShort > bShort ) {\n    return 1;\n  } else {\n    return 0;\n  }\n}));\n\nconst mapStateToProps = state => ({\n  custom_emojis: getCustomEmojis(state),\n  skinTone: state.getIn(['settings', 'skinTone']),\n  frequentlyUsedEmojis: getFrequentlyUsedEmojis(state),\n});\n\nconst mapDispatchToProps = (dispatch, { onPickEmoji }) => ({\n  onSkinTone: skinTone => {\n    dispatch(changeSetting(['skinTone'], skinTone));\n  },\n\n  onPickEmoji: emoji => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- this is not a react hook\n    dispatch(useEmoji(emoji));\n\n    if (onPickEmoji) {\n      onPickEmoji(emoji);\n    }\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPickerDropdown);\n"],"names":["SvgMood","props","React.createElement","messages","defineMessages","emoji","id","defaultMessage","emoji_search","custom","recent","search_results","people","nature","food","activity","travel","objects","symbols","flags","EmojiPicker","Emoji","listenerOptions","supportsPassiveEvents","passive","capture","notFoundFn","jsxDEV","this","FormattedMessage","ModifierPickerMenu","PureComponent","handleClick","e","onSelect","currentTarget","getAttribute","handleDocumentClick","node","contains","target","onClose","setRef","c","UNSAFE_componentWillReceiveProps","nextProps","active","attachListeners","removeListeners","componentWillUnmount","document","addEventListener","removeEventListener","render","display","ModifierPicker","onOpen","handleSelect","modifier","onChange","EmojiPickerMenuImpl","state","modifierOpen","readyToFocus","pickerButtonRef","getI18n","intl","search","formatMessage","categories","foods","places","event","native","colons","ctrlKey","metaKey","onPick","handleModifierOpen","setState","handleModifierClose","handleModifierChange","onSkinTone","componentDidMount","requestAnimationFrame","element","querySelector","focus","loading","style","custom_emojis","skinTone","frequentlyUsedEmojis","width","title","categoriesSort","splice","Array","from","categoriesFromEmojis","sort","classNames","selecting","buildCustomEmojis","__publicField","defaultProps","EmojiPickerMenu","injectIntl","placement","dropdown","onShowDropdown","EmojiPickerAsync","then","EmojiMart","Picker","catch","onHideDropdown","onToggle","key","handleKeyDown","setTargetRef","findTarget","handleOverlayEnter","onPickEmoji","IconButton","MoodIcon","Overlay","strategy","onFirstUpdate","EmojiPickerDropdown$2","EmojiPickerDropdown","perLine","lines","DEFAULTS","getFrequentlyUsedEmojis","createSelector","getIn","ImmutableMap","emojiCounters","emojis","keySeq","a","b","get","reverse","slice","toArray","length","uniqueDefaults","filter","includes","concat","getCustomEmojis","aShort","toLowerCase","bShort","mapStateToProps","mapDispatchToProps","dispatch","changeSetting","useEmoji","connect"],"mappings":"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"}