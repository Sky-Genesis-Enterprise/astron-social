{"version":3,"file":"list_adder-index-BBnvNtRx.js","sources":["../../app/javascript/mastodon/features/list_adder/index.tsx"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\n\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\n\nimport { isFulfilled } from '@reduxjs/toolkit';\n\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport ListAltIcon from '@/material-icons/400-24px/list_alt.svg?react';\nimport { fetchLists } from 'mastodon/actions/lists';\nimport { createList } from 'mastodon/actions/lists_typed';\nimport {\n  apiGetAccountLists,\n  apiAddAccountToList,\n  apiRemoveAccountFromList,\n} from 'mastodon/api/lists';\nimport type { ApiListJSON } from 'mastodon/api_types/lists';\nimport { Button } from 'mastodon/components/button';\nimport { CheckBox } from 'mastodon/components/check_box';\nimport { Icon } from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport { getOrderedLists } from 'mastodon/selectors/lists';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nconst messages = defineMessages({\n  newList: {\n    id: 'lists.new_list_name',\n    defaultMessage: 'New list name',\n  },\n  createList: {\n    id: 'lists.create',\n    defaultMessage: 'Create',\n  },\n  close: {\n    id: 'lightbox.close',\n    defaultMessage: 'Close',\n  },\n});\n\nconst ListItem: React.FC<{\n  id: string;\n  title: string;\n  checked: boolean;\n  onChange: (id: string, checked: boolean) => void;\n}> = ({ id, title, checked, onChange }) => {\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(id, e.target.checked);\n    },\n    [id, onChange],\n  );\n\n  return (\n    // eslint-disable-next-line jsx-a11y/label-has-associated-control\n    <label className='lists__item'>\n      <div className='lists__item__title'>\n        <Icon id='list-ul' icon={ListAltIcon} />\n        <span>{title}</span>\n      </div>\n\n      <CheckBox value={id} checked={checked} onChange={handleChange} />\n    </label>\n  );\n};\n\nconst NewListItem: React.FC<{\n  onCreate: (list: ApiListJSON) => void;\n}> = ({ onCreate }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const [title, setTitle] = useState('');\n\n  const handleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(value);\n    },\n    [setTitle],\n  );\n\n  const handleSubmit = useCallback(() => {\n    if (title.trim().length === 0) {\n      return;\n    }\n\n    void dispatch(createList({ title })).then((result) => {\n      if (isFulfilled(result)) {\n        onCreate(result.payload);\n        setTitle('');\n      }\n\n      return '';\n    });\n  }, [setTitle, dispatch, onCreate, title]);\n\n  return (\n    <form className='lists__item' onSubmit={handleSubmit}>\n      <label className='lists__item__title'>\n        <Icon id='list-ul' icon={ListAltIcon} />\n\n        <input\n          type='text'\n          value={title}\n          onChange={handleChange}\n          maxLength={30}\n          required\n          placeholder={intl.formatMessage(messages.newList)}\n        />\n      </label>\n\n      <Button text={intl.formatMessage(messages.createList)} type='submit' />\n    </form>\n  );\n};\n\nconst ListAdder: React.FC<{\n  accountId: string;\n  onClose: () => void;\n}> = ({ accountId, onClose }) => {\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const account = useAppSelector((state) => state.accounts.get(accountId));\n  const lists = useAppSelector((state) => getOrderedLists(state));\n  const [listIds, setListIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    void dispatch(fetchLists());\n\n    apiGetAccountLists(accountId)\n      .then((data) => {\n        setListIds(data.map((l) => l.id));\n        return '';\n      })\n      .catch(() => {\n        // Nothing\n      });\n  }, [dispatch, setListIds, accountId]);\n\n  const handleToggle = useCallback(\n    (listId: string, checked: boolean) => {\n      if (checked) {\n        setListIds((currentListIds) => [listId, ...currentListIds]);\n\n        apiAddAccountToList(listId, accountId).catch(() => {\n          setListIds((currentListIds) =>\n            currentListIds.filter((id) => id !== listId),\n          );\n        });\n      } else {\n        setListIds((currentListIds) =>\n          currentListIds.filter((id) => id !== listId),\n        );\n\n        apiRemoveAccountFromList(listId, accountId).catch(() => {\n          setListIds((currentListIds) => [listId, ...currentListIds]);\n        });\n      }\n    },\n    [setListIds, accountId],\n  );\n\n  const handleCreate = useCallback(\n    (list: ApiListJSON) => {\n      setListIds((currentListIds) => [list.id, ...currentListIds]);\n\n      apiAddAccountToList(list.id, accountId).catch(() => {\n        setListIds((currentListIds) =>\n          currentListIds.filter((id) => id !== list.id),\n        );\n      });\n    },\n    [setListIds, accountId],\n  );\n\n  return (\n    <div className='modal-root__modal dialog-modal'>\n      <div className='dialog-modal__header'>\n        <IconButton\n          className='dialog-modal__header__close'\n          title={intl.formatMessage(messages.close)}\n          icon='times'\n          iconComponent={CloseIcon}\n          onClick={onClose}\n        />\n\n        <span className='dialog-modal__header__title'>\n          <FormattedMessage\n            id='lists.add_to_lists'\n            defaultMessage='Add {name} to lists'\n            values={{ name: <strong>@{account?.acct}</strong> }}\n          />\n        </span>\n      </div>\n\n      <div className='dialog-modal__content'>\n        <div className='lists-scrollable'>\n          <NewListItem onCreate={handleCreate} />\n\n          {lists.map((list) => (\n            <ListItem\n              key={list.id}\n              id={list.id}\n              title={list.title}\n              checked={listIds.includes(list.id)}\n              onChange={handleToggle}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default ListAdder;\n"],"names":["messages","defineMessages","newList","id","defaultMessage","createList","close","ListItem","title","checked","onChange","handleChange","useCallback","e","target","jsxDEV","Icon","ListAltIcon","this","CheckBox","NewListItem","onCreate","intl","useIntl","dispatch","useAppDispatch","setTitle","useState","value","handleSubmit","trim","length","then","result","isFulfilled","payload","formatMessage","Button","ListAdder","accountId","onClose","account","useAppSelector","state","accounts","get","lists","getOrderedLists","listIds","setListIds","useEffect","fetchLists","apiGetAccountLists","data","map","l","catch","handleToggle","listId","currentListIds","apiAddAccountToList","filter","apiRemoveAccountFromList","handleCreate","list","IconButton","CloseIcon","FormattedMessage","name","acct","includes"],"mappings":"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"}