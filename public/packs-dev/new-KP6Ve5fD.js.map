{"version":3,"file":"new-KP6Ve5fD.js","sources":["../../app/javascript/mastodon/features/lists/new.tsx"],"sourcesContent":["import { useCallback, useState, useEffect } from 'react';\n\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { useParams, useHistory, Link } from 'react-router-dom';\n\nimport { isFulfilled } from '@reduxjs/toolkit';\n\nimport Toggle from 'react-toggle';\n\nimport ChevronRightIcon from '@/material-icons/400-24px/chevron_right.svg?react';\nimport ListAltIcon from '@/material-icons/400-24px/list_alt.svg?react';\nimport { fetchList } from 'mastodon/actions/lists';\nimport { createList, updateList } from 'mastodon/actions/lists_typed';\nimport { apiGetAccounts } from 'mastodon/api/lists';\nimport type { ApiAccountJSON } from 'mastodon/api_types/accounts';\nimport type { RepliesPolicyType } from 'mastodon/api_types/lists';\nimport { Avatar } from 'mastodon/components/avatar';\nimport { AvatarGroup } from 'mastodon/components/avatar_group';\nimport { Column } from 'mastodon/components/column';\nimport { ColumnHeader } from 'mastodon/components/column_header';\nimport { Icon } from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport { useAppDispatch, useAppSelector } from 'mastodon/store';\n\nimport { messages as membersMessages } from './members';\n\nconst messages = defineMessages({\n  edit: { id: 'column.edit_list', defaultMessage: 'Edit list' },\n  create: { id: 'column.create_list', defaultMessage: 'Create list' },\n});\n\nconst MembersLink: React.FC<{\n  id: string;\n}> = ({ id }) => {\n  const intl = useIntl();\n  const [avatarCount, setAvatarCount] = useState(0);\n  const [avatarAccounts, setAvatarAccounts] = useState<ApiAccountJSON[]>([]);\n\n  useEffect(() => {\n    void apiGetAccounts(id)\n      .then((data) => {\n        setAvatarCount(data.length);\n        setAvatarAccounts(data.slice(0, 3));\n      })\n      .catch(() => {\n        // Nothing\n      });\n  }, [id]);\n\n  return (\n    <Link to={`/lists/${id}/members`} className='app-form__link'>\n      <div className='app-form__link__text'>\n        <strong>\n          {intl.formatMessage(membersMessages.manageMembers)}\n          <Icon id='chevron_right' icon={ChevronRightIcon} />\n        </strong>\n        <FormattedMessage\n          id='lists.list_members_count'\n          defaultMessage='{count, plural, one {# member} other {# members}}'\n          values={{ count: avatarCount }}\n        />\n      </div>\n\n      <AvatarGroup compact>\n        {avatarAccounts.map((a) => (\n          <Avatar key={a.id} account={a} size={30} />\n        ))}\n      </AvatarGroup>\n    </Link>\n  );\n};\n\nconst NewList: React.FC<{\n  multiColumn?: boolean;\n}> = ({ multiColumn }) => {\n  const dispatch = useAppDispatch();\n  const { id } = useParams<{ id?: string }>();\n  const intl = useIntl();\n  const history = useHistory();\n\n  const list = useAppSelector((state) =>\n    id ? state.lists.get(id) : undefined,\n  );\n  const [title, setTitle] = useState('');\n  const [exclusive, setExclusive] = useState(false);\n  const [repliesPolicy, setRepliesPolicy] = useState<RepliesPolicyType>('list');\n  const [submitting, setSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchList(id));\n    }\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    if (id && list) {\n      setTitle(list.title);\n      setExclusive(list.exclusive);\n      setRepliesPolicy(list.replies_policy);\n    }\n  }, [setTitle, setExclusive, setRepliesPolicy, id, list]);\n\n  const handleTitleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(value);\n    },\n    [setTitle],\n  );\n\n  const handleExclusiveChange = useCallback(\n    ({ target: { checked } }: React.ChangeEvent<HTMLInputElement>) => {\n      setExclusive(checked);\n    },\n    [setExclusive],\n  );\n\n  const handleRepliesPolicyChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLSelectElement>) => {\n      setRepliesPolicy(value as RepliesPolicyType);\n    },\n    [setRepliesPolicy],\n  );\n\n  const handleSubmit = useCallback(() => {\n    setSubmitting(true);\n\n    if (id) {\n      void dispatch(\n        updateList({\n          id,\n          title,\n          exclusive,\n          replies_policy: repliesPolicy,\n        }),\n      ).then(() => {\n        setSubmitting(false);\n        return '';\n      });\n    } else {\n      void dispatch(\n        createList({\n          title,\n          exclusive,\n          replies_policy: repliesPolicy,\n        }),\n      ).then((result) => {\n        setSubmitting(false);\n\n        if (isFulfilled(result)) {\n          history.replace(`/lists/${result.payload.id}/edit`);\n          history.push(`/lists/${result.payload.id}/members`);\n        }\n\n        return '';\n      });\n    }\n  }, [history, dispatch, setSubmitting, id, title, exclusive, repliesPolicy]);\n\n  return (\n    <Column\n      bindToDocument={!multiColumn}\n      label={intl.formatMessage(id ? messages.edit : messages.create)}\n    >\n      <ColumnHeader\n        title={intl.formatMessage(id ? messages.edit : messages.create)}\n        icon='list-ul'\n        iconComponent={ListAltIcon}\n        multiColumn={multiColumn}\n        showBackButton\n      />\n\n      <div className='scrollable'>\n        <form className='simple_form app-form' onSubmit={handleSubmit}>\n          <div className='fields-group'>\n            <div className='input with_label'>\n              <div className='label_input'>\n                <label htmlFor='list_title'>\n                  <FormattedMessage\n                    id='lists.list_name'\n                    defaultMessage='List name'\n                  />\n                </label>\n\n                <div className='label_input__wrapper'>\n                  <input\n                    id='list_title'\n                    type='text'\n                    value={title}\n                    onChange={handleTitleChange}\n                    maxLength={30}\n                    required\n                    placeholder=' '\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='fields-group'>\n            <div className='input with_label'>\n              <div className='label_input'>\n                <label htmlFor='list_replies_policy'>\n                  <FormattedMessage\n                    id='lists.show_replies_to'\n                    defaultMessage='Include replies from list members to'\n                  />\n                </label>\n\n                <div className='label_input__wrapper'>\n                  <select\n                    id='list_replies_policy'\n                    value={repliesPolicy}\n                    onChange={handleRepliesPolicyChange}\n                  >\n                    <FormattedMessage\n                      id='lists.replies_policy.none'\n                      defaultMessage='No one'\n                    >\n                      {(msg) => <option value='none'>{msg}</option>}\n                    </FormattedMessage>\n                    <FormattedMessage\n                      id='lists.replies_policy.list'\n                      defaultMessage='Members of the list'\n                    >\n                      {(msg) => <option value='list'>{msg}</option>}\n                    </FormattedMessage>\n                    <FormattedMessage\n                      id='lists.replies_policy.followed'\n                      defaultMessage='Any followed user'\n                    >\n                      {(msg) => <option value='followed'>{msg}</option>}\n                    </FormattedMessage>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {id && (\n            <div className='fields-group'>\n              <MembersLink id={id} />\n            </div>\n          )}\n\n          <div className='fields-group'>\n            {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n            <label className='app-form__toggle'>\n              <div className='app-form__toggle__label'>\n                <strong>\n                  <FormattedMessage\n                    id='lists.exclusive'\n                    defaultMessage='Hide members in Home'\n                  />\n                </strong>\n                <span className='hint'>\n                  <FormattedMessage\n                    id='lists.exclusive_hint'\n                    defaultMessage='If someone is on this list, hide them in your Home feed to avoid seeing their posts twice.'\n                  />\n                </span>\n              </div>\n\n              <div className='app-form__toggle__toggle'>\n                <div>\n                  <Toggle\n                    checked={exclusive}\n                    onChange={handleExclusiveChange}\n                  />\n                </div>\n              </div>\n            </label>\n          </div>\n\n          <div className='actions'>\n            <button className='button' type='submit'>\n              {submitting ? (\n                <LoadingIndicator />\n              ) : id ? (\n                <FormattedMessage id='lists.save' defaultMessage='Save' />\n              ) : (\n                <FormattedMessage id='lists.create' defaultMessage='Create' />\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <Helmet>\n        <title>\n          {intl.formatMessage(id ? messages.edit : messages.create)}\n        </title>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default NewList;\n"],"names":["messages","defineMessages","edit","id","defaultMessage","create","MembersLink","intl","useIntl","avatarCount","setAvatarCount","useState","avatarAccounts","setAvatarAccounts","useEffect","apiGetAccounts","then","data","length","slice","catch","Link","jsxDEV","formatMessage","membersMessages","manageMembers","Icon","ChevronRightIcon","this","FormattedMessage","count","AvatarGroup","map","a","Avatar","NewList","multiColumn","dispatch","useAppDispatch","useParams","history","useHistory","list","useAppSelector","state","lists","get","undefined","title","setTitle","exclusive","setExclusive","repliesPolicy","setRepliesPolicy","submitting","setSubmitting","fetchList","replies_policy","handleTitleChange","useCallback","target","value","handleExclusiveChange","checked","handleRepliesPolicyChange","handleSubmit","updateList","createList","result","isFulfilled","replace","payload","push","Column","ColumnHeader","ListAltIcon","msg","Toggle","LoadingIndicator","Helmet"],"mappings":"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"}