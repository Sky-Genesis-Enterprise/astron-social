{"version":3,"file":"bundle_column_error-BUenPHpF.js","sources":["../../app/javascript/mastodon/features/ui/components/bundle_column_error.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport { Button } from 'mastodon/components/button';\nimport Column from 'mastodon/components/column';\nimport { GIF } from 'mastodon/components/gif';\n\nclass CopyButton extends PureComponent {\n\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    value: PropTypes.string.isRequired,\n  };\n\n  state = {\n    copied: false,\n  };\n\n  handleClick = () => {\n    const { value } = this.props;\n    navigator.clipboard.writeText(value);\n    this.setState({ copied: true });\n    this.timeout = setTimeout(() => this.setState({ copied: false }), 700);\n  };\n\n  componentWillUnmount () {\n    if (this.timeout) clearTimeout(this.timeout);\n  }\n\n  render () {\n    const { children } = this.props;\n    const { copied } = this.state;\n\n    return (\n      <Button onClick={this.handleClick} className={copied ? 'copied' : 'copyable'}>{copied ? <FormattedMessage id='copypaste.copied' defaultMessage='Copied' /> : children}</Button>\n    );\n  }\n\n}\n\nclass BundleColumnError extends PureComponent {\n\n  static propTypes = {\n    errorType: PropTypes.oneOf(['routing', 'network', 'error']),\n    onRetry: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n    stacktrace: PropTypes.string,\n  };\n\n  static defaultProps = {\n    errorType: 'routing',\n  };\n\n  handleRetry = () => {\n    const { onRetry } = this.props;\n\n    if (onRetry) {\n      onRetry();\n    }\n  };\n\n  render () {\n    const { errorType, multiColumn, stacktrace } = this.props;\n\n    let title, body;\n\n    switch(errorType) {\n    case 'routing':\n      title = <FormattedMessage id='bundle_column_error.routing.title' defaultMessage='404' />;\n      body = <FormattedMessage id='bundle_column_error.routing.body' defaultMessage='The requested page could not be found. Are you sure the URL in the address bar is correct?' />;\n      break;\n    case 'network':\n      title = <FormattedMessage id='bundle_column_error.network.title' defaultMessage='Network error' />;\n      body = <FormattedMessage id='bundle_column_error.network.body' defaultMessage='There was an error when trying to load this page. This could be due to a temporary problem with your internet connection or this server.' />;\n      break;\n    case 'error':\n      title = <FormattedMessage id='bundle_column_error.error.title' defaultMessage='Oh, no!' />;\n      body = <FormattedMessage id='bundle_column_error.error.body' defaultMessage='The requested page could not be rendered. It could be due to a bug in our code, or a browser compatibility issue.' />;\n      break;\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn}>\n        <div className='error-column'>\n          <GIF src='/oops.gif' staticSrc='/oops.png' className='error-column__image' />\n\n          <div className='error-column__message'>\n            <h1>{title}</h1>\n            <p>{body}</p>\n\n            <div className='error-column__message__actions'>\n              {errorType === 'network' && <Button onClick={this.handleRetry}><FormattedMessage id='bundle_column_error.retry' defaultMessage='Try again' /></Button>}\n              {errorType === 'error' && <CopyButton value={stacktrace}><FormattedMessage id='bundle_column_error.copy_stacktrace' defaultMessage='Copy error report' /></CopyButton>}\n              <Link to='/' className={classNames('button', { 'button-tertiary': errorType !== 'routing' })}><FormattedMessage id='bundle_column_error.return' defaultMessage='Go back home' /></Link>\n            </div>\n          </div>\n        </div>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default injectIntl(BundleColumnError);\n"],"names":["CopyButton","PureComponent","state","copied","handleClick","value","props","navigator","clipboard","writeText","setState","timeout","setTimeout","componentWillUnmount","clearTimeout","render","children","jsxDEV","Button","FormattedMessage","BundleColumnError","handleRetry","onRetry","errorType","multiColumn","stacktrace","title","body","Column","GIF","Link","classNames","Helmet","__publicField","defaultProps","BundleColumnError$1","injectIntl"],"mappings":"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"}