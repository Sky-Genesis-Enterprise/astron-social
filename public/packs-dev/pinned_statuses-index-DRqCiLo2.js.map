{"version":3,"file":"pinned_statuses-index-DRqCiLo2.js","sources":["../../app/javascript/mastodon/features/pinned_statuses/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport PushPinIcon from '@/material-icons/400-24px/push_pin.svg?react';\nimport { getStatusList } from 'mastodon/selectors';\n\nimport { fetchPinnedStatuses } from '../../actions/pin_statuses';\nimport StatusList from '../../components/status_list';\nimport Column from '../ui/components/column';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned post' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: getStatusList(state, 'pins'),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\nclass PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  render () {\n    const { intl, statusIds, hasMore, multiColumn } = this.props;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='thumb-tack' iconComponent={PushPinIcon} heading={intl.formatMessage(messages.heading)} ref={this.setRef} alwaysShowBackButton>\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n          bindToDocument={!multiColumn}\n        />\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(PinnedStatuses));\n"],"names":["messages","defineMessages","heading","id","defaultMessage","mapStateToProps","state","statusIds","getStatusList","hasMore","getIn","PinnedStatuses","ImmutablePureComponent","handleHeaderClick","column","scrollTop","setRef","c","UNSAFE_componentWillMount","props","dispatch","fetchPinnedStatuses","render","intl","multiColumn","Column","PushPinIcon","formatMessage","jsxDEV","StatusList","Helmet","__publicField","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","bool","index","connect","injectIntl"],"mappings":"g5DAiBA,MAAMA,EAAWC,EAAe,CAC9BC,QAAS,CAAEC,iBAAmBC,6BAChC,CAAC,EAEKC,EAAkBC,IAAU,CAChCC,UAAWC,EAAcF,EAAO,MAAM,EACtCG,QAAS,CAAC,CAACH,EAAMI,MAAM,CAAC,eAAgB,OAAQ,MAAM,CAAC,CACzD,GAEA,MAAMC,UAAuBC,CAAuB,CAApD,kCAcEC,EAAAA,yBAAoBA,IAAM,CACxB,KAAKC,OAAOC,UAAAA,CAAU,GAGxBC,EAAAA,cAASC,GAAK,CACZ,KAAKH,OAASG,CAAAA,GAThBC,2BAA6B,CAC3B,KAAKC,MAAMC,SAASC,GAAqB,CAAA,CAW3CC,QAAU,CACR,KAAM,CAAEC,KAAAA,EAAMhB,UAAAA,EAAWE,QAAAA,EAASe,YAAAA,CAAAA,EAAgB,KAAKL,MAEvD,gBACGM,EAAA,CAAO,eAAgB,CAACD,EAAa,KAAK,aAAa,cAAeE,EAAa,QAASH,EAAKI,cAAc3B,EAASE,OAAO,EAAG,IAAK,KAAKc,OAAQ,qBAAoB,GACvK,SAAA,CAAAY,EAAAA,OAACC,EAAA,CACC,UAAAtB,EACA,UAAU,kBACV,QAAAE,EACA,eAAgB,CAACe,CAAAA,EAJnB,OAAA,GAAA,CAAA,SAAA,oGAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAAA,WAMCM,EAAA,CACC,SAAAF,EAAAA,OAAC,QAAK,KAAK,SAAS,QAAQ,WAA5B,OAAA,GAAA,CAAA,SAAA,oGAAA,WAAA,GAAA,aAAA,EAAA,EAAA,IAAqC,CAAA,EADvC,OAAA,GAAA,CAAA,SAAA,oGAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAEA,CAAA,CAAA,EATF,OAAA,GAAA,CAAA,SAAA,oGAAA,WAAA,GAAA,aAAA,CAAA,EAAA,IAUA,CAAA,CAIN,CAtCEG,EAFIpB,EAEGqB,YAAY,CACjBZ,SAAUa,EAAUC,KAAKC,WACzB5B,UAAW6B,EAAmBC,KAAKF,WACnCZ,KAAMU,EAAUK,OAAOH,WACvB1B,QAASwB,EAAUM,KAAKJ,WACxBX,YAAaS,EAAUM,IAAAA,GAmC3B,MAAAC,GAAeC,EAAQpC,CAAe,EAAEqC,EAAW/B,CAAc,CAAC"}