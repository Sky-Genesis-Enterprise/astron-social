{"version":3,"file":"column_header-CtuyYpNB.js","sources":["../../app/javascript/mastodon/features/ui/util/columns_context.tsx","../../app/javascript/material-icons/400-24px/arrow_back.svg?react","../../app/javascript/material-icons/400-24px/unfold_less.svg?react","../../app/javascript/material-icons/400-24px/unfold_more.svg?react","../../app/javascript/mastodon/components/column_header.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\nimport { createContext, useContext, useMemo, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport const ColumnsContext = createContext<{\n  tabsBarElement: HTMLElement | null;\n  setTabsBarElement: (element: HTMLElement) => void;\n  multiColumn: boolean;\n}>({\n  tabsBarElement: null,\n  multiColumn: false,\n  setTabsBarElement: () => undefined, // no-op\n});\n\nexport function useColumnsContext() {\n  return useContext(ColumnsContext);\n}\n\nexport const ButtonInTabsBar: React.FC<{\n  children: ReactElement | string | undefined;\n}> = ({ children }) => {\n  const { multiColumn, tabsBarElement } = useColumnsContext();\n\n  if (multiColumn) {\n    return children;\n  } else if (!tabsBarElement) {\n    return children;\n  } else {\n    return createPortal(children, tabsBarElement);\n  }\n};\n\ntype ContextValue = React.ContextType<typeof ColumnsContext>;\n\nexport const ColumnsContextProvider: React.FC<\n  React.PropsWithChildren<{ multiColumn: boolean }>\n> = ({ multiColumn, children }) => {\n  const [tabsBarElement, setTabsBarElement] =\n    useState<ContextValue['tabsBarElement']>(null);\n\n  const contextValue = useMemo<ContextValue>(\n    () => ({ multiColumn, tabsBarElement, setTabsBarElement }),\n    [multiColumn, tabsBarElement],\n  );\n\n  return (\n    <ColumnsContext.Provider value={contextValue}>\n      {children}\n    </ColumnsContext.Provider>\n  );\n};\n","import * as React from \"react\";\nconst SvgArrowBack = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m313-440 224 224-57 56-320-320 320-320 57 56-224 224h487v80H313Z\" }));\nexport default SvgArrowBack;\n","import * as React from \"react\";\nconst SvgUnfoldLess = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"m356-160-56-56 180-180 180 180-56 56-124-124-124 124Zm124-404L300-744l56-56 124 124 124-124 56 56-180 180Z\" }));\nexport default SvgUnfoldLess;\n","import * as React from \"react\";\nconst SvgUnfoldMore = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M480-120 300-300l58-58 122 122 122-122 58 58-180 180ZM358-598l-58-58 180-180 180 180-58 58-122-122-122 122Z\" }));\nexport default SvgUnfoldMore;\n","import { useCallback, useState } from 'react';\n\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport AddIcon from '@/material-icons/400-24px/add.svg?react';\nimport ArrowBackIcon from '@/material-icons/400-24px/arrow_back.svg?react';\nimport ChevronLeftIcon from '@/material-icons/400-24px/chevron_left.svg?react';\nimport ChevronRightIcon from '@/material-icons/400-24px/chevron_right.svg?react';\nimport CloseIcon from '@/material-icons/400-24px/close.svg?react';\nimport UnfoldLessIcon from '@/material-icons/400-24px/unfold_less.svg?react';\nimport UnfoldMoreIcon from '@/material-icons/400-24px/unfold_more.svg?react';\nimport type { IconProp } from 'mastodon/components/icon';\nimport { Icon } from 'mastodon/components/icon';\nimport { ButtonInTabsBar } from 'mastodon/features/ui/util/columns_context';\nimport { useIdentity } from 'mastodon/identity_context';\n\nimport { useAppHistory } from './router';\n\nconst messages = defineMessages({\n  show: { id: 'column_header.show_settings', defaultMessage: 'Show settings' },\n  hide: { id: 'column_header.hide_settings', defaultMessage: 'Hide settings' },\n  moveLeft: {\n    id: 'column_header.moveLeft_settings',\n    defaultMessage: 'Move column to the left',\n  },\n  moveRight: {\n    id: 'column_header.moveRight_settings',\n    defaultMessage: 'Move column to the right',\n  },\n  back: { id: 'column_back_button.label', defaultMessage: 'Back' },\n});\n\nconst BackButton: React.FC<{\n  onlyIcon: boolean;\n}> = ({ onlyIcon }) => {\n  const history = useAppHistory();\n  const intl = useIntl();\n\n  const handleBackClick = useCallback(() => {\n    if (history.location.state?.fromMastodon) {\n      history.goBack();\n    } else {\n      history.push('/');\n    }\n  }, [history]);\n\n  return (\n    <button\n      onClick={handleBackClick}\n      className={classNames('column-header__back-button', {\n        compact: onlyIcon,\n      })}\n      aria-label={intl.formatMessage(messages.back)}\n    >\n      <Icon\n        id='chevron-left'\n        icon={ArrowBackIcon}\n        className='column-back-button__icon'\n      />\n      {!onlyIcon && (\n        <FormattedMessage id='column_back_button.label' defaultMessage='Back' />\n      )}\n    </button>\n  );\n};\n\nexport interface Props {\n  title?: string;\n  icon?: string;\n  iconComponent?: IconProp;\n  active?: boolean;\n  children?: React.ReactNode;\n  pinned?: boolean;\n  multiColumn?: boolean;\n  extraButton?: React.ReactNode;\n  showBackButton?: boolean;\n  placeholder?: boolean;\n  appendContent?: React.ReactNode;\n  collapseIssues?: boolean;\n  onClick?: () => void;\n  onMove?: (arg0: number) => void;\n  onPin?: () => void;\n}\n\nexport const ColumnHeader: React.FC<Props> = ({\n  title,\n  icon,\n  iconComponent,\n  active,\n  children,\n  pinned,\n  multiColumn,\n  extraButton,\n  showBackButton,\n  placeholder,\n  appendContent,\n  collapseIssues,\n  onClick,\n  onMove,\n  onPin,\n}) => {\n  const intl = useIntl();\n  const { signedIn } = useIdentity();\n  const history = useAppHistory();\n  const [collapsed, setCollapsed] = useState(true);\n  const [animating, setAnimating] = useState(false);\n\n  const handleToggleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      setCollapsed((value) => !value);\n      setAnimating(true);\n    },\n    [setCollapsed, setAnimating],\n  );\n\n  const handleTitleClick = useCallback(() => {\n    onClick?.();\n  }, [onClick]);\n\n  const handleMoveLeft = useCallback(() => {\n    onMove?.(-1);\n  }, [onMove]);\n\n  const handleMoveRight = useCallback(() => {\n    onMove?.(1);\n  }, [onMove]);\n\n  const handleTransitionEnd = useCallback(() => {\n    setAnimating(false);\n  }, [setAnimating]);\n\n  const handlePin = useCallback(() => {\n    if (!pinned) {\n      history.replace('/');\n    }\n\n    onPin?.();\n  }, [history, pinned, onPin]);\n\n  const wrapperClassName = classNames('column-header__wrapper', {\n    active,\n  });\n\n  const buttonClassName = classNames('column-header', {\n    active,\n  });\n\n  const collapsibleClassName = classNames('column-header__collapsible', {\n    collapsed,\n    animating,\n  });\n\n  const collapsibleButtonClassName = classNames('column-header__button', {\n    active: !collapsed,\n  });\n\n  let extraContent, pinButton, moveButtons, backButton, collapseButton;\n\n  if (children) {\n    extraContent = (\n      <div key='extra-content' className='column-header__collapsible__extra'>\n        {children}\n      </div>\n    );\n  }\n\n  if (multiColumn && pinned) {\n    pinButton = (\n      <button\n        className='text-btn column-header__setting-btn'\n        onClick={handlePin}\n      >\n        <Icon id='times' icon={CloseIcon} />{' '}\n        <FormattedMessage id='column_header.unpin' defaultMessage='Unpin' />\n      </button>\n    );\n\n    moveButtons = (\n      <div className='column-header__setting-arrows'>\n        <button\n          title={intl.formatMessage(messages.moveLeft)}\n          aria-label={intl.formatMessage(messages.moveLeft)}\n          className='icon-button column-header__setting-btn'\n          onClick={handleMoveLeft}\n        >\n          <Icon id='chevron-left' icon={ChevronLeftIcon} />\n        </button>\n        <button\n          title={intl.formatMessage(messages.moveRight)}\n          aria-label={intl.formatMessage(messages.moveRight)}\n          className='icon-button column-header__setting-btn'\n          onClick={handleMoveRight}\n        >\n          <Icon id='chevron-right' icon={ChevronRightIcon} />\n        </button>\n      </div>\n    );\n  } else if (multiColumn && onPin) {\n    pinButton = (\n      <button\n        className='text-btn column-header__setting-btn'\n        onClick={handlePin}\n      >\n        <Icon id='plus' icon={AddIcon} />{' '}\n        <FormattedMessage id='column_header.pin' defaultMessage='Pin' />\n      </button>\n    );\n  }\n\n  if (\n    !pinned &&\n    ((multiColumn && history.location.state?.fromMastodon) || showBackButton)\n  ) {\n    backButton = <BackButton onlyIcon={!!title} />;\n  }\n\n  const collapsedContent = [extraContent];\n\n  if (multiColumn) {\n    collapsedContent.push(\n      <div key='buttons' className='column-header__advanced-buttons'>\n        {pinButton}\n        {moveButtons}\n      </div>,\n    );\n  }\n\n  if (signedIn && (children || (multiColumn && onPin))) {\n    collapseButton = (\n      <button\n        className={collapsibleButtonClassName}\n        title={intl.formatMessage(collapsed ? messages.show : messages.hide)}\n        aria-label={intl.formatMessage(\n          collapsed ? messages.show : messages.hide,\n        )}\n        onClick={handleToggleClick}\n      >\n        <i className='icon-with-badge'>\n          <Icon\n            id='sliders'\n            icon={collapsed ? UnfoldMoreIcon : UnfoldLessIcon}\n          />\n          {collapseIssues && <i className='icon-with-badge__issue-badge' />}\n        </i>\n      </button>\n    );\n  }\n\n  const hasIcon = icon && iconComponent;\n  const hasTitle = hasIcon && title;\n\n  const component = (\n    <div className={wrapperClassName}>\n      <h1 className={buttonClassName}>\n        {hasTitle && (\n          <>\n            {backButton}\n\n            <button onClick={handleTitleClick} className='column-header__title'>\n              {!backButton && (\n                <Icon\n                  id={icon}\n                  icon={iconComponent}\n                  className='column-header__icon'\n                />\n              )}\n              {title}\n            </button>\n          </>\n        )}\n\n        {!hasTitle && backButton}\n\n        <div className='column-header__buttons'>\n          {extraButton}\n          {collapseButton}\n        </div>\n      </h1>\n\n      <div\n        className={collapsibleClassName}\n        tabIndex={collapsed ? -1 : undefined}\n        onTransitionEnd={handleTransitionEnd}\n      >\n        <div className='column-header__collapsible-inner'>\n          {(!collapsed || animating) && collapsedContent}\n        </div>\n      </div>\n\n      {appendContent}\n    </div>\n  );\n\n  if (placeholder) {\n    return component;\n  } else {\n    return <ButtonInTabsBar>{component}</ButtonInTabsBar>;\n  }\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default ColumnHeader;\n"],"names":["ColumnsContext","createContext","tabsBarElement","multiColumn","setTabsBarElement","useColumnsContext","useContext","ButtonInTabsBar","children","createPortal","ColumnsContextProvider","useState","contextValue","useMemo","this","SvgArrowBack","props","React.createElement","SvgUnfoldLess","SvgUnfoldMore","messages","defineMessages","show","id","defaultMessage","hide","moveLeft","moveRight","back","BackButton","onlyIcon","history","useAppHistory","intl","useIntl","handleBackClick","useCallback","location","state","fromMastodon","goBack","push","jsxDEV","classNames","compact","formatMessage","Icon","ArrowBackIcon","FormattedMessage","ColumnHeader","title","icon","iconComponent","active","pinned","extraButton","showBackButton","placeholder","appendContent","collapseIssues","onClick","onMove","onPin","signedIn","useIdentity","collapsed","setCollapsed","animating","setAnimating","handleToggleClick","e","stopPropagation","value","handleTitleClick","handleMoveLeft","handleMoveRight","handleTransitionEnd","handlePin","replace","wrapperClassName","buttonClassName","collapsibleClassName","collapsibleButtonClassName","extraContent","pinButton","moveButtons","backButton","collapseButton","CloseIcon","ChevronLeftIcon","ChevronRightIcon","AddIcon","collapsedContent","UnfoldMoreIcon","UnfoldLessIcon","hasTitle","component","Fragment","undefined"],"mappings":"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"}