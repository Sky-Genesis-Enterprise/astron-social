{"version":3,"file":"index-Ds3K_5LX.js","sources":["../../app/javascript/mastodon/selectors/index.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nimport { List as ImmutableList, Map as ImmutableMap } from 'immutable';\n\nimport { me } from '../initial_state';\n\nimport { getFilters } from './filters';\n\nexport { makeGetAccount } from \"./accounts\";\nexport { getStatusList } from \"./statuses\";\n\nexport const makeGetStatus = () => {\n  return createSelector(\n    [\n      (state, { id }) => state.getIn(['statuses', id]),\n      (state, { id }) => state.getIn(['statuses', state.getIn(['statuses', id, 'reblog'])]),\n      (state, { id }) => state.getIn(['accounts', state.getIn(['statuses', id, 'account'])]),\n      (state, { id }) => state.getIn(['accounts', state.getIn(['statuses', state.getIn(['statuses', id, 'reblog']), 'account'])]),\n      getFilters,\n      (_, { contextType }) => ['detailed', 'bookmarks', 'favourites'].includes(contextType),\n    ],\n\n    (statusBase, statusReblog, accountBase, accountReblog, filters, warnInsteadOfHide) => {\n      if (!statusBase || statusBase.get('isLoading')) {\n        return null;\n      }\n\n      if (statusReblog) {\n        statusReblog = statusReblog.set('account', accountReblog);\n      } else {\n        statusReblog = null;\n      }\n\n      let filtered = false;\n      let mediaFiltered = false;\n      if ((accountReblog || accountBase).get('id') !== me && filters) {\n        let filterResults = statusReblog?.get('filtered') || statusBase.get('filtered') || ImmutableList();\n        if (!warnInsteadOfHide && filterResults.some((result) => filters.getIn([result.get('filter'), 'filter_action']) === 'hide')) {\n          return null;\n        }\n\n        let mediaFilters = filterResults.filter(result => filters.getIn([result.get('filter'), 'filter_action']) === 'blur');\n        if (!mediaFilters.isEmpty()) {\n          mediaFiltered = mediaFilters.map(result => filters.getIn([result.get('filter'), 'title']));\n        }\n\n        filterResults = filterResults.filter(result => filters.has(result.get('filter')) && filters.getIn([result.get('filter'), 'filter_action']) !== 'blur');\n        if (!filterResults.isEmpty()) {\n          filtered = filterResults.map(result => filters.getIn([result.get('filter'), 'title']));\n        }\n      }\n\n      return statusBase.withMutations(map => {\n        map.set('reblog', statusReblog);\n        map.set('account', accountBase);\n        map.set('matched_filters', filtered);\n        map.set('matched_media_filters', mediaFiltered);\n      });\n    },\n  );\n};\n\nexport const makeGetPictureInPicture = () => {\n  return createSelector([\n    (state, { id }) => state.picture_in_picture.statusId === id,\n    (state) => state.getIn(['meta', 'layout']) !== 'mobile',\n  ], (inUse, available) => ImmutableMap({\n    inUse: inUse && available,\n    available,\n  }));\n};\n\nexport const makeGetNotification = () => createSelector([\n  (_, base)             => base,\n  (state, _, accountId) => state.getIn(['accounts', accountId]),\n], (base, account) => base.set('account', account));\n\nexport const makeGetReport = () => createSelector([\n  (_, base) => base,\n  (state, _, targetAccountId) => state.getIn(['accounts', targetAccountId]),\n], (base, targetAccount) => base.set('target_account', targetAccount));\n"],"names":["makeGetStatus","createSelector","state","id","getIn","getFilters","_","contextType","includes","statusBase","statusReblog","accountBase","accountReblog","filters","warnInsteadOfHide","get","set","filtered","mediaFiltered","me","filterResults","ImmutableList","some","result","mediaFilters","filter","isEmpty","map","has","withMutations","makeGetPictureInPicture","picture_in_picture","statusId","inUse","available","ImmutableMap","makeGetNotification","base","accountId","account","makeGetReport","targetAccountId","targetAccount"],"mappings":"yKAUO,MAAMA,EAAgBA,IACpBC,EACL,CACE,CAACC,EAAO,CAAEC,GAAAA,CAAG,IAAMD,EAAME,MAAM,CAAC,WAAYD,CAAE,CAAC,EAC/C,CAACD,EAAO,CAAEC,GAAAA,KAASD,EAAME,MAAM,CAAC,WAAYF,EAAME,MAAM,CAAC,WAAYD,EAAI,QAAQ,CAAC,CAAC,CAAC,EACpF,CAACD,EAAO,CAAEC,GAAAA,KAASD,EAAME,MAAM,CAAC,WAAYF,EAAME,MAAM,CAAC,WAAYD,EAAI,SAAS,CAAC,CAAC,CAAC,EACrF,CAACD,EAAO,CAAEC,GAAAA,CAAG,IAAMD,EAAME,MAAM,CAAC,WAAYF,EAAME,MAAM,CAAC,WAAYF,EAAME,MAAM,CAAC,WAAYD,EAAI,QAAQ,CAAC,EAAG,SAAS,CAAC,CAAC,CAAC,EAC1HE,EACA,CAACC,EAAG,CAAEC,YAAAA,KAAkB,CAAC,WAAY,YAAa,YAAY,EAAEC,SAASD,CAAW,CAAC,EAGvF,CAACE,EAAYC,EAAcC,EAAaC,EAAeC,EAASC,IAAsB,CACpF,GAAI,CAACL,GAAcA,EAAWM,IAAI,WAAW,EAC3C,OAAO,KAGLL,EACFA,EAAeA,EAAaM,IAAI,UAAWJ,CAAa,EAExDF,EAAe,KAGjB,IAAIO,EAAW,GACXC,EAAgB,GACpB,IAAKN,GAAiBD,GAAaI,IAAI,IAAI,IAAMI,GAAMN,EAAS,CAC9D,IAAIO,GAAgBV,GAAAA,YAAAA,EAAcK,IAAI,cAAeN,EAAWM,IAAI,UAAU,GAAKM,EAAa,EAChG,GAAI,CAACP,GAAqBM,EAAcE,KAAMC,GAAWV,EAAQT,MAAM,CAACmB,EAAOR,IAAI,QAAQ,EAAG,eAAe,CAAC,IAAM,MAAM,EACxH,OAAO,KAGT,IAAIS,EAAeJ,EAAcK,OAAOF,GAAUV,EAAQT,MAAM,CAACmB,EAAOR,IAAI,QAAQ,EAAG,eAAe,CAAC,IAAM,MAAM,EAC9GS,EAAaE,YAChBR,EAAgBM,EAAaG,IAAIJ,GAAUV,EAAQT,MAAM,CAACmB,EAAOR,IAAI,QAAQ,EAAG,OAAO,CAAC,CAAC,GAG3FK,EAAgBA,EAAcK,OAAOF,GAAUV,EAAQe,IAAIL,EAAOR,IAAI,QAAQ,CAAC,GAAKF,EAAQT,MAAM,CAACmB,EAAOR,IAAI,QAAQ,EAAG,eAAe,CAAC,IAAM,MAAM,EAChJK,EAAcM,YACjBT,EAAWG,EAAcO,IAAIJ,GAAUV,EAAQT,MAAM,CAACmB,EAAOR,IAAI,QAAQ,EAAG,OAAO,CAAC,CAAC,EAEzF,CAEA,OAAON,EAAWoB,cAAcF,GAAO,CACrCA,EAAIX,IAAI,SAAUN,CAAY,EAC9BiB,EAAIX,IAAI,UAAWL,CAAW,EAC9BgB,EAAIX,IAAI,kBAAmBC,CAAQ,EACnCU,EAAIX,IAAI,wBAAyBE,CAAa,CAChD,CAAC,CACH,CACF,EAGWY,EAA0BA,IAC9B7B,EAAe,CACpB,CAACC,EAAO,CAAEC,GAAAA,CAAG,IAAMD,EAAM6B,mBAAmBC,WAAa7B,EACxDD,GAAUA,EAAME,MAAM,CAAC,OAAQ,QAAQ,CAAC,IAAM,QAAQ,EACtD,CAAC6B,EAAOC,IAAcC,EAAa,CACpCF,MAAOA,GAASC,EAChBA,UAAAA,CACF,CAAC,CAAC,EAGSE,EAAsBA,IAAMnC,EAAe,CACtD,CAACK,EAAG+B,IAAqBA,EACzB,CAACnC,EAAOI,EAAGgC,IAAcpC,EAAME,MAAM,CAAC,WAAYkC,CAAS,CAAC,CAAC,EAC5D,CAACD,EAAME,IAAYF,EAAKrB,IAAI,UAAWuB,CAAO,CAAC,EAErCC,EAAgBA,IAAMvC,EAAe,CAChD,CAACK,EAAG+B,IAASA,EACb,CAACnC,EAAOI,EAAGmC,IAAoBvC,EAAME,MAAM,CAAC,WAAYqC,CAAe,CAAC,CAAC,EACxE,CAACJ,EAAMK,IAAkBL,EAAKrB,IAAI,iBAAkB0B,CAAa,CAAC"}