{"version":3,"file":"ReportReasonSelector-CZuC4498.js","sources":["../../app/javascript/mastodon/components/admin/ReportReasonSelector.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport api from 'mastodon/api';\n\nconst messages = defineMessages({\n  legal: { id: 'report.categories.legal', defaultMessage: 'Legal' },\n  other: { id: 'report.categories.other', defaultMessage: 'Other' },\n  spam: { id: 'report.categories.spam', defaultMessage: 'Spam' },\n  violation: { id: 'report.categories.violation', defaultMessage: 'Content violates one or more server rules' },\n});\n\nclass Category extends PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onSelect: PropTypes.func,\n    children: PropTypes.node,\n  };\n\n  handleClick = () => {\n    const { id, disabled, onSelect } = this.props;\n\n    if (!disabled) {\n      onSelect(id);\n    }\n  };\n\n  render () {\n    const { id, text, disabled, selected, children } = this.props;\n\n    return (\n      <div tabIndex={0} role='button' className={classNames('report-reason-selector__category', { selected, disabled })} onClick={this.handleClick}>\n        {selected && <input type='hidden' name='report[category]' value={id} />}\n\n        <div className='report-reason-selector__category__label'>\n          <span className={classNames('poll__input', { active: selected, disabled })} />\n          {text}\n        </div>\n\n        {(selected && children) && (\n          <div className='report-reason-selector__category__rules'>\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n\nclass Rule extends PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onToggle: PropTypes.func,\n  };\n\n  handleClick = () => {\n    const { id, disabled, onToggle } = this.props;\n\n    if (!disabled) {\n      onToggle(id);\n    }\n  };\n\n  render () {\n    const { id, text, disabled, selected } = this.props;\n\n    return (\n      <div tabIndex={0} role='button' className={classNames('report-reason-selector__rule', { selected, disabled })} onClick={this.handleClick}>\n        <span className={classNames('poll__input', { checkbox: true, active: selected, disabled })} />\n        {selected && <input type='hidden' name='report[rule_ids][]' value={id} />}\n        {text}\n      </div>\n    );\n  }\n\n}\n\nclass ReportReasonSelector extends PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    rule_ids: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    category: this.props.category,\n    rule_ids: this.props.rule_ids || [],\n    rules: [],\n  };\n\n  componentDidMount() {\n    api(false).get('/api/v2/instance').then(res => {\n      this.setState({\n        rules: res.data.rules,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  _save = () => {\n    const { id, disabled } = this.props;\n    const { category, rule_ids } = this.state;\n\n    if (disabled) {\n      return;\n    }\n\n    api(false).put(`/api/v1/admin/reports/${id}`, {\n      category,\n      rule_ids: category === 'violation' ? rule_ids : [],\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  handleSelect = id => {\n    this.setState({ category: id }, () => this._save());\n  };\n\n  handleToggle = id => {\n    const { rule_ids } = this.state;\n\n    if (rule_ids.includes(id)) {\n      this.setState({ rule_ids: rule_ids.filter(x => x !== id ) }, () => this._save());\n    } else {\n      this.setState({ rule_ids: [...rule_ids, id] }, () => this._save());\n    }\n  };\n\n  render () {\n    const { disabled, intl } = this.props;\n    const { rules, category, rule_ids } = this.state;\n\n    return (\n      <div className='report-reason-selector'>\n        <Category id='other' text={intl.formatMessage(messages.other)} selected={category === 'other'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='legal' text={intl.formatMessage(messages.legal)} selected={category === 'legal'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='spam' text={intl.formatMessage(messages.spam)} selected={category === 'spam'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='violation' text={intl.formatMessage(messages.violation)} selected={category === 'violation'} onSelect={this.handleSelect} disabled={disabled || rules.length === 0}>\n          {rules.map(rule => <Rule key={rule.id} id={rule.id} text={rule.text} selected={rule_ids.includes(rule.id)} onToggle={this.handleToggle} disabled={disabled} />)}\n        </Category>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(ReportReasonSelector);\n"],"names":["messages","defineMessages","legal","id","defaultMessage","other","spam","violation","Category","PureComponent","handleClick","disabled","onSelect","props","render","text","selected","children","classNames","jsxDEV","active","Rule","onToggle","checkbox","ReportReasonSelector","state","category","rule_ids","rules","_save","api","put","catch","err","console","error","handleSelect","setState","handleToggle","includes","filter","x","componentDidMount","get","then","res","data","intl","formatMessage","length","map","rule","ReportReasonSelector$1","injectIntl"],"mappings":"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"}