{"version":3,"file":"favourites-index-0mOlABAA.js","sources":["../../app/javascript/mastodon/features/favourites/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport RefreshIcon from '@/material-icons/400-24px/refresh.svg?react';\nimport { fetchFavourites, expandFavourites } from 'mastodon/actions/interactions';\nimport { Account } from 'mastodon/components/account';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollableList from 'mastodon/components/scrollable_list';\nimport Column from 'mastodon/features/ui/components/column';\n\nconst messages = defineMessages({\n  refresh: { id: 'refresh', defaultMessage: 'Refresh' },\n});\n\nconst mapStateToProps = (state, props) => ({\n  accountIds: state.getIn(['user_lists', 'favourited_by', props.params.statusId, 'items']),\n  hasMore: !!state.getIn(['user_lists', 'favourited_by', props.params.statusId, 'next']),\n  isLoading: state.getIn(['user_lists', 'favourited_by', props.params.statusId, 'isLoading'], true),\n});\n\nclass Favourites extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  UNSAFE_componentWillMount () {\n    if (!this.props.accountIds) {\n      this.props.dispatch(fetchFavourites(this.props.params.statusId));\n    }\n  }\n\n  handleRefresh = () => {\n    this.props.dispatch(fetchFavourites(this.props.params.statusId));\n  };\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFavourites(this.props.params.statusId));\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, accountIds, hasMore, isLoading, multiColumn } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.favourites' defaultMessage='No one has favorited this post yet. When someone does, they will show up here.' />;\n\n    return (\n      <Column bindToDocument={!multiColumn}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(messages.refresh)} aria-label={intl.formatMessage(messages.refresh)} onClick={this.handleRefresh}><Icon id='refresh' icon={RefreshIcon} /></button>\n          )}\n        />\n\n        <ScrollableList\n          scrollKey='favourites'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {accountIds.map(id =>\n            <Account key={id} id={id} />,\n          )}\n        </ScrollableList>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Favourites));\n"],"names":["messages","defineMessages","refresh","id","defaultMessage","mapStateToProps","state","props","accountIds","getIn","params","statusId","hasMore","isLoading","Favourites","ImmutablePureComponent","handleRefresh","dispatch","fetchFavourites","handleLoadMore","debounce","expandFavourites","leading","UNSAFE_componentWillMount","render","intl","multiColumn","jsxDEV","Column","LoadingIndicator","emptyMessage","FormattedMessage","ColumnHeader","formatMessage","Icon","RefreshIcon","ScrollableList","map","Account","Helmet","__publicField","propTypes","PropTypes","object","isRequired","func","ImmutablePropTypes","list","bool","index","connect","injectIntl"],"mappings":"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"}