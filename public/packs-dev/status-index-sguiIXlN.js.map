{"version":3,"file":"status-index-sguiIXlN.js","sources":["../../app/javascript/material-icons/400-24px/visibility.svg?react","../../app/javascript/mastodon/selectors/contexts.ts","../../app/javascript/mastodon/features/status/components/action_bar.jsx","../../app/javascript/mastodon/features/status/index.jsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgVisibility = (props) => /* @__PURE__ */ React.createElement(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", height: 24, viewBox: \"0 -960 960 960\", width: 24, ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z\" }));\nexport default SvgVisibility;\n","import { createAppSelector } from 'mastodon/store';\n\nexport const getAncestorsIds = createAppSelector(\n  [(_, id: string) => id, (state) => state.contexts.inReplyTos],\n  (statusId, inReplyTos) => {\n    const ancestorsIds: string[] = [];\n\n    let currentId: string | undefined = statusId;\n\n    while (currentId && !ancestorsIds.includes(currentId)) {\n      ancestorsIds.unshift(currentId);\n      currentId = inReplyTos[currentId];\n    }\n\n    return ancestorsIds;\n  },\n);\n\nexport const getDescendantsIds = createAppSelector(\n  [\n    (_, id: string) => id,\n    (state) => state.contexts.replies,\n    (state) => state.statuses,\n  ],\n  (statusId, contextReplies, statuses) => {\n    const descendantsIds: string[] = [];\n\n    const visitIds = [statusId];\n\n    while (visitIds.length > 0) {\n      const id = visitIds.pop();\n\n      if (!id) {\n        break;\n      }\n\n      const replies = contextReplies[id];\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.toReversed().forEach((replyId) => {\n          if (\n            !visitIds.includes(replyId) &&\n            !descendantsIds.includes(replyId) &&\n            statusId !== replyId\n          ) {\n            visitIds.push(replyId);\n          }\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => {\n      const status = statuses.get(id);\n\n      if (!status) {\n        return false;\n      }\n\n      const inReplyToAccountId = status.get('in_reply_to_account_id') as\n        | string\n        | null;\n      const accountId = status.get('account') as string;\n\n      return inReplyToAccountId !== accountId;\n    });\n\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        const status = statuses.get(id);\n\n        if (!status) {\n          return;\n        }\n\n        const inReplyToAccountId = status.get('in_reply_to_account_id') as\n          | string\n          | null;\n        const accountId = status.get('account') as string;\n\n        if (idx > insertAt && inReplyToAccountId === accountId) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return descendantsIds;\n  },\n);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport BookmarkIcon from '@/material-icons/400-24px/bookmark-fill.svg?react';\nimport BookmarkBorderIcon from '@/material-icons/400-24px/bookmark.svg?react';\nimport MoreHorizIcon from '@/material-icons/400-24px/more_horiz.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport ReplyAllIcon from '@/material-icons/400-24px/reply_all.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star-fill.svg?react';\nimport StarBorderIcon from '@/material-icons/400-24px/star.svg?react';\nimport RepeatActiveIcon from '@/svg-icons/repeat_active.svg?react';\nimport RepeatDisabledIcon from '@/svg-icons/repeat_disabled.svg?react';\nimport RepeatPrivateIcon from '@/svg-icons/repeat_private.svg?react';\nimport RepeatPrivateActiveIcon from '@/svg-icons/repeat_private_active.svg?react';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'mastodon/permissions';\n\nimport { IconButton } from '../../../components/icon_button';\nimport { Dropdown } from 'mastodon/components/dropdown_menu';\nimport { me } from '../../../initial_state';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  removeFavourite: { id: 'status.remove_favourite', defaultMessage: 'Remove from favorites' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  removeBookmark: { id: 'status.remove_bookmark', defaultMessage: 'Remove bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Get embed code' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nclass ActionBar extends PureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.record,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'));\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'));\n  };\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  };\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  };\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account);\n  };\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, relationship, intl } = this.props;\n    const { signedIn, permissions } = this.props.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push(null);\n\n        if (relationship && relationship.get('muting')) {\n          menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick, dangerous: true });\n        }\n\n        if (relationship && relationship.get('blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick, dangerous: true });\n        }\n\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n\n        if (account.get('acct') !== account.get('username')) {\n          const domain = account.get('acct').split('@')[1];\n\n          menu.push(null);\n\n          if (relationship && relationship.get('domain_blocking')) {\n            menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n          } else {\n            menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain, dangerous: true });\n          }\n        }\n\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses/${status.get('id')}` });\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = account.get('acct').split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle, reblogIconComponent;\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n      reblogIconComponent = publicStatus ? RepeatActiveIcon : RepeatPrivateActiveIcon;\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n      reblogIconComponent = RepeatIcon;\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n      reblogIconComponent = RepeatPrivateIcon;\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n      reblogIconComponent = RepeatDisabledIcon;\n    }\n\n    const bookmarkTitle = intl.formatMessage(status.get('bookmarked') ? messages.removeBookmark : messages.bookmark);\n    const favouriteTitle = intl.formatMessage(status.get('favourited') ? messages.removeFavourite : messages.favourite);\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} iconComponent={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? ReplyIcon : replyIconComponent}  onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={favouriteTitle} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={bookmarkTitle} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <Dropdown icon='ellipsis-h' iconComponent={MoreHorizIcon} status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(withIdentity(injectIntl(ActionBar)));\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { HotKeys } from 'react-hotkeys';\n\nimport VisibilityIcon from '@/material-icons/400-24px/visibility.svg?react';\nimport VisibilityOffIcon from '@/material-icons/400-24px/visibility_off.svg?react';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport { TimelineHint } from 'mastodon/components/timeline_hint';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { identityContextPropShape, withIdentity } from 'mastodon/identity_context';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport { initBlockModal } from '../../actions/blocks';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  initDomainBlockModal,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport {\n  toggleFavourite,\n  bookmark,\n  unbookmark,\n  toggleReblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport { StatusQuoteManager } from '../../components/status_quoted';\nimport { deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport { getAncestorsIds, getDescendantsIds } from 'mastodon/selectors/contexts';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport { DetailedStatus } from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId, contextType: 'detailed' });\n\n    let ancestorsIds   = [];\n    let descendantsIds = [];\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, status.get('in_reply_to_id'));\n      descendantsIds = getDescendantsIds(state, status.get('id'));\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n  static propTypes = {\n    identity: identityContextPropShape,\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    ancestorsIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n    descendantsIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n\n    this._scrollStatusIntoView();\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleFavouriteClick = (status) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      dispatch(toggleFavourite(status.get('id')));\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({ modalType: 'CONFIRM_REPLY', modalProps: { status } }));\n      } else {\n        dispatch(replyCompose(status));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleReblogClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.props.identity;\n\n    if (signedIn) {\n      dispatch(toggleReblog(status.get('id'), e && e.shiftKey));\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, withRedraft = false) => {\n    const { dispatch } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), withRedraft));\n    } else {\n      dispatch(openModal({ modalType: 'CONFIRM_DELETE_STATUS', modalProps: { statusId: status.get('id'), withRedraft } }));\n    }\n  };\n\n  handleEditClick = (status) => {\n    const { dispatch, askReplyConfirmation } = this.props;\n\n    if (askReplyConfirmation) {\n      dispatch(openModal({ modalType: 'CONFIRM_EDIT_STATUS', modalProps: { statusId: status.get('id') } }));\n    } else {\n      dispatch(editStatus(status.get('id')));\n    }\n  };\n\n  handleDirectClick = (account) => {\n    this.props.dispatch(directCompose(account));\n  };\n\n  handleMentionClick = (account) => {\n    this.props.dispatch(mentionCompose(account));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds, descendantsIds);\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  };\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  };\n\n  handleBlockDomainClick = account => {\n    this.props.dispatch(initDomainBlockModal(account));\n  };\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  };\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleHotkeyTranslate = () => {\n    this.handleTranslate(this.props.status);\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.length - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.length + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.length + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.length + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusQuoteManager\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list[i - 1] : undefined}\n        nextId={list[i + 1] || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setContainerRef = c => {\n    this.node = c;\n  };\n\n  setStatusRef = c => {\n    this.statusNode = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      requestIdleCallback(() => {\n        this.statusNode?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.length > prevProps.ancestorsIds.length || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    if (this.statusNode) {\n      return [0, this.statusNode.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants, remoteHint;\n    const { isLoading, status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.length > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.length > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    if (!isLocal) {\n      remoteHint = (\n        <TimelineHint\n          className={classNames(!!descendants && 'timeline-hint--with-descendants')}\n          url={status.get('url')}\n          message={<FormattedMessage id='hints.threads.replies_may_be_missing' defaultMessage='Replies from other servers may be missing.' />}\n          label={<FormattedMessage id='hints.threads.see_more' defaultMessage='See more replies on {domain}' values={{ domain: <strong>{status.getIn(['account', 'acct']).split('@')[1]}</strong> }} />}\n        />\n      );\n    }\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n      onTranslate: this.handleHotkeyTranslate,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} icon={status.get('hidden') ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setContainerRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false)} ref={this.setStatusRef}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n            {remoteHint}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(withIdentity(Status))));\n"],"names":["SvgVisibility","props","React.createElement","getAncestorsIds","createAppSelector","_","id","state","contexts","inReplyTos","statusId","ancestorsIds","currentId","includes","unshift","getDescendantsIds","replies","statuses","contextReplies","descendantsIds","visitIds","length","pop","push","toReversed","forEach","replyId","insertAt","findIndex","status","get","inReplyToAccountId","accountId","idx","splice","messages","defineMessages","delete","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","removeFavourite","bookmark","removeBookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","blockDomain","unblockDomain","unmute","unblock","openOriginalPage","mapStateToProps","relationship","getIn","ActionBar","PureComponent","handleReplyClick","onReply","handleReblogClick","e","onReblog","handleFavouriteClick","onFavourite","handleBookmarkClick","onBookmark","handleDeleteClick","onDelete","handleRedraftClick","handleEditClick","onEdit","handleDirectClick","onDirect","handleMentionClick","onMention","handleMuteClick","onMute","onUnmute","account","handleBlockClick","onBlock","onUnblock","handleBlockDomain","onBlockDomain","handleUnblockDomain","onUnblockDomain","split","handleConversationMuteClick","onMuteConversation","handleReport","onReport","handlePinClick","onPin","handleShare","navigator","url","handleEmbed","onEmbed","handleCopy","clipboard","writeText","render","intl","signedIn","permissions","identity","publicStatus","pinnableStatus","mutingConversation","writtenByMe","me","isRemote","menu","text","formatMessage","href","action","dangerous","name","domain","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_FEDERATION","replyIcon","replyIconComponent","ReplyIcon","ReplyAllIcon","reblogPrivate","reblogTitle","reblogIconComponent","RepeatActiveIcon","RepeatPrivateActiveIcon","RepeatIcon","RepeatPrivateIcon","RepeatDisabledIcon","bookmarkTitle","favouriteTitle","jsxDEV","IconButton","classNames","StarIcon","StarBorderIcon","BookmarkIcon","BookmarkBorderIcon","Dropdown","MoreHorizIcon","ActionBar$1","connect","withIdentity","injectIntl","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","params","contextType","isLoading","askReplyConfirmation","trim","pictureInPicture","truncate","str","num","arr","Array","from","slice","join","titleFromStatus","displayName","username","user","attachmentCount","size","Status","ImmutablePureComponent","fullscreen","showMedia","defaultMediaVisibility","loadedStatusId","undefined","handleToggleMediaVisibility","setState","dispatch","toggleFavourite","openModal","modalType","modalProps","type","handlePin","replyCompose","toggleReblog","shiftKey","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","handleOpenMedia","media","index","lang","handleOpenVideo","options","handleHotkeyOpenMedia","preventDefault","startTime","initMuteModal","unmuteStatus","muteStatus","handleToggleHidden","revealStatus","hideStatus","handleToggleAll","statusIds","concat","handleTranslate","undoStatusTranslation","translateStatus","initBlockModal","initReport","handleUnmuteClick","unmuteAccount","handleUnblockClick","unblockAccount","handleBlockDomainClick","initDomainBlockModal","handleUnblockDomainClick","handleHotkeyMoveUp","handleMoveUp","handleHotkeyMoveDown","handleMoveDown","handleHotkeyReply","handleHotkeyFavourite","handleHotkeyBoost","handleHotkeyMention","handleHotkeyOpenProfile","history","handleHotkeyToggleHidden","handleHotkeyToggleSensitive","handleHotkeyTranslate","_selectChild","indexOf","setContainerRef","c","node","setStatusRef","statusNode","onFullScreenChange","isFullscreen","shouldUpdateScroll","prevRouterProps","location","mastodonModalKey","offsetTop","UNSAFE_componentWillMount","fetchStatus","componentDidMount","attachFullscreenListener","_scrollStatusIntoView","UNSAFE_componentWillReceiveProps","nextProps","align_top","container","element","querySelectorAll","scrollTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","map","i","StatusQuoteManager","multiColumn","requestIdleCallback","_a","offset","document","querySelector","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","componentDidUpdate","prevProps","componentWillUnmount","detachFullscreenListener","descendants","remoteHint","Column","LoadingIndicator","BundleColumnError","Fragment","isLocal","isIndexable","TimelineHint","FormattedMessage","handlers","moveUp","moveDown","boost","openProfile","toggleHidden","toggleSensitive","openMedia","onTranslate","ColumnHeader","Icon","VisibilityOffIcon","VisibilityIcon","ScrollContainer","HotKeys","textForScreenReader","DetailedStatus","Helmet","__publicField","propTypes","identityContextPropShape","PropTypes","object","isRequired","func","ImmutablePropTypes","bool","arrayOf","string","contains","inUse","available","WithRouterPropTypes","withRouter"],"mappings":"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"}