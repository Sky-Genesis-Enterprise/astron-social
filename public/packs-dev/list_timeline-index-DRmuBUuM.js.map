{"version":3,"file":"list_timeline-index-DRmuBUuM.js","sources":["../../app/javascript/mastodon/features/list_timeline/index.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport DeleteIcon from '@/material-icons/400-24px/delete.svg?react';\nimport EditIcon from '@/material-icons/400-24px/edit.svg?react';\nimport ListAltIcon from '@/material-icons/400-24px/list_alt.svg?react';\nimport { addColumn, removeColumn, moveColumn } from 'mastodon/actions/columns';\nimport { fetchList } from 'mastodon/actions/lists';\nimport { openModal } from 'mastodon/actions/modal';\nimport { connectListStream } from 'mastodon/actions/streaming';\nimport { expandListTimeline } from 'mastodon/actions/timelines';\nimport Column from 'mastodon/components/column';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport StatusListContainer from 'mastodon/features/ui/containers/status_list_container';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nconst mapStateToProps = (state, props) => ({\n  list: state.getIn(['lists', props.params.id]),\n  hasUnread: state.getIn(['timelines', `list:${props.params.id}`, 'unread']) > 0,\n});\n\nclass ListTimeline extends PureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    columnId: PropTypes.string,\n    hasUnread: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    list: PropTypes.oneOfType([ImmutablePropTypes.map, PropTypes.bool]),\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('LIST', { id: this.props.params.id }));\n      this.props.history.push('/');\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    const { id } = this.props.params;\n\n    dispatch(fetchList(id));\n    dispatch(expandListTimeline(id));\n\n    this.disconnect = dispatch(connectListStream(id));\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    const { dispatch } = this.props;\n    const { id } = nextProps.params;\n\n    if (id !== this.props.params.id) {\n      if (this.disconnect) {\n        this.disconnect();\n        this.disconnect = null;\n      }\n\n      dispatch(fetchList(id));\n      dispatch(expandListTimeline(id));\n\n      this.disconnect = dispatch(connectListStream(id));\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.disconnect) {\n      this.disconnect();\n      this.disconnect = null;\n    }\n  }\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = maxId => {\n    const { id } = this.props.params;\n    this.props.dispatch(expandListTimeline(id, { maxId }));\n  };\n\n  handleDeleteClick = () => {\n    const { dispatch, columnId } = this.props;\n    const { id } = this.props.params;\n\n    dispatch(openModal({ modalType: 'CONFIRM_DELETE_LIST', modalProps: { listId: id, columnId } }));\n  };\n\n  render () {\n    const { hasUnread, columnId, multiColumn, list } = this.props;\n    const { id } = this.props.params;\n    const pinned = !!columnId;\n    const title  = list ? list.get('title') : id;\n\n    if (typeof list === 'undefined') {\n      return (\n        <Column>\n          <div className='scrollable'>\n            <LoadingIndicator />\n          </div>\n        </Column>\n      );\n    } else if (list === false) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={title}>\n        <ColumnHeader\n          icon='list-ul'\n          iconComponent={ListAltIcon}\n          active={hasUnread}\n          title={title}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n        >\n          <div className='column-settings'>\n            <section className='column-header__links'>\n              <Link to={`/lists/${id}/edit`} className='text-btn column-header__setting-btn'>\n                <Icon id='pencil' icon={EditIcon} /> <FormattedMessage id='lists.edit' defaultMessage='Edit list' />\n              </Link>\n\n              <button type='button' className='text-btn column-header__setting-btn' tabIndex={0} onClick={this.handleDeleteClick}>\n                <Icon id='trash' icon={DeleteIcon} /> <FormattedMessage id='lists.delete' defaultMessage='Delete list' />\n              </button>\n            </section>\n          </div>\n        </ColumnHeader>\n\n        <StatusListContainer\n          trackScroll={!pinned}\n          scrollKey={`list_timeline-${columnId}`}\n          timelineId={`list:${id}`}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={<FormattedMessage id='empty_column.list' defaultMessage='There is nothing in this list yet. When members of this list post new statuses, they will appear here.' />}\n          bindToDocument={!multiColumn}\n        />\n\n        <Helmet>\n          <title>{title}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(ListTimeline));\n"],"names":["mapStateToProps","state","props","list","getIn","params","id","hasUnread","ListTimeline","PureComponent","handlePin","columnId","dispatch","removeColumn","addColumn","history","push","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","setRef","c","handleLoadMore","maxId","expandListTimeline","handleDeleteClick","openModal","modalType","modalProps","listId","componentDidMount","fetchList","disconnect","connectListStream","UNSAFE_componentWillReceiveProps","nextProps","componentWillUnmount","render","multiColumn","pinned","title","get","Column","jsxDEV","LoadingIndicator","BundleColumnError","ColumnHeader","ListAltIcon","Link","Icon","EditIcon","FormattedMessage","DeleteIcon","StatusListContainer","Helmet","index","withRouter","connect"],"mappings":"gqEA2BA,MAAMA,EAAkBA,CAACC,EAAOC,KAAW,CACzCC,KAAMF,EAAMG,MAAM,CAAC,QAASF,EAAMG,OAAOC,EAAE,CAAC,EAC5CC,UAAWN,EAAMG,MAAM,CAAC,YAAa,QAAQF,EAAMG,OAAOC,EAAE,GAAI,QAAQ,CAAC,EAAI,CAC/E,GAEA,MAAME,UAAqBC,EAAAA,aAAc,CAAzC,kCAaEC,EAAAA,iBAAYA,IAAM,CAChB,KAAM,CAAEC,SAAAA,EAAUC,SAAAA,CAAAA,EAAa,KAAKV,MAEhCS,EACFC,EAASC,EAAaF,CAAQ,CAAC,GAE/BC,EAASE,EAAU,OAAQ,CAAER,GAAI,KAAKJ,MAAMG,OAAOC,EAAAA,CAAI,CAAC,EACxD,KAAKJ,MAAMa,QAAQC,KAAK,GAAG,EAC7B,GAGFC,EAAAA,kBAAcC,GAAQ,CACpB,KAAM,CAAEP,SAAAA,EAAUC,SAAAA,CAAAA,EAAa,KAAKV,MACpCU,EAASO,EAAWR,EAAUO,CAAG,CAAC,CAAA,GAGpCE,EAAAA,yBAAoBA,IAAM,CACxB,KAAKC,OAAOC,UAAAA,CAAU,GAqCxBC,EAAAA,cAASC,GAAK,CACZ,KAAKH,OAASG,CAAAA,GAGhBC,EAAAA,sBAAiBC,GAAS,CACxB,KAAM,CAAEpB,GAAAA,CAAAA,EAAO,KAAKJ,MAAMG,OAC1B,KAAKH,MAAMU,SAASe,EAAmBrB,EAAI,CAAEoB,MAAAA,CAAAA,CAAO,CAAC,CAAA,GAGvDE,EAAAA,yBAAoBA,IAAM,CACxB,KAAM,CAAEhB,SAAAA,EAAUD,SAAAA,CAAAA,EAAa,KAAKT,MAC9B,CAAEI,GAAAA,CAAAA,EAAO,KAAKJ,MAAMG,OAE1BO,EAASiB,EAAU,CAAEC,UAAW,sBAAuBC,WAAY,CAAEC,OAAQ1B,EAAIK,SAAAA,CAAAA,CAAS,CAAG,CAAC,CAAA,GA/ChGsB,mBAAqB,CACnB,KAAM,CAAErB,SAAAA,GAAa,KAAKV,MACpB,CAAEI,GAAAA,CAAAA,EAAO,KAAKJ,MAAMG,OAE1BO,EAASsB,EAAU5B,CAAE,CAAC,EACtBM,EAASe,EAAmBrB,CAAE,CAAC,EAE/B,KAAK6B,WAAavB,EAASwB,EAAkB9B,CAAE,CAAC,CAAA,CAGlD+B,iCAAkCC,EAAW,CAC3C,KAAM,CAAE1B,SAAAA,GAAa,KAAKV,MACpB,CAAEI,GAAAA,GAAOgC,EAAUjC,OAErBC,IAAO,KAAKJ,MAAMG,OAAOC,KACvB,KAAK6B,aACP,KAAKA,WAAAA,EACL,KAAKA,WAAa,MAGpBvB,EAASsB,EAAU5B,CAAE,CAAC,EACtBM,EAASe,EAAmBrB,CAAE,CAAC,EAE/B,KAAK6B,WAAavB,EAASwB,EAAkB9B,CAAE,CAAC,EAClD,CAGFiC,sBAAwB,CAClB,KAAKJ,aACP,KAAKA,WAAAA,EACL,KAAKA,WAAa,KACpB,CAmBFK,QAAU,CACR,KAAM,CAAEjC,UAAAA,EAAWI,SAAAA,EAAU8B,YAAAA,EAAatC,KAAAA,CAAAA,EAAS,KAAKD,MAClD,CAAEI,GAAAA,CAAAA,EAAO,KAAKJ,MAAMG,OACpBqC,EAAS,CAAC,CAAC/B,EACXgC,EAASxC,EAAOA,EAAKyC,IAAI,OAAO,EAAItC,EAE1C,OAAI,OAAOH,EAAS,aAEf0C,EAAA,CACC,SAAAC,EAAAA,OAAC,OAAI,UAAU,aACb,kBAACC,EAAA,CAAA,EAAD,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAiB,CAAA,EADnB,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAEA,CAAA,EAHF,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAIA,EAEO5C,IAAS,GAEhB2C,EAAAA,OAACE,EAAA,CAAkB,YAAAP,EAA0B,UAAU,SAAA,EAAvD,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAAgE,EAKlEK,SAACD,GAAO,eAAgB,CAACJ,EAAa,IAAK,KAAKlB,OAAQ,MAAOoB,EAC7D,SAAA,CAAAG,EAAAA,OAACG,EAAA,CACC,KAAK,UACL,cAAeC,EACf,OAAQ3C,EACR,MAAAoC,EACA,MAAO,KAAKjC,UACZ,OAAQ,KAAKO,WACb,QAAS,KAAKG,kBACd,OAAAsB,EACA,YAAAD,EAEA,kBAAC,MAAA,CAAI,UAAU,kBACb,SAAAK,EAAAA,OAAC,UAAA,CAAQ,UAAU,uBACjB,SAAA,CAAAA,EAAAA,OAACK,GAAK,GAAI,UAAU7C,CAAE,QAAS,UAAU,sCACvC,SAAA,CAAAwC,SAACM,EAAA,CAAK,GAAG,SAAS,KAAMC,CAAAA,EAAxB,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAiC,EAAG,IAACP,SAACQ,EAAA,CAAiB,GAAE,aAAc,eAAe,WAAA,EAAjD,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAA4D,CAAA,CAAA,EADnG,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAEA,EAEAR,EAAAA,OAAC,SAAA,CAAO,KAAK,SAAS,UAAU,sCAAsC,SAAU,EAAG,QAAS,KAAKlB,kBAC/F,SAAA,CAAAkB,SAACM,EAAA,CAAK,GAAG,QAAQ,KAAMG,CAAAA,EAAvB,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAkC,EAAG,IAACT,SAACQ,EAAA,CAAiB,GAAE,eAAgB,eAAe,aAAA,EAAnD,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAgE,CAAA,CAAA,EADxG,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAEA,CAAA,CAAA,EAPF,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAQA,CAAA,EATF,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAUA,CAAA,EArBF,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAAA,EAwBAR,EAAAA,OAACU,EAAA,CACC,YAAa,CAACd,EACd,UAAW,iBAAiB/B,CAAQ,GACpC,WAAY,QAAQL,CAAE,GACtB,WAAY,KAAKmB,eACjB,aAAcqB,EAAAA,OAACQ,EAAA,CAAiB,GAAE,oBAAqB,eAAe,wGAAA,EAAxD,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAgK,EAC9K,eAAgB,CAACb,CAAAA,EANnB,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAAA,WASCgB,EAAA,CACC,SAAA,CAAAX,EAAAA,OAAC,SAAOH,SAAAA,CAAAA,EAAR,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAc,EACdG,SAAC,OAAA,CAAK,KAAK,SAAS,QAAQ,SAAA,EAA5B,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,EAAA,EAAA,IAAqC,CAAA,CAAA,EAFvC,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAGA,CAAA,CAAA,EArCF,OAAA,GAAA,CAAA,SAAA,kGAAA,WAAA,IAAA,aAAA,CAAA,EAAA,IAsCA,CAAA,CAIN,CAEA,MAAAY,GAAeC,EAAWC,EAAQ5D,CAAe,EAAEQ,CAAY,CAAC"}