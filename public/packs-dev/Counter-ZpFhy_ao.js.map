{"version":3,"file":"Counter-ZpFhy_ao.js","sources":["../../app/javascript/mastodon/components/admin/Counter.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedNumber } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { Sparklines, SparklinesCurve } from 'react-sparklines';\n\nimport api from 'mastodon/api';\nimport { Skeleton } from 'mastodon/components/skeleton';\n\nconst percIncrease = (a, b) => {\n  let percent;\n\n  if (b !== 0) {\n    if (a !== 0) {\n      percent = (b - a) / a;\n    } else {\n      percent = 1;\n    }\n  } else if (b === 0 && a === 0) {\n    percent = 0;\n  } else {\n    percent = - 1;\n  }\n\n  return percent;\n};\n\nexport default class Counter extends PureComponent {\n\n  static propTypes = {\n    measure: PropTypes.string.isRequired,\n    start_at: PropTypes.string.isRequired,\n    end_at: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    href: PropTypes.string,\n    params: PropTypes.object,\n    target: PropTypes.string,\n  };\n\n  state = {\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount () {\n    const { measure, start_at, end_at, params } = this.props;\n\n    api(false).post('/api/v1/admin/measures', { keys: [measure], start_at, end_at, [measure]: params }).then(res => {\n      this.setState({\n        loading: false,\n        data: res.data,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render () {\n    const { label, href, target } = this.props;\n    const { loading, data } = this.state;\n\n    let content;\n\n    if (loading) {\n      content = (\n        <>\n          <span className='sparkline__value__total'><Skeleton width={43} /></span>\n          <span className='sparkline__value__change'><Skeleton width={43} /></span>\n        </>\n      );\n    } else {\n      const measure = data[0];\n      const percentChange = measure.previous_total && percIncrease(measure.previous_total * 1, measure.total * 1);\n\n      content = (\n        <>\n          <span className='sparkline__value__total'>{measure.human_value || <FormattedNumber value={measure.total} />}</span>\n          {measure.previous_total && (<span className={classNames('sparkline__value__change', { positive: percentChange > 0, negative: percentChange < 0 })}>{percentChange > 0 && '+'}<FormattedNumber value={percentChange} style='percent' /></span>)}\n        </>\n      );\n    }\n\n    const inner = (\n      <>\n        <div className='sparkline__value'>\n          {content}\n        </div>\n\n        <div className='sparkline__label'>\n          {label}\n        </div>\n\n        <div className='sparkline__graph'>\n          {!loading && (\n            <Sparklines width={259} height={55} data={data[0].data.map(x => x.value * 1)}>\n              <SparklinesCurve />\n            </Sparklines>\n          )}\n        </div>\n      </>\n    );\n\n    if (href) {\n      return (\n        <a href={href} className='sparkline' target={target}>\n          {inner}\n        </a>\n      );\n    } else {\n      return (\n        <div className='sparkline'>\n          {inner}\n        </div>\n      );\n    }\n  }\n\n}\n"],"names":["percIncrease","a","b","percent","Counter","PureComponent","state","loading","data","componentDidMount","measure","start_at","end_at","params","props","api","post","keys","then","res","setState","catch","err","console","error","render","label","href","target","content","jsxDEV","Fragment","Skeleton","percentChange","previous_total","total","human_value","FormattedNumber","classNames","positive","negative","inner","Sparklines","map","x","value","SparklinesCurve"],"mappings":"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"}