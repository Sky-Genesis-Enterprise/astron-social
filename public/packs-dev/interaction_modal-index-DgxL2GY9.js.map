{"version":3,"file":"interaction_modal-index-DgxL2GY9.js","sources":["../../node_modules/lodash/escapeRegExp.js","../../app/javascript/mastodon/features/interaction_modal/index.tsx"],"sourcesContent":["var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","import { useCallback, useEffect, useState, useRef } from 'react';\n\nimport { FormattedMessage, defineMessages, useIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { escapeRegExp } from 'lodash';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport InsertChartIcon from '@/material-icons/400-24px/insert_chart.svg?react';\nimport PersonAddIcon from '@/material-icons/400-24px/person_add.svg?react';\nimport RepeatIcon from '@/material-icons/400-24px/repeat.svg?react';\nimport ReplyIcon from '@/material-icons/400-24px/reply.svg?react';\nimport StarIcon from '@/material-icons/400-24px/star.svg?react';\nimport { openModal, closeModal } from 'mastodon/actions/modal';\nimport { apiRequest } from 'mastodon/api';\nimport { Button } from 'mastodon/components/button';\nimport { Icon } from 'mastodon/components/icon';\nimport {\n  domain as localDomain,\n  registrationsOpen,\n  sso_redirect,\n} from 'mastodon/initial_state';\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nconst messages = defineMessages({\n  loginPrompt: {\n    id: 'interaction_modal.username_prompt',\n    defaultMessage: 'E.g. {example}',\n  },\n});\n\ninterface LoginFormMessage {\n  type:\n    | 'fetchInteractionURL'\n    | 'fetchInteractionURL-failure'\n    | 'fetchInteractionURL-success';\n  uri_or_domain: string;\n  template?: string;\n}\n\nconst PERSISTENCE_KEY = 'mastodon_home';\n\nconst EXAMPLE_VALUE = 'username@mastodon.social';\n\nconst isValidDomain = (value: string) => {\n  const url = new URL('https:///path');\n  url.hostname = value;\n  return url.hostname === value;\n};\n\nconst valueToDomain = (value: string): string | null => {\n  // If the user starts typing an URL\n  if (/^https?:\\/\\//.test(value)) {\n    try {\n      const url = new URL(value);\n\n      return url.host;\n    } catch {\n      return null;\n    }\n    // If the user writes their full handle including username\n  } else if (value.includes('@')) {\n    const [_, domain, ...other] = value.replace(/^@/, '').split('@');\n\n    if (!domain || other.length > 0) {\n      return null;\n    }\n\n    return valueToDomain(domain);\n  }\n\n  return value;\n};\n\nconst addInputToOptions = (value: string, options: string[]) => {\n  value = value.trim();\n\n  if (value.includes('.') && isValidDomain(value)) {\n    return [value].concat(options.filter((x) => x !== value));\n  }\n\n  return options;\n};\n\nconst isValueValid = (value: string) => {\n  let likelyAcct = false;\n  let url = null;\n\n  if (value.startsWith('/')) {\n    return false;\n  }\n\n  if (value.startsWith('@')) {\n    value = value.slice(1);\n    likelyAcct = true;\n  }\n\n  // The user is in the middle of typing something, do not error out\n  if (value === '') {\n    return true;\n  }\n\n  if (/^https?:\\/\\//.test(value) && !likelyAcct) {\n    url = value;\n  } else {\n    url = `https://${value}`;\n  }\n\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst sendToFrame = (frame: HTMLIFrameElement | null, value: string): void => {\n  if (valueToDomain(value.trim()) === localDomain) {\n    window.location.href = '/auth/sign_in';\n    return;\n  }\n\n  frame?.contentWindow?.postMessage(\n    {\n      type: 'fetchInteractionURL',\n      uri_or_domain: value.trim(),\n    },\n    window.origin,\n  );\n};\n\nconst LoginForm: React.FC<{\n  resourceUrl: string;\n}> = ({ resourceUrl }) => {\n  const intl = useIntl();\n  const [value, setValue] = useState(\n    localStorage.getItem(PERSISTENCE_KEY) ?? '',\n  );\n  const [expanded, setExpanded] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(-1);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(false);\n  const [options, setOptions] = useState<string[]>([]);\n  const [networkOptions, setNetworkOptions] = useState<string[]>([]);\n  const [valueChanged, setValueChanged] = useState(false);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const searchRequestRef = useRef<AbortController | null>(null);\n\n  useEffect(() => {\n    const handleMessage = (event: MessageEvent<LoginFormMessage>) => {\n      if (\n        event.origin !== window.origin ||\n        event.source !== iframeRef.current?.contentWindow\n      ) {\n        return;\n      }\n\n      if (event.data.type === 'fetchInteractionURL-failure') {\n        setIsSubmitting(false);\n        setError(true);\n      } else if (event.data.type === 'fetchInteractionURL-success') {\n        if (event.data.template && /^https?:\\/\\//.test(event.data.template)) {\n          try {\n            const url = new URL(\n              event.data.template.replace(\n                '{uri}',\n                encodeURIComponent(resourceUrl),\n              ),\n            );\n\n            localStorage.setItem(PERSISTENCE_KEY, event.data.uri_or_domain);\n\n            window.location.href = url.toString();\n          } catch {\n            setIsSubmitting(false);\n            setError(true);\n          }\n        } else {\n          setIsSubmitting(false);\n          setError(true);\n        }\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, [resourceUrl, setIsSubmitting, setError]);\n\n  const handleSearch = useDebouncedCallback(\n    (value: string) => {\n      if (searchRequestRef.current) {\n        searchRequestRef.current.abort();\n      }\n\n      const domain = valueToDomain(value.trim());\n\n      if (domain === null || domain.length === 0) {\n        setOptions([]);\n        setNetworkOptions([]);\n        return;\n      }\n\n      searchRequestRef.current = new AbortController();\n\n      void apiRequest<string[] | null>('GET', 'v1/peers/search', {\n        signal: searchRequestRef.current.signal,\n        params: {\n          q: domain,\n        },\n      })\n        .then((data) => {\n          setNetworkOptions(data ?? []);\n          setOptions(addInputToOptions(value, data ?? []));\n          return '';\n        })\n        .catch(() => {\n          // Nothing\n        });\n    },\n    500,\n    { leading: true, trailing: true },\n  );\n\n  const handleChange = useCallback(\n    ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(value);\n      setValueChanged(true);\n      setError(!isValueValid(value));\n      setOptions(addInputToOptions(value, networkOptions));\n      handleSearch(value);\n    },\n    [\n      setError,\n      setValue,\n      setValueChanged,\n      setOptions,\n      networkOptions,\n      handleSearch,\n    ],\n  );\n\n  const handleSubmit = useCallback(() => {\n    setIsSubmitting(true);\n    sendToFrame(iframeRef.current, value);\n  }, [setIsSubmitting, value]);\n\n  const handleFocus = useCallback(() => {\n    setExpanded(true);\n  }, [setExpanded]);\n\n  const handleBlur = useCallback(() => {\n    setExpanded(false);\n  }, [setExpanded]);\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent) => {\n      const selectedOptionValue = options[selectedOption];\n\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n\n          if (options.length > 0) {\n            setSelectedOption((selectedOption) =>\n              Math.min(selectedOption + 1, options.length - 1),\n            );\n          }\n\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n\n          if (options.length > 0) {\n            setSelectedOption((selectedOption) =>\n              Math.max(selectedOption - 1, -1),\n            );\n          }\n\n          break;\n        case 'Enter':\n          e.preventDefault();\n\n          if (selectedOption === -1) {\n            handleSubmit();\n          } else if (options.length > 0 && selectedOptionValue) {\n            setError(false);\n            setValue(selectedOptionValue);\n            setIsSubmitting(true);\n            sendToFrame(iframeRef.current, selectedOptionValue);\n          }\n\n          break;\n      }\n    },\n    [\n      handleSubmit,\n      setSelectedOption,\n      setError,\n      setValue,\n      selectedOption,\n      options,\n    ],\n  );\n\n  const handleOptionClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n\n      const index = Number(e.currentTarget.getAttribute('data-index'));\n      const option = options[index];\n\n      if (!option) {\n        return;\n      }\n\n      setSelectedOption(index);\n      setValue(option);\n      setError(false);\n      setIsSubmitting(true);\n      sendToFrame(iframeRef.current, option);\n    },\n    [options, setSelectedOption, setValue, setError],\n  );\n\n  const domain = (valueToDomain(value) ?? '').trim();\n  const domainRegExp = new RegExp(`(${escapeRegExp(domain)})`, 'gi');\n  const hasPopOut = valueChanged && domain.length > 0 && options.length > 0;\n\n  return (\n    <div\n      className={classNames('interaction-modal__login', {\n        focused: expanded,\n        expanded: hasPopOut,\n        invalid: error,\n      })}\n    >\n      <iframe\n        ref={iframeRef}\n        style={{ display: 'none' }}\n        src='/remote_interaction_helper'\n        sandbox='allow-scripts allow-same-origin'\n        title='remote interaction helper'\n      />\n\n      <div className='interaction-modal__login__input'>\n        <input\n          ref={inputRef}\n          type='text'\n          value={value}\n          placeholder={intl.formatMessage(messages.loginPrompt, {\n            example: EXAMPLE_VALUE,\n          })}\n          aria-label={intl.formatMessage(messages.loginPrompt, {\n            example: EXAMPLE_VALUE,\n          })}\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          autoComplete='off'\n          autoCapitalize='off'\n          spellCheck='false'\n        />\n\n        <Button onClick={handleSubmit} disabled={isSubmitting || error}>\n          <FormattedMessage id='interaction_modal.go' defaultMessage='Go' />\n        </Button>\n      </div>\n\n      {hasPopOut && (\n        <div className='search__popout'>\n          <div className='search__popout__menu'>\n            {options.map((option, i) => (\n              <button\n                key={option}\n                onMouseDown={handleOptionClick}\n                data-index={i}\n                className={classNames('search__popout__menu__item', {\n                  selected: selectedOption === i,\n                })}\n              >\n                {option\n                  .split(domainRegExp)\n                  .map((part, i) =>\n                    part.toLowerCase() === domain.toLowerCase() ? (\n                      <mark key={i}>{part}</mark>\n                    ) : (\n                      <span key={i}>{part}</span>\n                    ),\n                  )}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst InteractionModal: React.FC<{\n  accountId: string;\n  url: string;\n  type: 'reply' | 'reblog' | 'favourite' | 'follow' | 'vote';\n}> = ({ accountId, url, type }) => {\n  const dispatch = useAppDispatch();\n  const displayNameHtml = useAppSelector(\n    (state) => state.accounts.get(accountId)?.display_name_html ?? '',\n  );\n  const signupUrl = useAppSelector(\n    (state) =>\n      (state.server.getIn(['server', 'registrations', 'url'], null) ||\n        '/auth/sign_up') as string,\n  );\n  const name = <bdi dangerouslySetInnerHTML={{ __html: displayNameHtml }} />;\n\n  const handleSignupClick = useCallback(() => {\n    dispatch(\n      closeModal({\n        modalType: undefined,\n        ignoreFocus: false,\n      }),\n    );\n\n    dispatch(\n      openModal({\n        modalType: 'CLOSED_REGISTRATIONS',\n        modalProps: {},\n      }),\n    );\n  }, [dispatch]);\n\n  let title: React.ReactNode,\n    icon: React.ReactNode,\n    actionPrompt: React.ReactNode;\n\n  switch (type) {\n    case 'reply':\n      icon = <Icon id='reply' icon={ReplyIcon} />;\n      title = (\n        <FormattedMessage\n          id='interaction_modal.title.reply'\n          defaultMessage=\"Reply to {name}'s post\"\n          values={{ name }}\n        />\n      );\n      actionPrompt = (\n        <FormattedMessage\n          id='interaction_modal.action.reply'\n          defaultMessage='To continue, you need to reply from your account.'\n        />\n      );\n      break;\n    case 'reblog':\n      icon = <Icon id='retweet' icon={RepeatIcon} />;\n      title = (\n        <FormattedMessage\n          id='interaction_modal.title.reblog'\n          defaultMessage=\"Boost {name}'s post\"\n          values={{ name }}\n        />\n      );\n      actionPrompt = (\n        <FormattedMessage\n          id='interaction_modal.action.reblog'\n          defaultMessage='To continue, you need to reblog from your account.'\n        />\n      );\n      break;\n    case 'favourite':\n      icon = <Icon id='star' icon={StarIcon} />;\n      title = (\n        <FormattedMessage\n          id='interaction_modal.title.favourite'\n          defaultMessage=\"Favorite {name}'s post\"\n          values={{ name }}\n        />\n      );\n      actionPrompt = (\n        <FormattedMessage\n          id='interaction_modal.action.favourite'\n          defaultMessage='To continue, you need to favorite from your account.'\n        />\n      );\n      break;\n    case 'follow':\n      icon = <Icon id='user-plus' icon={PersonAddIcon} />;\n      title = (\n        <FormattedMessage\n          id='interaction_modal.title.follow'\n          defaultMessage='Follow {name}'\n          values={{ name }}\n        />\n      );\n      actionPrompt = (\n        <FormattedMessage\n          id='interaction_modal.action.follow'\n          defaultMessage='To continue, you need to follow from your account.'\n        />\n      );\n      break;\n    case 'vote':\n      icon = <Icon id='tasks' icon={InsertChartIcon} />;\n      title = (\n        <FormattedMessage\n          id='interaction_modal.title.vote'\n          defaultMessage=\"Vote in {name}'s poll\"\n          values={{ name }}\n        />\n      );\n      actionPrompt = (\n        <FormattedMessage\n          id='interaction_modal.action.vote'\n          defaultMessage='To continue, you need to vote from your account.'\n        />\n      );\n      break;\n  }\n\n  let signupButton;\n\n  if (sso_redirect) {\n    signupButton = (\n      <a href={sso_redirect} data-method='post' className='link-button'>\n        <FormattedMessage\n          id='sign_in_banner.create_account'\n          defaultMessage='Create account'\n        />\n      </a>\n    );\n  } else if (registrationsOpen) {\n    signupButton = (\n      <a href={signupUrl} className='link-button'>\n        <FormattedMessage\n          id='sign_in_banner.create_account'\n          defaultMessage='Create account'\n        />\n      </a>\n    );\n  } else {\n    signupButton = (\n      <button className='link-button' onClick={handleSignupClick}>\n        <FormattedMessage\n          id='sign_in_banner.create_account'\n          defaultMessage='Create account'\n        />\n      </button>\n    );\n  }\n\n  return (\n    <div className='modal-root__modal interaction-modal'>\n      <div className='interaction-modal__lead'>\n        <h3>\n          <span className='interaction-modal__icon'>{icon}</span> {title}\n        </h3>\n        <p>{actionPrompt}</p>\n      </div>\n\n      <LoginForm resourceUrl={url} />\n\n      <p>\n        <FormattedMessage\n          id='interaction_modal.no_account_yet'\n          defaultMessage=\"Don't have an account yet?\"\n        />{' '}\n        {signupButton}\n      </p>\n    </div>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default InteractionModal;\n"],"names":["toString","require$$0","reRegExpChar","reHasRegExpChar","escapeRegExp","string","escapeRegExp_1","messages","defineMessages","loginPrompt","id","defaultMessage","PERSISTENCE_KEY","EXAMPLE_VALUE","isValidDomain","value","url","URL","hostname","valueToDomain","test","host","includes","_","domain","other","replace","split","length","addInputToOptions","options","trim","concat","filter","x","isValueValid","likelyAcct","startsWith","slice","sendToFrame","frame","localDomain","window","location","href","contentWindow","postMessage","type","uri_or_domain","origin","LoginForm","resourceUrl","intl","useIntl","setValue","useState","localStorage","getItem","expanded","setExpanded","selectedOption","setSelectedOption","isSubmitting","setIsSubmitting","error","setError","setOptions","networkOptions","setNetworkOptions","valueChanged","setValueChanged","inputRef","useRef","iframeRef","searchRequestRef","useEffect","handleMessage","event","source","current","data","template","encodeURIComponent","setItem","addEventListener","removeEventListener","handleSearch","useDebouncedCallback","abort","AbortController","apiRequest","signal","params","q","then","catch","leading","trailing","handleChange","useCallback","target","handleSubmit","handleFocus","handleBlur","handleKeyDown","e","selectedOptionValue","key","preventDefault","Math","min","max","handleOptionClick","index","Number","currentTarget","getAttribute","option","domainRegExp","RegExp","hasPopOut","jsxDEV","classNames","focused","invalid","display","this","formatMessage","example","Button","FormattedMessage","map","i","selected","part","toLowerCase","InteractionModal","accountId","dispatch","useAppDispatch","displayNameHtml","useAppSelector","state","accounts","get","display_name_html","signupUrl","server","getIn","name","__html","handleSignupClick","closeModal","modalType","undefined","ignoreFocus","openModal","modalProps","title","icon","actionPrompt","Icon","ReplyIcon","RepeatIcon","StarIcon","PersonAddIcon","InsertChartIcon","signupButton","sso_redirect","registrationsOpen"],"mappings":"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","x_google_ignoreList":[0]}