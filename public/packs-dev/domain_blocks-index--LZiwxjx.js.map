{"version":3,"file":"domain_blocks-index--LZiwxjx.js","sources":["../../app/javascript/mastodon/api/domain_blocks.ts","../../app/javascript/mastodon/components/domain.tsx","../../app/javascript/mastodon/features/domain_blocks/index.tsx"],"sourcesContent":["import api, { getLinks } from 'mastodon/api';\n\nexport const apiGetDomainBlocks = async (url?: string) => {\n  const response = await api().request<string[]>({\n    method: 'GET',\n    url: url ?? '/api/v1/domain_blocks',\n  });\n\n  return {\n    domains: response.data,\n    links: getLinks(response),\n  };\n};\n","import { useCallback } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { unblockDomain } from 'mastodon/actions/domain_blocks';\nimport { useAppDispatch } from 'mastodon/store';\n\nimport { Button } from './button';\n\nexport const Domain: React.FC<{\n  domain: string;\n}> = ({ domain }) => {\n  const dispatch = useAppDispatch();\n\n  const handleDomainUnblock = useCallback(() => {\n    dispatch(unblockDomain(domain));\n  }, [dispatch, domain]);\n\n  return (\n    <div className='domain'>\n      <div className='domain__domain-name'>\n        <strong>{domain}</strong>\n      </div>\n\n      <div className='domain__buttons'>\n        <Button onClick={handleDomainUnblock}>\n          <FormattedMessage\n            id='account.unblock_domain_short'\n            defaultMessage='Unblock'\n          />\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useRef, useCallback, useState } from 'react';\n\nimport { defineMessages, useIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport BlockIcon from '@/material-icons/400-24px/block-fill.svg?react';\nimport { apiGetDomainBlocks } from 'mastodon/api/domain_blocks';\nimport { Column } from 'mastodon/components/column';\nimport type { ColumnRef } from 'mastodon/components/column';\nimport { ColumnHeader } from 'mastodon/components/column_header';\nimport { Domain } from 'mastodon/components/domain';\nimport ScrollableList from 'mastodon/components/scrollable_list';\n\nconst messages = defineMessages({\n  heading: { id: 'column.domain_blocks', defaultMessage: 'Blocked domains' },\n});\n\nconst Blocks: React.FC<{ multiColumn: boolean }> = ({ multiColumn }) => {\n  const intl = useIntl();\n  const [domains, setDomains] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [next, setNext] = useState<string | undefined>();\n  const hasMore = !!next;\n  const columnRef = useRef<ColumnRef>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    void apiGetDomainBlocks()\n      .then(({ domains, links }) => {\n        const next = links.refs.find((link) => link.rel === 'next');\n\n        setLoading(false);\n        setDomains(domains);\n        setNext(next?.uri);\n\n        return '';\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  }, [setLoading, setDomains, setNext]);\n\n  const handleLoadMore = useCallback(() => {\n    setLoading(true);\n\n    void apiGetDomainBlocks(next)\n      .then(({ domains, links }) => {\n        const next = links.refs.find((link) => link.rel === 'next');\n\n        setLoading(false);\n        setDomains((previousDomains) => [...previousDomains, ...domains]);\n        setNext(next?.uri);\n\n        return '';\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  }, [setLoading, setDomains, setNext, next]);\n\n  const handleHeaderClick = useCallback(() => {\n    columnRef.current?.scrollTop();\n  }, []);\n\n  const emptyMessage = (\n    <FormattedMessage\n      id='empty_column.domain_blocks'\n      defaultMessage='There are no blocked domains yet.'\n    />\n  );\n\n  return (\n    <Column\n      bindToDocument={!multiColumn}\n      ref={columnRef}\n      label={intl.formatMessage(messages.heading)}\n    >\n      <ColumnHeader\n        icon='ban'\n        iconComponent={BlockIcon}\n        title={intl.formatMessage(messages.heading)}\n        onClick={handleHeaderClick}\n        multiColumn={multiColumn}\n        showBackButton\n      />\n\n      <ScrollableList\n        scrollKey='domain_blocks'\n        onLoadMore={handleLoadMore}\n        hasMore={hasMore}\n        isLoading={loading}\n        showLoading={loading && domains.length === 0}\n        emptyMessage={emptyMessage}\n        trackScroll={!multiColumn}\n        bindToDocument={!multiColumn}\n      >\n        {domains.map((domain) => (\n          <Domain key={domain} domain={domain} />\n        ))}\n      </ScrollableList>\n\n      <Helmet>\n        <title>{intl.formatMessage(messages.heading)}</title>\n        <meta name='robots' content='noindex' />\n      </Helmet>\n    </Column>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default Blocks;\n"],"names":["apiGetDomainBlocks","url","response","api","request","method","domains","data","links","getLinks","Domain","domain","dispatch","useAppDispatch","handleDomainUnblock","useCallback","unblockDomain","jsxDEV","this","Button","FormattedMessage","messages","defineMessages","heading","id","defaultMessage","Blocks","multiColumn","intl","useIntl","setDomains","useState","loading","setLoading","next","setNext","hasMore","columnRef","useRef","useEffect","then","refs","find","link","rel","uri","catch","handleLoadMore","previousDomains","handleHeaderClick","current","scrollTop","emptyMessage","Column","formatMessage","ColumnHeader","BlockIcon","ScrollableList","length","map","Helmet"],"mappings":"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"}